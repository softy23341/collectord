// Code generated by go-swagger; DO NOT EDIT.

package medias

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetMediasHandlerFunc turns a function with the right signature into a get medias handler
type GetMediasHandlerFunc func(GetMediasParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetMediasHandlerFunc) Handle(params GetMediasParams) middleware.Responder {
	return fn(params)
}

// GetMediasHandler interface for that can handle valid get medias params
type GetMediasHandler interface {
	Handle(GetMediasParams) middleware.Responder
}

// NewGetMedias creates a new http.Handler for the get medias operation
func NewGetMedias(ctx *middleware.Context, handler GetMediasHandler) *GetMedias {
	return &GetMedias{Context: ctx, Handler: handler}
}

/*GetMedias swagger:route GET /medias Medias getMedias

get media

*/
type GetMedias struct {
	Context *middleware.Context
	Handler GetMediasHandler
}

func (o *GetMedias) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetMediasParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
