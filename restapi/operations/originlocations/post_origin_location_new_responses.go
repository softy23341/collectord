// Code generated by go-swagger; DO NOT EDIT.

package originlocations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.softndit.com/collector/backend/models"
)

// PostOriginLocationNewOKCode is the HTTP code returned for type PostOriginLocationNewOK
const PostOriginLocationNewOKCode int = 200

/*PostOriginLocationNewOK Success

swagger:response postOriginLocationNewOK
*/
type PostOriginLocationNewOK struct {

	/*
	  In: Body
	*/
	Payload *models.ACreateOriginLocation `json:"body,omitempty"`
}

// NewPostOriginLocationNewOK creates PostOriginLocationNewOK with default headers values
func NewPostOriginLocationNewOK() *PostOriginLocationNewOK {

	return &PostOriginLocationNewOK{}
}

// WithPayload adds the payload to the post origin location new o k response
func (o *PostOriginLocationNewOK) WithPayload(payload *models.ACreateOriginLocation) *PostOriginLocationNewOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post origin location new o k response
func (o *PostOriginLocationNewOK) SetPayload(payload *models.ACreateOriginLocation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostOriginLocationNewOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostOriginLocationNewForbiddenCode is the HTTP code returned for type PostOriginLocationNewForbidden
const PostOriginLocationNewForbiddenCode int = 403

/*PostOriginLocationNewForbidden access forbidden

swagger:response postOriginLocationNewForbidden
*/
type PostOriginLocationNewForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostOriginLocationNewForbidden creates PostOriginLocationNewForbidden with default headers values
func NewPostOriginLocationNewForbidden() *PostOriginLocationNewForbidden {

	return &PostOriginLocationNewForbidden{}
}

// WithPayload adds the payload to the post origin location new forbidden response
func (o *PostOriginLocationNewForbidden) WithPayload(payload *models.Error) *PostOriginLocationNewForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post origin location new forbidden response
func (o *PostOriginLocationNewForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostOriginLocationNewForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostOriginLocationNewConflictCode is the HTTP code returned for type PostOriginLocationNewConflict
const PostOriginLocationNewConflictCode int = 409

/*PostOriginLocationNewConflict originLocation already present

swagger:response postOriginLocationNewConflict
*/
type PostOriginLocationNewConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostOriginLocationNewConflict creates PostOriginLocationNewConflict with default headers values
func NewPostOriginLocationNewConflict() *PostOriginLocationNewConflict {

	return &PostOriginLocationNewConflict{}
}

// WithPayload adds the payload to the post origin location new conflict response
func (o *PostOriginLocationNewConflict) WithPayload(payload *models.Error) *PostOriginLocationNewConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post origin location new conflict response
func (o *PostOriginLocationNewConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostOriginLocationNewConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostOriginLocationNewDefault Unexpected error

swagger:response postOriginLocationNewDefault
*/
type PostOriginLocationNewDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostOriginLocationNewDefault creates PostOriginLocationNewDefault with default headers values
func NewPostOriginLocationNewDefault(code int) *PostOriginLocationNewDefault {
	if code <= 0 {
		code = 500
	}

	return &PostOriginLocationNewDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post origin location new default response
func (o *PostOriginLocationNewDefault) WithStatusCode(code int) *PostOriginLocationNewDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post origin location new default response
func (o *PostOriginLocationNewDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post origin location new default response
func (o *PostOriginLocationNewDefault) WithPayload(payload *models.Error) *PostOriginLocationNewDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post origin location new default response
func (o *PostOriginLocationNewDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostOriginLocationNewDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
