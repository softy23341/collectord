// Code generated by go-swagger; DO NOT EDIT.

package originlocations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.softndit.com/collector/backend/models"
)

// PostOriginLocationIDUpdateNoContentCode is the HTTP code returned for type PostOriginLocationIDUpdateNoContent
const PostOriginLocationIDUpdateNoContentCode int = 204

/*PostOriginLocationIDUpdateNoContent success

swagger:response postOriginLocationIdUpdateNoContent
*/
type PostOriginLocationIDUpdateNoContent struct {
}

// NewPostOriginLocationIDUpdateNoContent creates PostOriginLocationIDUpdateNoContent with default headers values
func NewPostOriginLocationIDUpdateNoContent() *PostOriginLocationIDUpdateNoContent {

	return &PostOriginLocationIDUpdateNoContent{}
}

// WriteResponse to the client
func (o *PostOriginLocationIDUpdateNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// PostOriginLocationIDUpdateForbiddenCode is the HTTP code returned for type PostOriginLocationIDUpdateForbidden
const PostOriginLocationIDUpdateForbiddenCode int = 403

/*PostOriginLocationIDUpdateForbidden access forbidden

swagger:response postOriginLocationIdUpdateForbidden
*/
type PostOriginLocationIDUpdateForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostOriginLocationIDUpdateForbidden creates PostOriginLocationIDUpdateForbidden with default headers values
func NewPostOriginLocationIDUpdateForbidden() *PostOriginLocationIDUpdateForbidden {

	return &PostOriginLocationIDUpdateForbidden{}
}

// WithPayload adds the payload to the post origin location Id update forbidden response
func (o *PostOriginLocationIDUpdateForbidden) WithPayload(payload *models.Error) *PostOriginLocationIDUpdateForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post origin location Id update forbidden response
func (o *PostOriginLocationIDUpdateForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostOriginLocationIDUpdateForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostOriginLocationIDUpdateNotFoundCode is the HTTP code returned for type PostOriginLocationIDUpdateNotFound
const PostOriginLocationIDUpdateNotFoundCode int = 404

/*PostOriginLocationIDUpdateNotFound not found

swagger:response postOriginLocationIdUpdateNotFound
*/
type PostOriginLocationIDUpdateNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostOriginLocationIDUpdateNotFound creates PostOriginLocationIDUpdateNotFound with default headers values
func NewPostOriginLocationIDUpdateNotFound() *PostOriginLocationIDUpdateNotFound {

	return &PostOriginLocationIDUpdateNotFound{}
}

// WithPayload adds the payload to the post origin location Id update not found response
func (o *PostOriginLocationIDUpdateNotFound) WithPayload(payload *models.Error) *PostOriginLocationIDUpdateNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post origin location Id update not found response
func (o *PostOriginLocationIDUpdateNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostOriginLocationIDUpdateNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostOriginLocationIDUpdateConflictCode is the HTTP code returned for type PostOriginLocationIDUpdateConflict
const PostOriginLocationIDUpdateConflictCode int = 409

/*PostOriginLocationIDUpdateConflict origin location already present

swagger:response postOriginLocationIdUpdateConflict
*/
type PostOriginLocationIDUpdateConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostOriginLocationIDUpdateConflict creates PostOriginLocationIDUpdateConflict with default headers values
func NewPostOriginLocationIDUpdateConflict() *PostOriginLocationIDUpdateConflict {

	return &PostOriginLocationIDUpdateConflict{}
}

// WithPayload adds the payload to the post origin location Id update conflict response
func (o *PostOriginLocationIDUpdateConflict) WithPayload(payload *models.Error) *PostOriginLocationIDUpdateConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post origin location Id update conflict response
func (o *PostOriginLocationIDUpdateConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostOriginLocationIDUpdateConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostOriginLocationIDUpdateDefault Unexpected error

swagger:response postOriginLocationIdUpdateDefault
*/
type PostOriginLocationIDUpdateDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostOriginLocationIDUpdateDefault creates PostOriginLocationIDUpdateDefault with default headers values
func NewPostOriginLocationIDUpdateDefault(code int) *PostOriginLocationIDUpdateDefault {
	if code <= 0 {
		code = 500
	}

	return &PostOriginLocationIDUpdateDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post origin location ID update default response
func (o *PostOriginLocationIDUpdateDefault) WithStatusCode(code int) *PostOriginLocationIDUpdateDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post origin location ID update default response
func (o *PostOriginLocationIDUpdateDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post origin location ID update default response
func (o *PostOriginLocationIDUpdateDefault) WithPayload(payload *models.Error) *PostOriginLocationIDUpdateDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post origin location ID update default response
func (o *PostOriginLocationIDUpdateDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostOriginLocationIDUpdateDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
