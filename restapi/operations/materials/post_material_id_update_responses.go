// Code generated by go-swagger; DO NOT EDIT.

package materials

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.softndit.com/collector/backend/models"
)

// PostMaterialIDUpdateNoContentCode is the HTTP code returned for type PostMaterialIDUpdateNoContent
const PostMaterialIDUpdateNoContentCode int = 204

/*PostMaterialIDUpdateNoContent success

swagger:response postMaterialIdUpdateNoContent
*/
type PostMaterialIDUpdateNoContent struct {
}

// NewPostMaterialIDUpdateNoContent creates PostMaterialIDUpdateNoContent with default headers values
func NewPostMaterialIDUpdateNoContent() *PostMaterialIDUpdateNoContent {

	return &PostMaterialIDUpdateNoContent{}
}

// WriteResponse to the client
func (o *PostMaterialIDUpdateNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// PostMaterialIDUpdateForbiddenCode is the HTTP code returned for type PostMaterialIDUpdateForbidden
const PostMaterialIDUpdateForbiddenCode int = 403

/*PostMaterialIDUpdateForbidden access forbidden

swagger:response postMaterialIdUpdateForbidden
*/
type PostMaterialIDUpdateForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostMaterialIDUpdateForbidden creates PostMaterialIDUpdateForbidden with default headers values
func NewPostMaterialIDUpdateForbidden() *PostMaterialIDUpdateForbidden {

	return &PostMaterialIDUpdateForbidden{}
}

// WithPayload adds the payload to the post material Id update forbidden response
func (o *PostMaterialIDUpdateForbidden) WithPayload(payload *models.Error) *PostMaterialIDUpdateForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post material Id update forbidden response
func (o *PostMaterialIDUpdateForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostMaterialIDUpdateForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostMaterialIDUpdateNotFoundCode is the HTTP code returned for type PostMaterialIDUpdateNotFound
const PostMaterialIDUpdateNotFoundCode int = 404

/*PostMaterialIDUpdateNotFound not found

swagger:response postMaterialIdUpdateNotFound
*/
type PostMaterialIDUpdateNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostMaterialIDUpdateNotFound creates PostMaterialIDUpdateNotFound with default headers values
func NewPostMaterialIDUpdateNotFound() *PostMaterialIDUpdateNotFound {

	return &PostMaterialIDUpdateNotFound{}
}

// WithPayload adds the payload to the post material Id update not found response
func (o *PostMaterialIDUpdateNotFound) WithPayload(payload *models.Error) *PostMaterialIDUpdateNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post material Id update not found response
func (o *PostMaterialIDUpdateNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostMaterialIDUpdateNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostMaterialIDUpdateConflictCode is the HTTP code returned for type PostMaterialIDUpdateConflict
const PostMaterialIDUpdateConflictCode int = 409

/*PostMaterialIDUpdateConflict material already present

swagger:response postMaterialIdUpdateConflict
*/
type PostMaterialIDUpdateConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostMaterialIDUpdateConflict creates PostMaterialIDUpdateConflict with default headers values
func NewPostMaterialIDUpdateConflict() *PostMaterialIDUpdateConflict {

	return &PostMaterialIDUpdateConflict{}
}

// WithPayload adds the payload to the post material Id update conflict response
func (o *PostMaterialIDUpdateConflict) WithPayload(payload *models.Error) *PostMaterialIDUpdateConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post material Id update conflict response
func (o *PostMaterialIDUpdateConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostMaterialIDUpdateConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostMaterialIDUpdateDefault Unexpected error

swagger:response postMaterialIdUpdateDefault
*/
type PostMaterialIDUpdateDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostMaterialIDUpdateDefault creates PostMaterialIDUpdateDefault with default headers values
func NewPostMaterialIDUpdateDefault(code int) *PostMaterialIDUpdateDefault {
	if code <= 0 {
		code = 500
	}

	return &PostMaterialIDUpdateDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post material ID update default response
func (o *PostMaterialIDUpdateDefault) WithStatusCode(code int) *PostMaterialIDUpdateDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post material ID update default response
func (o *PostMaterialIDUpdateDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post material ID update default response
func (o *PostMaterialIDUpdateDefault) WithPayload(payload *models.Error) *PostMaterialIDUpdateDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post material ID update default response
func (o *PostMaterialIDUpdateDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostMaterialIDUpdateDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
