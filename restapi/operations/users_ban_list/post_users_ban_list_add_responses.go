// Code generated by go-swagger; DO NOT EDIT.

package users_ban_list

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.softndit.com/collector/backend/models"
)

// PostUsersBanListAddNoContentCode is the HTTP code returned for type PostUsersBanListAddNoContent
const PostUsersBanListAddNoContentCode int = 204

/*PostUsersBanListAddNoContent email was added to ban-list

swagger:response postUsersBanListAddNoContent
*/
type PostUsersBanListAddNoContent struct {
}

// NewPostUsersBanListAddNoContent creates PostUsersBanListAddNoContent with default headers values
func NewPostUsersBanListAddNoContent() *PostUsersBanListAddNoContent {

	return &PostUsersBanListAddNoContent{}
}

// WriteResponse to the client
func (o *PostUsersBanListAddNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// PostUsersBanListAddForbiddenCode is the HTTP code returned for type PostUsersBanListAddForbidden
const PostUsersBanListAddForbiddenCode int = 403

/*PostUsersBanListAddForbidden Forbidden

swagger:response postUsersBanListAddForbidden
*/
type PostUsersBanListAddForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostUsersBanListAddForbidden creates PostUsersBanListAddForbidden with default headers values
func NewPostUsersBanListAddForbidden() *PostUsersBanListAddForbidden {

	return &PostUsersBanListAddForbidden{}
}

// WithPayload adds the payload to the post users ban list add forbidden response
func (o *PostUsersBanListAddForbidden) WithPayload(payload *models.Error) *PostUsersBanListAddForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post users ban list add forbidden response
func (o *PostUsersBanListAddForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUsersBanListAddForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostUsersBanListAddNotFoundCode is the HTTP code returned for type PostUsersBanListAddNotFound
const PostUsersBanListAddNotFoundCode int = 404

/*PostUsersBanListAddNotFound User not found

swagger:response postUsersBanListAddNotFound
*/
type PostUsersBanListAddNotFound struct {
}

// NewPostUsersBanListAddNotFound creates PostUsersBanListAddNotFound with default headers values
func NewPostUsersBanListAddNotFound() *PostUsersBanListAddNotFound {

	return &PostUsersBanListAddNotFound{}
}

// WriteResponse to the client
func (o *PostUsersBanListAddNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

/*PostUsersBanListAddDefault Unexpected error

swagger:response postUsersBanListAddDefault
*/
type PostUsersBanListAddDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostUsersBanListAddDefault creates PostUsersBanListAddDefault with default headers values
func NewPostUsersBanListAddDefault(code int) *PostUsersBanListAddDefault {
	if code <= 0 {
		code = 500
	}

	return &PostUsersBanListAddDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post users ban list add default response
func (o *PostUsersBanListAddDefault) WithStatusCode(code int) *PostUsersBanListAddDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post users ban list add default response
func (o *PostUsersBanListAddDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post users ban list add default response
func (o *PostUsersBanListAddDefault) WithPayload(payload *models.Error) *PostUsersBanListAddDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post users ban list add default response
func (o *PostUsersBanListAddDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostUsersBanListAddDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
