// Code generated by go-swagger; DO NOT EDIT.

package actors

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.softndit.com/collector/backend/models"
)

// DeleteActorIDDeleteNoContentCode is the HTTP code returned for type DeleteActorIDDeleteNoContent
const DeleteActorIDDeleteNoContentCode int = 204

/*DeleteActorIDDeleteNoContent succes

swagger:response deleteActorIdDeleteNoContent
*/
type DeleteActorIDDeleteNoContent struct {
}

// NewDeleteActorIDDeleteNoContent creates DeleteActorIDDeleteNoContent with default headers values
func NewDeleteActorIDDeleteNoContent() *DeleteActorIDDeleteNoContent {

	return &DeleteActorIDDeleteNoContent{}
}

// WriteResponse to the client
func (o *DeleteActorIDDeleteNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DeleteActorIDDeleteForbiddenCode is the HTTP code returned for type DeleteActorIDDeleteForbidden
const DeleteActorIDDeleteForbiddenCode int = 403

/*DeleteActorIDDeleteForbidden Forbidden

swagger:response deleteActorIdDeleteForbidden
*/
type DeleteActorIDDeleteForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteActorIDDeleteForbidden creates DeleteActorIDDeleteForbidden with default headers values
func NewDeleteActorIDDeleteForbidden() *DeleteActorIDDeleteForbidden {

	return &DeleteActorIDDeleteForbidden{}
}

// WithPayload adds the payload to the delete actor Id delete forbidden response
func (o *DeleteActorIDDeleteForbidden) WithPayload(payload *models.Error) *DeleteActorIDDeleteForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete actor Id delete forbidden response
func (o *DeleteActorIDDeleteForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteActorIDDeleteForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteActorIDDeleteNotFoundCode is the HTTP code returned for type DeleteActorIDDeleteNotFound
const DeleteActorIDDeleteNotFoundCode int = 404

/*DeleteActorIDDeleteNotFound cant find actor

swagger:response deleteActorIdDeleteNotFound
*/
type DeleteActorIDDeleteNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteActorIDDeleteNotFound creates DeleteActorIDDeleteNotFound with default headers values
func NewDeleteActorIDDeleteNotFound() *DeleteActorIDDeleteNotFound {

	return &DeleteActorIDDeleteNotFound{}
}

// WithPayload adds the payload to the delete actor Id delete not found response
func (o *DeleteActorIDDeleteNotFound) WithPayload(payload *models.Error) *DeleteActorIDDeleteNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete actor Id delete not found response
func (o *DeleteActorIDDeleteNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteActorIDDeleteNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*DeleteActorIDDeleteDefault Unexpected error

swagger:response deleteActorIdDeleteDefault
*/
type DeleteActorIDDeleteDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteActorIDDeleteDefault creates DeleteActorIDDeleteDefault with default headers values
func NewDeleteActorIDDeleteDefault(code int) *DeleteActorIDDeleteDefault {
	if code <= 0 {
		code = 500
	}

	return &DeleteActorIDDeleteDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete actor ID delete default response
func (o *DeleteActorIDDeleteDefault) WithStatusCode(code int) *DeleteActorIDDeleteDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete actor ID delete default response
func (o *DeleteActorIDDeleteDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete actor ID delete default response
func (o *DeleteActorIDDeleteDefault) WithPayload(payload *models.Error) *DeleteActorIDDeleteDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete actor ID delete default response
func (o *DeleteActorIDDeleteDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteActorIDDeleteDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
