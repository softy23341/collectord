// Code generated by go-swagger; DO NOT EDIT.

package public_objects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetPublicObjectsIDHandlerFunc turns a function with the right signature into a get public objects ID handler
type GetPublicObjectsIDHandlerFunc func(GetPublicObjectsIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetPublicObjectsIDHandlerFunc) Handle(params GetPublicObjectsIDParams) middleware.Responder {
	return fn(params)
}

// GetPublicObjectsIDHandler interface for that can handle valid get public objects ID params
type GetPublicObjectsIDHandler interface {
	Handle(GetPublicObjectsIDParams) middleware.Responder
}

// NewGetPublicObjectsID creates a new http.Handler for the get public objects ID operation
func NewGetPublicObjectsID(ctx *middleware.Context, handler GetPublicObjectsIDHandler) *GetPublicObjectsID {
	return &GetPublicObjectsID{Context: ctx, Handler: handler}
}

/*GetPublicObjectsID swagger:route GET /public/objects/{ID} Public Objects getPublicObjectsId

Get public object by ID

*/
type GetPublicObjectsID struct {
	Context *middleware.Context
	Handler GetPublicObjectsIDHandler
}

func (o *GetPublicObjectsID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetPublicObjectsIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
