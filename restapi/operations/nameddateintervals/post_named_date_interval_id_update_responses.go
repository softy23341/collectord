// Code generated by go-swagger; DO NOT EDIT.

package nameddateintervals

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.softndit.com/collector/backend/models"
)

// PostNamedDateIntervalIDUpdateNoContentCode is the HTTP code returned for type PostNamedDateIntervalIDUpdateNoContent
const PostNamedDateIntervalIDUpdateNoContentCode int = 204

/*PostNamedDateIntervalIDUpdateNoContent success

swagger:response postNamedDateIntervalIdUpdateNoContent
*/
type PostNamedDateIntervalIDUpdateNoContent struct {
}

// NewPostNamedDateIntervalIDUpdateNoContent creates PostNamedDateIntervalIDUpdateNoContent with default headers values
func NewPostNamedDateIntervalIDUpdateNoContent() *PostNamedDateIntervalIDUpdateNoContent {

	return &PostNamedDateIntervalIDUpdateNoContent{}
}

// WriteResponse to the client
func (o *PostNamedDateIntervalIDUpdateNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// PostNamedDateIntervalIDUpdateForbiddenCode is the HTTP code returned for type PostNamedDateIntervalIDUpdateForbidden
const PostNamedDateIntervalIDUpdateForbiddenCode int = 403

/*PostNamedDateIntervalIDUpdateForbidden access forbidden

swagger:response postNamedDateIntervalIdUpdateForbidden
*/
type PostNamedDateIntervalIDUpdateForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostNamedDateIntervalIDUpdateForbidden creates PostNamedDateIntervalIDUpdateForbidden with default headers values
func NewPostNamedDateIntervalIDUpdateForbidden() *PostNamedDateIntervalIDUpdateForbidden {

	return &PostNamedDateIntervalIDUpdateForbidden{}
}

// WithPayload adds the payload to the post named date interval Id update forbidden response
func (o *PostNamedDateIntervalIDUpdateForbidden) WithPayload(payload *models.Error) *PostNamedDateIntervalIDUpdateForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post named date interval Id update forbidden response
func (o *PostNamedDateIntervalIDUpdateForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostNamedDateIntervalIDUpdateForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostNamedDateIntervalIDUpdateNotFoundCode is the HTTP code returned for type PostNamedDateIntervalIDUpdateNotFound
const PostNamedDateIntervalIDUpdateNotFoundCode int = 404

/*PostNamedDateIntervalIDUpdateNotFound not found

swagger:response postNamedDateIntervalIdUpdateNotFound
*/
type PostNamedDateIntervalIDUpdateNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostNamedDateIntervalIDUpdateNotFound creates PostNamedDateIntervalIDUpdateNotFound with default headers values
func NewPostNamedDateIntervalIDUpdateNotFound() *PostNamedDateIntervalIDUpdateNotFound {

	return &PostNamedDateIntervalIDUpdateNotFound{}
}

// WithPayload adds the payload to the post named date interval Id update not found response
func (o *PostNamedDateIntervalIDUpdateNotFound) WithPayload(payload *models.Error) *PostNamedDateIntervalIDUpdateNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post named date interval Id update not found response
func (o *PostNamedDateIntervalIDUpdateNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostNamedDateIntervalIDUpdateNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostNamedDateIntervalIDUpdateConflictCode is the HTTP code returned for type PostNamedDateIntervalIDUpdateConflict
const PostNamedDateIntervalIDUpdateConflictCode int = 409

/*PostNamedDateIntervalIDUpdateConflict named date interval already present

swagger:response postNamedDateIntervalIdUpdateConflict
*/
type PostNamedDateIntervalIDUpdateConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostNamedDateIntervalIDUpdateConflict creates PostNamedDateIntervalIDUpdateConflict with default headers values
func NewPostNamedDateIntervalIDUpdateConflict() *PostNamedDateIntervalIDUpdateConflict {

	return &PostNamedDateIntervalIDUpdateConflict{}
}

// WithPayload adds the payload to the post named date interval Id update conflict response
func (o *PostNamedDateIntervalIDUpdateConflict) WithPayload(payload *models.Error) *PostNamedDateIntervalIDUpdateConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post named date interval Id update conflict response
func (o *PostNamedDateIntervalIDUpdateConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostNamedDateIntervalIDUpdateConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostNamedDateIntervalIDUpdateUnprocessableEntityCode is the HTTP code returned for type PostNamedDateIntervalIDUpdateUnprocessableEntity
const PostNamedDateIntervalIDUpdateUnprocessableEntityCode int = 422

/*PostNamedDateIntervalIDUpdateUnprocessableEntity invalid format

swagger:response postNamedDateIntervalIdUpdateUnprocessableEntity
*/
type PostNamedDateIntervalIDUpdateUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostNamedDateIntervalIDUpdateUnprocessableEntity creates PostNamedDateIntervalIDUpdateUnprocessableEntity with default headers values
func NewPostNamedDateIntervalIDUpdateUnprocessableEntity() *PostNamedDateIntervalIDUpdateUnprocessableEntity {

	return &PostNamedDateIntervalIDUpdateUnprocessableEntity{}
}

// WithPayload adds the payload to the post named date interval Id update unprocessable entity response
func (o *PostNamedDateIntervalIDUpdateUnprocessableEntity) WithPayload(payload *models.Error) *PostNamedDateIntervalIDUpdateUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post named date interval Id update unprocessable entity response
func (o *PostNamedDateIntervalIDUpdateUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostNamedDateIntervalIDUpdateUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostNamedDateIntervalIDUpdateDefault Unexpected error

swagger:response postNamedDateIntervalIdUpdateDefault
*/
type PostNamedDateIntervalIDUpdateDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostNamedDateIntervalIDUpdateDefault creates PostNamedDateIntervalIDUpdateDefault with default headers values
func NewPostNamedDateIntervalIDUpdateDefault(code int) *PostNamedDateIntervalIDUpdateDefault {
	if code <= 0 {
		code = 500
	}

	return &PostNamedDateIntervalIDUpdateDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post named date interval ID update default response
func (o *PostNamedDateIntervalIDUpdateDefault) WithStatusCode(code int) *PostNamedDateIntervalIDUpdateDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post named date interval ID update default response
func (o *PostNamedDateIntervalIDUpdateDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post named date interval ID update default response
func (o *PostNamedDateIntervalIDUpdateDefault) WithPayload(payload *models.Error) *PostNamedDateIntervalIDUpdateDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post named date interval ID update default response
func (o *PostNamedDateIntervalIDUpdateDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostNamedDateIntervalIDUpdateDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
