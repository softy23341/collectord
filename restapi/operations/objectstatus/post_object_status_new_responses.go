// Code generated by go-swagger; DO NOT EDIT.

package objectstatus

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.softndit.com/collector/backend/models"
)

// PostObjectStatusNewOKCode is the HTTP code returned for type PostObjectStatusNewOK
const PostObjectStatusNewOKCode int = 200

/*PostObjectStatusNewOK success

swagger:response postObjectStatusNewOK
*/
type PostObjectStatusNewOK struct {

	/*
	  In: Body
	*/
	Payload *models.ACreateObjectStatus `json:"body,omitempty"`
}

// NewPostObjectStatusNewOK creates PostObjectStatusNewOK with default headers values
func NewPostObjectStatusNewOK() *PostObjectStatusNewOK {

	return &PostObjectStatusNewOK{}
}

// WithPayload adds the payload to the post object status new o k response
func (o *PostObjectStatusNewOK) WithPayload(payload *models.ACreateObjectStatus) *PostObjectStatusNewOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post object status new o k response
func (o *PostObjectStatusNewOK) SetPayload(payload *models.ACreateObjectStatus) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostObjectStatusNewOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostObjectStatusNewDefault Unexpected error

swagger:response postObjectStatusNewDefault
*/
type PostObjectStatusNewDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostObjectStatusNewDefault creates PostObjectStatusNewDefault with default headers values
func NewPostObjectStatusNewDefault(code int) *PostObjectStatusNewDefault {
	if code <= 0 {
		code = 500
	}

	return &PostObjectStatusNewDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post object status new default response
func (o *PostObjectStatusNewDefault) WithStatusCode(code int) *PostObjectStatusNewDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post object status new default response
func (o *PostObjectStatusNewDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post object status new default response
func (o *PostObjectStatusNewDefault) WithPayload(payload *models.Error) *PostObjectStatusNewDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post object status new default response
func (o *PostObjectStatusNewDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostObjectStatusNewDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
