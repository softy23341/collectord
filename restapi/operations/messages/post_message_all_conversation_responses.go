// Code generated by go-swagger; DO NOT EDIT.

package messages

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.softndit.com/collector/backend/models"
)

// PostMessageAllConversationOKCode is the HTTP code returned for type PostMessageAllConversationOK
const PostMessageAllConversationOKCode int = 200

/*PostMessageAllConversationOK Conversations with last messages

swagger:response postMessageAllConversationOK
*/
type PostMessageAllConversationOK struct {

	/*
	  In: Body
	*/
	Payload *models.AGetAllConversation `json:"body,omitempty"`
}

// NewPostMessageAllConversationOK creates PostMessageAllConversationOK with default headers values
func NewPostMessageAllConversationOK() *PostMessageAllConversationOK {

	return &PostMessageAllConversationOK{}
}

// WithPayload adds the payload to the post message all conversation o k response
func (o *PostMessageAllConversationOK) WithPayload(payload *models.AGetAllConversation) *PostMessageAllConversationOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post message all conversation o k response
func (o *PostMessageAllConversationOK) SetPayload(payload *models.AGetAllConversation) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostMessageAllConversationOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostMessageAllConversationForbiddenCode is the HTTP code returned for type PostMessageAllConversationForbidden
const PostMessageAllConversationForbiddenCode int = 403

/*PostMessageAllConversationForbidden Forbidden

swagger:response postMessageAllConversationForbidden
*/
type PostMessageAllConversationForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostMessageAllConversationForbidden creates PostMessageAllConversationForbidden with default headers values
func NewPostMessageAllConversationForbidden() *PostMessageAllConversationForbidden {

	return &PostMessageAllConversationForbidden{}
}

// WithPayload adds the payload to the post message all conversation forbidden response
func (o *PostMessageAllConversationForbidden) WithPayload(payload *models.Error) *PostMessageAllConversationForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post message all conversation forbidden response
func (o *PostMessageAllConversationForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostMessageAllConversationForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostMessageAllConversationDefault Unexpected error

swagger:response postMessageAllConversationDefault
*/
type PostMessageAllConversationDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostMessageAllConversationDefault creates PostMessageAllConversationDefault with default headers values
func NewPostMessageAllConversationDefault(code int) *PostMessageAllConversationDefault {
	if code <= 0 {
		code = 500
	}

	return &PostMessageAllConversationDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post message all conversation default response
func (o *PostMessageAllConversationDefault) WithStatusCode(code int) *PostMessageAllConversationDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post message all conversation default response
func (o *PostMessageAllConversationDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post message all conversation default response
func (o *PostMessageAllConversationDefault) WithPayload(payload *models.Error) *PostMessageAllConversationDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post message all conversation default response
func (o *PostMessageAllConversationDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostMessageAllConversationDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
