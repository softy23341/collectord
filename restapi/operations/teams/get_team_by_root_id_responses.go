// Code generated by go-swagger; DO NOT EDIT.

package teams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.softndit.com/collector/backend/models"
)

// GetTeamByRootIDOKCode is the HTTP code returned for type GetTeamByRootIDOK
const GetTeamByRootIDOKCode int = 200

/*GetTeamByRootIDOK success

swagger:response getTeamByRootIdOK
*/
type GetTeamByRootIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.ATeam `json:"body,omitempty"`
}

// NewGetTeamByRootIDOK creates GetTeamByRootIDOK with default headers values
func NewGetTeamByRootIDOK() *GetTeamByRootIDOK {

	return &GetTeamByRootIDOK{}
}

// WithPayload adds the payload to the get team by root Id o k response
func (o *GetTeamByRootIDOK) WithPayload(payload *models.ATeam) *GetTeamByRootIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get team by root Id o k response
func (o *GetTeamByRootIDOK) SetPayload(payload *models.ATeam) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTeamByRootIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTeamByRootIDForbiddenCode is the HTTP code returned for type GetTeamByRootIDForbidden
const GetTeamByRootIDForbiddenCode int = 403

/*GetTeamByRootIDForbidden access forbidden

swagger:response getTeamByRootIdForbidden
*/
type GetTeamByRootIDForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTeamByRootIDForbidden creates GetTeamByRootIDForbidden with default headers values
func NewGetTeamByRootIDForbidden() *GetTeamByRootIDForbidden {

	return &GetTeamByRootIDForbidden{}
}

// WithPayload adds the payload to the get team by root Id forbidden response
func (o *GetTeamByRootIDForbidden) WithPayload(payload *models.Error) *GetTeamByRootIDForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get team by root Id forbidden response
func (o *GetTeamByRootIDForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTeamByRootIDForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetTeamByRootIDNotFoundCode is the HTTP code returned for type GetTeamByRootIDNotFound
const GetTeamByRootIDNotFoundCode int = 404

/*GetTeamByRootIDNotFound cant find root

swagger:response getTeamByRootIdNotFound
*/
type GetTeamByRootIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTeamByRootIDNotFound creates GetTeamByRootIDNotFound with default headers values
func NewGetTeamByRootIDNotFound() *GetTeamByRootIDNotFound {

	return &GetTeamByRootIDNotFound{}
}

// WithPayload adds the payload to the get team by root Id not found response
func (o *GetTeamByRootIDNotFound) WithPayload(payload *models.Error) *GetTeamByRootIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get team by root Id not found response
func (o *GetTeamByRootIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTeamByRootIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetTeamByRootIDDefault Unexpected error

swagger:response getTeamByRootIdDefault
*/
type GetTeamByRootIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTeamByRootIDDefault creates GetTeamByRootIDDefault with default headers values
func NewGetTeamByRootIDDefault(code int) *GetTeamByRootIDDefault {
	if code <= 0 {
		code = 500
	}

	return &GetTeamByRootIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get team by root ID default response
func (o *GetTeamByRootIDDefault) WithStatusCode(code int) *GetTeamByRootIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get team by root ID default response
func (o *GetTeamByRootIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get team by root ID default response
func (o *GetTeamByRootIDDefault) WithPayload(payload *models.Error) *GetTeamByRootIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get team by root ID default response
func (o *GetTeamByRootIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTeamByRootIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
