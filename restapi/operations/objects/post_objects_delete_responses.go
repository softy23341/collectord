// Code generated by go-swagger; DO NOT EDIT.

package objects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.softndit.com/collector/backend/models"
)

// PostObjectsDeleteNoContentCode is the HTTP code returned for type PostObjectsDeleteNoContent
const PostObjectsDeleteNoContentCode int = 204

/*PostObjectsDeleteNoContent Success

swagger:response postObjectsDeleteNoContent
*/
type PostObjectsDeleteNoContent struct {
}

// NewPostObjectsDeleteNoContent creates PostObjectsDeleteNoContent with default headers values
func NewPostObjectsDeleteNoContent() *PostObjectsDeleteNoContent {

	return &PostObjectsDeleteNoContent{}
}

// WriteResponse to the client
func (o *PostObjectsDeleteNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// PostObjectsDeleteForbiddenCode is the HTTP code returned for type PostObjectsDeleteForbidden
const PostObjectsDeleteForbiddenCode int = 403

/*PostObjectsDeleteForbidden Forbidden

swagger:response postObjectsDeleteForbidden
*/
type PostObjectsDeleteForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostObjectsDeleteForbidden creates PostObjectsDeleteForbidden with default headers values
func NewPostObjectsDeleteForbidden() *PostObjectsDeleteForbidden {

	return &PostObjectsDeleteForbidden{}
}

// WithPayload adds the payload to the post objects delete forbidden response
func (o *PostObjectsDeleteForbidden) WithPayload(payload *models.Error) *PostObjectsDeleteForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post objects delete forbidden response
func (o *PostObjectsDeleteForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostObjectsDeleteForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostObjectsDeleteNotFoundCode is the HTTP code returned for type PostObjectsDeleteNotFound
const PostObjectsDeleteNotFoundCode int = 404

/*PostObjectsDeleteNotFound cant find objects

swagger:response postObjectsDeleteNotFound
*/
type PostObjectsDeleteNotFound struct {
}

// NewPostObjectsDeleteNotFound creates PostObjectsDeleteNotFound with default headers values
func NewPostObjectsDeleteNotFound() *PostObjectsDeleteNotFound {

	return &PostObjectsDeleteNotFound{}
}

// WriteResponse to the client
func (o *PostObjectsDeleteNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// PostObjectsDeleteLockedCode is the HTTP code returned for type PostObjectsDeleteLocked
const PostObjectsDeleteLockedCode int = 423

/*PostObjectsDeleteLocked Cant delete objects

swagger:response postObjectsDeleteLocked
*/
type PostObjectsDeleteLocked struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostObjectsDeleteLocked creates PostObjectsDeleteLocked with default headers values
func NewPostObjectsDeleteLocked() *PostObjectsDeleteLocked {

	return &PostObjectsDeleteLocked{}
}

// WithPayload adds the payload to the post objects delete locked response
func (o *PostObjectsDeleteLocked) WithPayload(payload *models.Error) *PostObjectsDeleteLocked {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post objects delete locked response
func (o *PostObjectsDeleteLocked) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostObjectsDeleteLocked) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(423)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostObjectsDeleteDefault Unexpected error

swagger:response postObjectsDeleteDefault
*/
type PostObjectsDeleteDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostObjectsDeleteDefault creates PostObjectsDeleteDefault with default headers values
func NewPostObjectsDeleteDefault(code int) *PostObjectsDeleteDefault {
	if code <= 0 {
		code = 500
	}

	return &PostObjectsDeleteDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post objects delete default response
func (o *PostObjectsDeleteDefault) WithStatusCode(code int) *PostObjectsDeleteDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post objects delete default response
func (o *PostObjectsDeleteDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post objects delete default response
func (o *PostObjectsDeleteDefault) WithPayload(payload *models.Error) *PostObjectsDeleteDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post objects delete default response
func (o *PostObjectsDeleteDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostObjectsDeleteDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
