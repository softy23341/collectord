// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.softndit.com/collector/backend/models"
)

// GetAuthRegConfirmEmailNoContentCode is the HTTP code returned for type GetAuthRegConfirmEmailNoContent
const GetAuthRegConfirmEmailNoContentCode int = 204

/*GetAuthRegConfirmEmailNoContent Email has been confirmed

swagger:response getAuthRegConfirmEmailNoContent
*/
type GetAuthRegConfirmEmailNoContent struct {
}

// NewGetAuthRegConfirmEmailNoContent creates GetAuthRegConfirmEmailNoContent with default headers values
func NewGetAuthRegConfirmEmailNoContent() *GetAuthRegConfirmEmailNoContent {

	return &GetAuthRegConfirmEmailNoContent{}
}

// WriteResponse to the client
func (o *GetAuthRegConfirmEmailNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

/*GetAuthRegConfirmEmailDefault Unexpected error

swagger:response getAuthRegConfirmEmailDefault
*/
type GetAuthRegConfirmEmailDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAuthRegConfirmEmailDefault creates GetAuthRegConfirmEmailDefault with default headers values
func NewGetAuthRegConfirmEmailDefault(code int) *GetAuthRegConfirmEmailDefault {
	if code <= 0 {
		code = 500
	}

	return &GetAuthRegConfirmEmailDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get auth reg confirm email default response
func (o *GetAuthRegConfirmEmailDefault) WithStatusCode(code int) *GetAuthRegConfirmEmailDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get auth reg confirm email default response
func (o *GetAuthRegConfirmEmailDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get auth reg confirm email default response
func (o *GetAuthRegConfirmEmailDefault) WithPayload(payload *models.Error) *GetAuthRegConfirmEmailDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get auth reg confirm email default response
func (o *GetAuthRegConfirmEmailDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAuthRegConfirmEmailDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
