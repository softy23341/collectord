// Code generated by go-swagger; DO NOT EDIT.

package badges

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.softndit.com/collector/backend/models"
)

// DeleteBadgeIDDeleteNoContentCode is the HTTP code returned for type DeleteBadgeIDDeleteNoContent
const DeleteBadgeIDDeleteNoContentCode int = 204

/*DeleteBadgeIDDeleteNoContent succes

swagger:response deleteBadgeIdDeleteNoContent
*/
type DeleteBadgeIDDeleteNoContent struct {
}

// NewDeleteBadgeIDDeleteNoContent creates DeleteBadgeIDDeleteNoContent with default headers values
func NewDeleteBadgeIDDeleteNoContent() *DeleteBadgeIDDeleteNoContent {

	return &DeleteBadgeIDDeleteNoContent{}
}

// WriteResponse to the client
func (o *DeleteBadgeIDDeleteNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DeleteBadgeIDDeleteForbiddenCode is the HTTP code returned for type DeleteBadgeIDDeleteForbidden
const DeleteBadgeIDDeleteForbiddenCode int = 403

/*DeleteBadgeIDDeleteForbidden Forbidden

swagger:response deleteBadgeIdDeleteForbidden
*/
type DeleteBadgeIDDeleteForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteBadgeIDDeleteForbidden creates DeleteBadgeIDDeleteForbidden with default headers values
func NewDeleteBadgeIDDeleteForbidden() *DeleteBadgeIDDeleteForbidden {

	return &DeleteBadgeIDDeleteForbidden{}
}

// WithPayload adds the payload to the delete badge Id delete forbidden response
func (o *DeleteBadgeIDDeleteForbidden) WithPayload(payload *models.Error) *DeleteBadgeIDDeleteForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete badge Id delete forbidden response
func (o *DeleteBadgeIDDeleteForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteBadgeIDDeleteForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteBadgeIDDeleteNotFoundCode is the HTTP code returned for type DeleteBadgeIDDeleteNotFound
const DeleteBadgeIDDeleteNotFoundCode int = 404

/*DeleteBadgeIDDeleteNotFound cant find badge

swagger:response deleteBadgeIdDeleteNotFound
*/
type DeleteBadgeIDDeleteNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteBadgeIDDeleteNotFound creates DeleteBadgeIDDeleteNotFound with default headers values
func NewDeleteBadgeIDDeleteNotFound() *DeleteBadgeIDDeleteNotFound {

	return &DeleteBadgeIDDeleteNotFound{}
}

// WithPayload adds the payload to the delete badge Id delete not found response
func (o *DeleteBadgeIDDeleteNotFound) WithPayload(payload *models.Error) *DeleteBadgeIDDeleteNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete badge Id delete not found response
func (o *DeleteBadgeIDDeleteNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteBadgeIDDeleteNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*DeleteBadgeIDDeleteDefault Unexpected error

swagger:response deleteBadgeIdDeleteDefault
*/
type DeleteBadgeIDDeleteDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteBadgeIDDeleteDefault creates DeleteBadgeIDDeleteDefault with default headers values
func NewDeleteBadgeIDDeleteDefault(code int) *DeleteBadgeIDDeleteDefault {
	if code <= 0 {
		code = 500
	}

	return &DeleteBadgeIDDeleteDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete badge ID delete default response
func (o *DeleteBadgeIDDeleteDefault) WithStatusCode(code int) *DeleteBadgeIDDeleteDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete badge ID delete default response
func (o *DeleteBadgeIDDeleteDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete badge ID delete default response
func (o *DeleteBadgeIDDeleteDefault) WithPayload(payload *models.Error) *DeleteBadgeIDDeleteDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete badge ID delete default response
func (o *DeleteBadgeIDDeleteDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteBadgeIDDeleteDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
