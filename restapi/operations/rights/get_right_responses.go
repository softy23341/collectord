// Code generated by go-swagger; DO NOT EDIT.

package rights

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.softndit.com/collector/backend/models"
)

// GetRightOKCode is the HTTP code returned for type GetRightOK
const GetRightOKCode int = 200

/*GetRightOK success

swagger:response getRightOK
*/
type GetRightOK struct {

	/*
	  In: Body
	*/
	Payload *models.AGetRight `json:"body,omitempty"`
}

// NewGetRightOK creates GetRightOK with default headers values
func NewGetRightOK() *GetRightOK {

	return &GetRightOK{}
}

// WithPayload adds the payload to the get right o k response
func (o *GetRightOK) WithPayload(payload *models.AGetRight) *GetRightOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get right o k response
func (o *GetRightOK) SetPayload(payload *models.AGetRight) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRightOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRightForbiddenCode is the HTTP code returned for type GetRightForbidden
const GetRightForbiddenCode int = 403

/*GetRightForbidden Forbidden

swagger:response getRightForbidden
*/
type GetRightForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetRightForbidden creates GetRightForbidden with default headers values
func NewGetRightForbidden() *GetRightForbidden {

	return &GetRightForbidden{}
}

// WithPayload adds the payload to the get right forbidden response
func (o *GetRightForbidden) WithPayload(payload *models.Error) *GetRightForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get right forbidden response
func (o *GetRightForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRightForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetRightDefault Unexpected error

swagger:response getRightDefault
*/
type GetRightDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetRightDefault creates GetRightDefault with default headers values
func NewGetRightDefault(code int) *GetRightDefault {
	if code <= 0 {
		code = 500
	}

	return &GetRightDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get right default response
func (o *GetRightDefault) WithStatusCode(code int) *GetRightDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get right default response
func (o *GetRightDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get right default response
func (o *GetRightDefault) WithPayload(payload *models.Error) *GetRightDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get right default response
func (o *GetRightDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRightDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
