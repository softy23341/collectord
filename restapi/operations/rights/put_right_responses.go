// Code generated by go-swagger; DO NOT EDIT.

package rights

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.softndit.com/collector/backend/models"
)

// PutRightOKCode is the HTTP code returned for type PutRightOK
const PutRightOKCode int = 200

/*PutRightOK success

swagger:response putRightOK
*/
type PutRightOK struct {

	/*
	  In: Body
	*/
	Payload *models.ASetRight `json:"body,omitempty"`
}

// NewPutRightOK creates PutRightOK with default headers values
func NewPutRightOK() *PutRightOK {

	return &PutRightOK{}
}

// WithPayload adds the payload to the put right o k response
func (o *PutRightOK) WithPayload(payload *models.ASetRight) *PutRightOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put right o k response
func (o *PutRightOK) SetPayload(payload *models.ASetRight) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutRightOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutRightForbiddenCode is the HTTP code returned for type PutRightForbidden
const PutRightForbiddenCode int = 403

/*PutRightForbidden Forbidden

swagger:response putRightForbidden
*/
type PutRightForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutRightForbidden creates PutRightForbidden with default headers values
func NewPutRightForbidden() *PutRightForbidden {

	return &PutRightForbidden{}
}

// WithPayload adds the payload to the put right forbidden response
func (o *PutRightForbidden) WithPayload(payload *models.Error) *PutRightForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put right forbidden response
func (o *PutRightForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutRightForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutRightUnprocessableEntityCode is the HTTP code returned for type PutRightUnprocessableEntity
const PutRightUnprocessableEntityCode int = 422

/*PutRightUnprocessableEntity validation error

swagger:response putRightUnprocessableEntity
*/
type PutRightUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutRightUnprocessableEntity creates PutRightUnprocessableEntity with default headers values
func NewPutRightUnprocessableEntity() *PutRightUnprocessableEntity {

	return &PutRightUnprocessableEntity{}
}

// WithPayload adds the payload to the put right unprocessable entity response
func (o *PutRightUnprocessableEntity) WithPayload(payload *models.Error) *PutRightUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put right unprocessable entity response
func (o *PutRightUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutRightUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PutRightDefault Unexpected error

swagger:response putRightDefault
*/
type PutRightDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutRightDefault creates PutRightDefault with default headers values
func NewPutRightDefault(code int) *PutRightDefault {
	if code <= 0 {
		code = 500
	}

	return &PutRightDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the put right default response
func (o *PutRightDefault) WithStatusCode(code int) *PutRightDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the put right default response
func (o *PutRightDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the put right default response
func (o *PutRightDefault) WithPayload(payload *models.Error) *PutRightDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put right default response
func (o *PutRightDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutRightDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
