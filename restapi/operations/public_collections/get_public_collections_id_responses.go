// Code generated by go-swagger; DO NOT EDIT.

package public_collections

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.softndit.com/collector/backend/models"
)

// GetPublicCollectionsIDOKCode is the HTTP code returned for type GetPublicCollectionsIDOK
const GetPublicCollectionsIDOKCode int = 200

/*GetPublicCollectionsIDOK success

swagger:response getPublicCollectionsIdOK
*/
type GetPublicCollectionsIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.APublicCollection `json:"body,omitempty"`
}

// NewGetPublicCollectionsIDOK creates GetPublicCollectionsIDOK with default headers values
func NewGetPublicCollectionsIDOK() *GetPublicCollectionsIDOK {

	return &GetPublicCollectionsIDOK{}
}

// WithPayload adds the payload to the get public collections Id o k response
func (o *GetPublicCollectionsIDOK) WithPayload(payload *models.APublicCollection) *GetPublicCollectionsIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get public collections Id o k response
func (o *GetPublicCollectionsIDOK) SetPayload(payload *models.APublicCollection) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPublicCollectionsIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPublicCollectionsIDForbiddenCode is the HTTP code returned for type GetPublicCollectionsIDForbidden
const GetPublicCollectionsIDForbiddenCode int = 403

/*GetPublicCollectionsIDForbidden Forbidden

swagger:response getPublicCollectionsIdForbidden
*/
type GetPublicCollectionsIDForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPublicCollectionsIDForbidden creates GetPublicCollectionsIDForbidden with default headers values
func NewGetPublicCollectionsIDForbidden() *GetPublicCollectionsIDForbidden {

	return &GetPublicCollectionsIDForbidden{}
}

// WithPayload adds the payload to the get public collections Id forbidden response
func (o *GetPublicCollectionsIDForbidden) WithPayload(payload *models.Error) *GetPublicCollectionsIDForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get public collections Id forbidden response
func (o *GetPublicCollectionsIDForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPublicCollectionsIDForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPublicCollectionsIDNotFoundCode is the HTTP code returned for type GetPublicCollectionsIDNotFound
const GetPublicCollectionsIDNotFoundCode int = 404

/*GetPublicCollectionsIDNotFound cant find named date interval

swagger:response getPublicCollectionsIdNotFound
*/
type GetPublicCollectionsIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPublicCollectionsIDNotFound creates GetPublicCollectionsIDNotFound with default headers values
func NewGetPublicCollectionsIDNotFound() *GetPublicCollectionsIDNotFound {

	return &GetPublicCollectionsIDNotFound{}
}

// WithPayload adds the payload to the get public collections Id not found response
func (o *GetPublicCollectionsIDNotFound) WithPayload(payload *models.Error) *GetPublicCollectionsIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get public collections Id not found response
func (o *GetPublicCollectionsIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPublicCollectionsIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetPublicCollectionsIDDefault Unexpected error

swagger:response getPublicCollectionsIdDefault
*/
type GetPublicCollectionsIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetPublicCollectionsIDDefault creates GetPublicCollectionsIDDefault with default headers values
func NewGetPublicCollectionsIDDefault(code int) *GetPublicCollectionsIDDefault {
	if code <= 0 {
		code = 500
	}

	return &GetPublicCollectionsIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get public collections ID default response
func (o *GetPublicCollectionsIDDefault) WithStatusCode(code int) *GetPublicCollectionsIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get public collections ID default response
func (o *GetPublicCollectionsIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get public collections ID default response
func (o *GetPublicCollectionsIDDefault) WithPayload(payload *models.Error) *GetPublicCollectionsIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get public collections ID default response
func (o *GetPublicCollectionsIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPublicCollectionsIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
