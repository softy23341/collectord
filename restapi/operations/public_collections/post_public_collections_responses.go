// Code generated by go-swagger; DO NOT EDIT.

package public_collections

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.softndit.com/collector/backend/models"
)

// PostPublicCollectionsOKCode is the HTTP code returned for type PostPublicCollectionsOK
const PostPublicCollectionsOKCode int = 200

/*PostPublicCollectionsOK Collections list

swagger:response postPublicCollectionsOK
*/
type PostPublicCollectionsOK struct {

	/*
	  In: Body
	*/
	Payload *models.APublicCollections `json:"body,omitempty"`
}

// NewPostPublicCollectionsOK creates PostPublicCollectionsOK with default headers values
func NewPostPublicCollectionsOK() *PostPublicCollectionsOK {

	return &PostPublicCollectionsOK{}
}

// WithPayload adds the payload to the post public collections o k response
func (o *PostPublicCollectionsOK) WithPayload(payload *models.APublicCollections) *PostPublicCollectionsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post public collections o k response
func (o *PostPublicCollectionsOK) SetPayload(payload *models.APublicCollections) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostPublicCollectionsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostPublicCollectionsNotFoundCode is the HTTP code returned for type PostPublicCollectionsNotFound
const PostPublicCollectionsNotFoundCode int = 404

/*PostPublicCollectionsNotFound cant find objects

swagger:response postPublicCollectionsNotFound
*/
type PostPublicCollectionsNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostPublicCollectionsNotFound creates PostPublicCollectionsNotFound with default headers values
func NewPostPublicCollectionsNotFound() *PostPublicCollectionsNotFound {

	return &PostPublicCollectionsNotFound{}
}

// WithPayload adds the payload to the post public collections not found response
func (o *PostPublicCollectionsNotFound) WithPayload(payload *models.Error) *PostPublicCollectionsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post public collections not found response
func (o *PostPublicCollectionsNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostPublicCollectionsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostPublicCollectionsDefault Unexpected error

swagger:response postPublicCollectionsDefault
*/
type PostPublicCollectionsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostPublicCollectionsDefault creates PostPublicCollectionsDefault with default headers values
func NewPostPublicCollectionsDefault(code int) *PostPublicCollectionsDefault {
	if code <= 0 {
		code = 500
	}

	return &PostPublicCollectionsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post public collections default response
func (o *PostPublicCollectionsDefault) WithStatusCode(code int) *PostPublicCollectionsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post public collections default response
func (o *PostPublicCollectionsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post public collections default response
func (o *PostPublicCollectionsDefault) WithPayload(payload *models.Error) *PostPublicCollectionsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post public collections default response
func (o *PostPublicCollectionsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostPublicCollectionsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
