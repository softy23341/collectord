// Code generated by go-swagger; DO NOT EDIT.

package collections

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.softndit.com/collector/backend/models"
)

// PostCollectionsRemoveFromGroupNoContentCode is the HTTP code returned for type PostCollectionsRemoveFromGroupNoContent
const PostCollectionsRemoveFromGroupNoContentCode int = 204

/*PostCollectionsRemoveFromGroupNoContent Success

swagger:response postCollectionsRemoveFromGroupNoContent
*/
type PostCollectionsRemoveFromGroupNoContent struct {
}

// NewPostCollectionsRemoveFromGroupNoContent creates PostCollectionsRemoveFromGroupNoContent with default headers values
func NewPostCollectionsRemoveFromGroupNoContent() *PostCollectionsRemoveFromGroupNoContent {

	return &PostCollectionsRemoveFromGroupNoContent{}
}

// WriteResponse to the client
func (o *PostCollectionsRemoveFromGroupNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// PostCollectionsRemoveFromGroupForbiddenCode is the HTTP code returned for type PostCollectionsRemoveFromGroupForbidden
const PostCollectionsRemoveFromGroupForbiddenCode int = 403

/*PostCollectionsRemoveFromGroupForbidden Forbidden

swagger:response postCollectionsRemoveFromGroupForbidden
*/
type PostCollectionsRemoveFromGroupForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostCollectionsRemoveFromGroupForbidden creates PostCollectionsRemoveFromGroupForbidden with default headers values
func NewPostCollectionsRemoveFromGroupForbidden() *PostCollectionsRemoveFromGroupForbidden {

	return &PostCollectionsRemoveFromGroupForbidden{}
}

// WithPayload adds the payload to the post collections remove from group forbidden response
func (o *PostCollectionsRemoveFromGroupForbidden) WithPayload(payload *models.Error) *PostCollectionsRemoveFromGroupForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post collections remove from group forbidden response
func (o *PostCollectionsRemoveFromGroupForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostCollectionsRemoveFromGroupForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostCollectionsRemoveFromGroupDefault Unexpected error

swagger:response postCollectionsRemoveFromGroupDefault
*/
type PostCollectionsRemoveFromGroupDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostCollectionsRemoveFromGroupDefault creates PostCollectionsRemoveFromGroupDefault with default headers values
func NewPostCollectionsRemoveFromGroupDefault(code int) *PostCollectionsRemoveFromGroupDefault {
	if code <= 0 {
		code = 500
	}

	return &PostCollectionsRemoveFromGroupDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post collections remove from group default response
func (o *PostCollectionsRemoveFromGroupDefault) WithStatusCode(code int) *PostCollectionsRemoveFromGroupDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post collections remove from group default response
func (o *PostCollectionsRemoveFromGroupDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post collections remove from group default response
func (o *PostCollectionsRemoveFromGroupDefault) WithPayload(payload *models.Error) *PostCollectionsRemoveFromGroupDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post collections remove from group default response
func (o *PostCollectionsRemoveFromGroupDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostCollectionsRemoveFromGroupDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
