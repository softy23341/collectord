// Code generated by go-swagger; DO NOT EDIT.

package collections

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.softndit.com/collector/backend/models"
)

// GetCollectionsIDOKCode is the HTTP code returned for type GetCollectionsIDOK
const GetCollectionsIDOKCode int = 200

/*GetCollectionsIDOK success

swagger:response getCollectionsIdOK
*/
type GetCollectionsIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.ACollection `json:"body,omitempty"`
}

// NewGetCollectionsIDOK creates GetCollectionsIDOK with default headers values
func NewGetCollectionsIDOK() *GetCollectionsIDOK {

	return &GetCollectionsIDOK{}
}

// WithPayload adds the payload to the get collections Id o k response
func (o *GetCollectionsIDOK) WithPayload(payload *models.ACollection) *GetCollectionsIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get collections Id o k response
func (o *GetCollectionsIDOK) SetPayload(payload *models.ACollection) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCollectionsIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCollectionsIDForbiddenCode is the HTTP code returned for type GetCollectionsIDForbidden
const GetCollectionsIDForbiddenCode int = 403

/*GetCollectionsIDForbidden Forbidden

swagger:response getCollectionsIdForbidden
*/
type GetCollectionsIDForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetCollectionsIDForbidden creates GetCollectionsIDForbidden with default headers values
func NewGetCollectionsIDForbidden() *GetCollectionsIDForbidden {

	return &GetCollectionsIDForbidden{}
}

// WithPayload adds the payload to the get collections Id forbidden response
func (o *GetCollectionsIDForbidden) WithPayload(payload *models.Error) *GetCollectionsIDForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get collections Id forbidden response
func (o *GetCollectionsIDForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCollectionsIDForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetCollectionsIDNotFoundCode is the HTTP code returned for type GetCollectionsIDNotFound
const GetCollectionsIDNotFoundCode int = 404

/*GetCollectionsIDNotFound cant find named date interval

swagger:response getCollectionsIdNotFound
*/
type GetCollectionsIDNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetCollectionsIDNotFound creates GetCollectionsIDNotFound with default headers values
func NewGetCollectionsIDNotFound() *GetCollectionsIDNotFound {

	return &GetCollectionsIDNotFound{}
}

// WithPayload adds the payload to the get collections Id not found response
func (o *GetCollectionsIDNotFound) WithPayload(payload *models.Error) *GetCollectionsIDNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get collections Id not found response
func (o *GetCollectionsIDNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCollectionsIDNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetCollectionsIDDefault Unexpected error

swagger:response getCollectionsIdDefault
*/
type GetCollectionsIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetCollectionsIDDefault creates GetCollectionsIDDefault with default headers values
func NewGetCollectionsIDDefault(code int) *GetCollectionsIDDefault {
	if code <= 0 {
		code = 500
	}

	return &GetCollectionsIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get collections ID default response
func (o *GetCollectionsIDDefault) WithStatusCode(code int) *GetCollectionsIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get collections ID default response
func (o *GetCollectionsIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get collections ID default response
func (o *GetCollectionsIDDefault) WithPayload(payload *models.Error) *GetCollectionsIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get collections ID default response
func (o *GetCollectionsIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetCollectionsIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
