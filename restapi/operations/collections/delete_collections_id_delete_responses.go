// Code generated by go-swagger; DO NOT EDIT.

package collections

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.softndit.com/collector/backend/models"
)

// DeleteCollectionsIDDeleteNoContentCode is the HTTP code returned for type DeleteCollectionsIDDeleteNoContent
const DeleteCollectionsIDDeleteNoContentCode int = 204

/*DeleteCollectionsIDDeleteNoContent Success

swagger:response deleteCollectionsIdDeleteNoContent
*/
type DeleteCollectionsIDDeleteNoContent struct {
}

// NewDeleteCollectionsIDDeleteNoContent creates DeleteCollectionsIDDeleteNoContent with default headers values
func NewDeleteCollectionsIDDeleteNoContent() *DeleteCollectionsIDDeleteNoContent {

	return &DeleteCollectionsIDDeleteNoContent{}
}

// WriteResponse to the client
func (o *DeleteCollectionsIDDeleteNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DeleteCollectionsIDDeleteForbiddenCode is the HTTP code returned for type DeleteCollectionsIDDeleteForbidden
const DeleteCollectionsIDDeleteForbiddenCode int = 403

/*DeleteCollectionsIDDeleteForbidden Forbidden

swagger:response deleteCollectionsIdDeleteForbidden
*/
type DeleteCollectionsIDDeleteForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteCollectionsIDDeleteForbidden creates DeleteCollectionsIDDeleteForbidden with default headers values
func NewDeleteCollectionsIDDeleteForbidden() *DeleteCollectionsIDDeleteForbidden {

	return &DeleteCollectionsIDDeleteForbidden{}
}

// WithPayload adds the payload to the delete collections Id delete forbidden response
func (o *DeleteCollectionsIDDeleteForbidden) WithPayload(payload *models.Error) *DeleteCollectionsIDDeleteForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete collections Id delete forbidden response
func (o *DeleteCollectionsIDDeleteForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteCollectionsIDDeleteForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteCollectionsIDDeleteNotFoundCode is the HTTP code returned for type DeleteCollectionsIDDeleteNotFound
const DeleteCollectionsIDDeleteNotFoundCode int = 404

/*DeleteCollectionsIDDeleteNotFound cant find collecion

swagger:response deleteCollectionsIdDeleteNotFound
*/
type DeleteCollectionsIDDeleteNotFound struct {
}

// NewDeleteCollectionsIDDeleteNotFound creates DeleteCollectionsIDDeleteNotFound with default headers values
func NewDeleteCollectionsIDDeleteNotFound() *DeleteCollectionsIDDeleteNotFound {

	return &DeleteCollectionsIDDeleteNotFound{}
}

// WriteResponse to the client
func (o *DeleteCollectionsIDDeleteNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

// DeleteCollectionsIDDeleteLockedCode is the HTTP code returned for type DeleteCollectionsIDDeleteLocked
const DeleteCollectionsIDDeleteLockedCode int = 423

/*DeleteCollectionsIDDeleteLocked Cant delete collection

swagger:response deleteCollectionsIdDeleteLocked
*/
type DeleteCollectionsIDDeleteLocked struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteCollectionsIDDeleteLocked creates DeleteCollectionsIDDeleteLocked with default headers values
func NewDeleteCollectionsIDDeleteLocked() *DeleteCollectionsIDDeleteLocked {

	return &DeleteCollectionsIDDeleteLocked{}
}

// WithPayload adds the payload to the delete collections Id delete locked response
func (o *DeleteCollectionsIDDeleteLocked) WithPayload(payload *models.Error) *DeleteCollectionsIDDeleteLocked {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete collections Id delete locked response
func (o *DeleteCollectionsIDDeleteLocked) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteCollectionsIDDeleteLocked) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(423)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*DeleteCollectionsIDDeleteDefault Unexpected error

swagger:response deleteCollectionsIdDeleteDefault
*/
type DeleteCollectionsIDDeleteDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteCollectionsIDDeleteDefault creates DeleteCollectionsIDDeleteDefault with default headers values
func NewDeleteCollectionsIDDeleteDefault(code int) *DeleteCollectionsIDDeleteDefault {
	if code <= 0 {
		code = 500
	}

	return &DeleteCollectionsIDDeleteDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete collections ID delete default response
func (o *DeleteCollectionsIDDeleteDefault) WithStatusCode(code int) *DeleteCollectionsIDDeleteDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete collections ID delete default response
func (o *DeleteCollectionsIDDeleteDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete collections ID delete default response
func (o *DeleteCollectionsIDDeleteDefault) WithPayload(payload *models.Error) *DeleteCollectionsIDDeleteDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete collections ID delete default response
func (o *DeleteCollectionsIDDeleteDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteCollectionsIDDeleteDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
