// Code generated by go-swagger; DO NOT EDIT.

package collections

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.softndit.com/collector/backend/models"
)

// PutCollectionsIDNoContentCode is the HTTP code returned for type PutCollectionsIDNoContent
const PutCollectionsIDNoContentCode int = 204

/*PutCollectionsIDNoContent success

swagger:response putCollectionsIdNoContent
*/
type PutCollectionsIDNoContent struct {
}

// NewPutCollectionsIDNoContent creates PutCollectionsIDNoContent with default headers values
func NewPutCollectionsIDNoContent() *PutCollectionsIDNoContent {

	return &PutCollectionsIDNoContent{}
}

// WriteResponse to the client
func (o *PutCollectionsIDNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// PutCollectionsIDForbiddenCode is the HTTP code returned for type PutCollectionsIDForbidden
const PutCollectionsIDForbiddenCode int = 403

/*PutCollectionsIDForbidden Forbidden

swagger:response putCollectionsIdForbidden
*/
type PutCollectionsIDForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutCollectionsIDForbidden creates PutCollectionsIDForbidden with default headers values
func NewPutCollectionsIDForbidden() *PutCollectionsIDForbidden {

	return &PutCollectionsIDForbidden{}
}

// WithPayload adds the payload to the put collections Id forbidden response
func (o *PutCollectionsIDForbidden) WithPayload(payload *models.Error) *PutCollectionsIDForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put collections Id forbidden response
func (o *PutCollectionsIDForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutCollectionsIDForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutCollectionsIDUnprocessableEntityCode is the HTTP code returned for type PutCollectionsIDUnprocessableEntity
const PutCollectionsIDUnprocessableEntityCode int = 422

/*PutCollectionsIDUnprocessableEntity unprocessable input

swagger:response putCollectionsIdUnprocessableEntity
*/
type PutCollectionsIDUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutCollectionsIDUnprocessableEntity creates PutCollectionsIDUnprocessableEntity with default headers values
func NewPutCollectionsIDUnprocessableEntity() *PutCollectionsIDUnprocessableEntity {

	return &PutCollectionsIDUnprocessableEntity{}
}

// WithPayload adds the payload to the put collections Id unprocessable entity response
func (o *PutCollectionsIDUnprocessableEntity) WithPayload(payload *models.Error) *PutCollectionsIDUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put collections Id unprocessable entity response
func (o *PutCollectionsIDUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutCollectionsIDUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PutCollectionsIDDefault Unexpected error

swagger:response putCollectionsIdDefault
*/
type PutCollectionsIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPutCollectionsIDDefault creates PutCollectionsIDDefault with default headers values
func NewPutCollectionsIDDefault(code int) *PutCollectionsIDDefault {
	if code <= 0 {
		code = 500
	}

	return &PutCollectionsIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the put collections ID default response
func (o *PutCollectionsIDDefault) WithStatusCode(code int) *PutCollectionsIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the put collections ID default response
func (o *PutCollectionsIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the put collections ID default response
func (o *PutCollectionsIDDefault) WithPayload(payload *models.Error) *PutCollectionsIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put collections ID default response
func (o *PutCollectionsIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutCollectionsIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
