// Code generated by go-swagger; DO NOT EDIT.

package tasks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.softndit.com/collector/backend/models"
)

// GetTaskMyListOKCode is the HTTP code returned for type GetTaskMyListOK
const GetTaskMyListOKCode int = 200

/*GetTaskMyListOK success

swagger:response getTaskMyListOK
*/
type GetTaskMyListOK struct {

	/*
	  In: Body
	*/
	Payload *models.AMyTaskList `json:"body,omitempty"`
}

// NewGetTaskMyListOK creates GetTaskMyListOK with default headers values
func NewGetTaskMyListOK() *GetTaskMyListOK {

	return &GetTaskMyListOK{}
}

// WithPayload adds the payload to the get task my list o k response
func (o *GetTaskMyListOK) WithPayload(payload *models.AMyTaskList) *GetTaskMyListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get task my list o k response
func (o *GetTaskMyListOK) SetPayload(payload *models.AMyTaskList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTaskMyListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetTaskMyListDefault Unexpected error

swagger:response getTaskMyListDefault
*/
type GetTaskMyListDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetTaskMyListDefault creates GetTaskMyListDefault with default headers values
func NewGetTaskMyListDefault(code int) *GetTaskMyListDefault {
	if code <= 0 {
		code = 500
	}

	return &GetTaskMyListDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get task my list default response
func (o *GetTaskMyListDefault) WithStatusCode(code int) *GetTaskMyListDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get task my list default response
func (o *GetTaskMyListDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get task my list default response
func (o *GetTaskMyListDefault) WithPayload(payload *models.Error) *GetTaskMyListDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get task my list default response
func (o *GetTaskMyListDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTaskMyListDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
