// Code generated by go-swagger; DO NOT EDIT.

package tasks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.softndit.com/collector/backend/models"
)

// PostTaskMyArchiveListOKCode is the HTTP code returned for type PostTaskMyArchiveListOK
const PostTaskMyArchiveListOKCode int = 200

/*PostTaskMyArchiveListOK success

swagger:response postTaskMyArchiveListOK
*/
type PostTaskMyArchiveListOK struct {

	/*
	  In: Body
	*/
	Payload *models.AMyTaskList `json:"body,omitempty"`
}

// NewPostTaskMyArchiveListOK creates PostTaskMyArchiveListOK with default headers values
func NewPostTaskMyArchiveListOK() *PostTaskMyArchiveListOK {

	return &PostTaskMyArchiveListOK{}
}

// WithPayload adds the payload to the post task my archive list o k response
func (o *PostTaskMyArchiveListOK) WithPayload(payload *models.AMyTaskList) *PostTaskMyArchiveListOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post task my archive list o k response
func (o *PostTaskMyArchiveListOK) SetPayload(payload *models.AMyTaskList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostTaskMyArchiveListOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostTaskMyArchiveListDefault Unexpected error

swagger:response postTaskMyArchiveListDefault
*/
type PostTaskMyArchiveListDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostTaskMyArchiveListDefault creates PostTaskMyArchiveListDefault with default headers values
func NewPostTaskMyArchiveListDefault(code int) *PostTaskMyArchiveListDefault {
	if code <= 0 {
		code = 500
	}

	return &PostTaskMyArchiveListDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post task my archive list default response
func (o *PostTaskMyArchiveListDefault) WithStatusCode(code int) *PostTaskMyArchiveListDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post task my archive list default response
func (o *PostTaskMyArchiveListDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post task my archive list default response
func (o *PostTaskMyArchiveListDefault) WithPayload(payload *models.Error) *PostTaskMyArchiveListDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post task my archive list default response
func (o *PostTaskMyArchiveListDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostTaskMyArchiveListDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
