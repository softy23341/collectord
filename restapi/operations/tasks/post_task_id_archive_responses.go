// Code generated by go-swagger; DO NOT EDIT.

package tasks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.softndit.com/collector/backend/models"
)

// PostTaskIDArchiveNoContentCode is the HTTP code returned for type PostTaskIDArchiveNoContent
const PostTaskIDArchiveNoContentCode int = 204

/*PostTaskIDArchiveNoContent success

swagger:response postTaskIdArchiveNoContent
*/
type PostTaskIDArchiveNoContent struct {
}

// NewPostTaskIDArchiveNoContent creates PostTaskIDArchiveNoContent with default headers values
func NewPostTaskIDArchiveNoContent() *PostTaskIDArchiveNoContent {

	return &PostTaskIDArchiveNoContent{}
}

// WriteResponse to the client
func (o *PostTaskIDArchiveNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// PostTaskIDArchiveForbiddenCode is the HTTP code returned for type PostTaskIDArchiveForbidden
const PostTaskIDArchiveForbiddenCode int = 403

/*PostTaskIDArchiveForbidden Forbidden

swagger:response postTaskIdArchiveForbidden
*/
type PostTaskIDArchiveForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostTaskIDArchiveForbidden creates PostTaskIDArchiveForbidden with default headers values
func NewPostTaskIDArchiveForbidden() *PostTaskIDArchiveForbidden {

	return &PostTaskIDArchiveForbidden{}
}

// WithPayload adds the payload to the post task Id archive forbidden response
func (o *PostTaskIDArchiveForbidden) WithPayload(payload *models.Error) *PostTaskIDArchiveForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post task Id archive forbidden response
func (o *PostTaskIDArchiveForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostTaskIDArchiveForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostTaskIDArchiveNotFoundCode is the HTTP code returned for type PostTaskIDArchiveNotFound
const PostTaskIDArchiveNotFoundCode int = 404

/*PostTaskIDArchiveNotFound cant find the task

swagger:response postTaskIdArchiveNotFound
*/
type PostTaskIDArchiveNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostTaskIDArchiveNotFound creates PostTaskIDArchiveNotFound with default headers values
func NewPostTaskIDArchiveNotFound() *PostTaskIDArchiveNotFound {

	return &PostTaskIDArchiveNotFound{}
}

// WithPayload adds the payload to the post task Id archive not found response
func (o *PostTaskIDArchiveNotFound) WithPayload(payload *models.Error) *PostTaskIDArchiveNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post task Id archive not found response
func (o *PostTaskIDArchiveNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostTaskIDArchiveNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostTaskIDArchiveDefault Unexpected error

swagger:response postTaskIdArchiveDefault
*/
type PostTaskIDArchiveDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostTaskIDArchiveDefault creates PostTaskIDArchiveDefault with default headers values
func NewPostTaskIDArchiveDefault(code int) *PostTaskIDArchiveDefault {
	if code <= 0 {
		code = 500
	}

	return &PostTaskIDArchiveDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post task ID archive default response
func (o *PostTaskIDArchiveDefault) WithStatusCode(code int) *PostTaskIDArchiveDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post task ID archive default response
func (o *PostTaskIDArchiveDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post task ID archive default response
func (o *PostTaskIDArchiveDefault) WithPayload(payload *models.Error) *PostTaskIDArchiveDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post task ID archive default response
func (o *PostTaskIDArchiveDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostTaskIDArchiveDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
