// Code generated by go-swagger; DO NOT EDIT.

package tasks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.softndit.com/collector/backend/models"
)

// PostTaskIDChangeStatusNoContentCode is the HTTP code returned for type PostTaskIDChangeStatusNoContent
const PostTaskIDChangeStatusNoContentCode int = 204

/*PostTaskIDChangeStatusNoContent success

swagger:response postTaskIdChangeStatusNoContent
*/
type PostTaskIDChangeStatusNoContent struct {
}

// NewPostTaskIDChangeStatusNoContent creates PostTaskIDChangeStatusNoContent with default headers values
func NewPostTaskIDChangeStatusNoContent() *PostTaskIDChangeStatusNoContent {

	return &PostTaskIDChangeStatusNoContent{}
}

// WriteResponse to the client
func (o *PostTaskIDChangeStatusNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// PostTaskIDChangeStatusForbiddenCode is the HTTP code returned for type PostTaskIDChangeStatusForbidden
const PostTaskIDChangeStatusForbiddenCode int = 403

/*PostTaskIDChangeStatusForbidden Forbidden

swagger:response postTaskIdChangeStatusForbidden
*/
type PostTaskIDChangeStatusForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostTaskIDChangeStatusForbidden creates PostTaskIDChangeStatusForbidden with default headers values
func NewPostTaskIDChangeStatusForbidden() *PostTaskIDChangeStatusForbidden {

	return &PostTaskIDChangeStatusForbidden{}
}

// WithPayload adds the payload to the post task Id change status forbidden response
func (o *PostTaskIDChangeStatusForbidden) WithPayload(payload *models.Error) *PostTaskIDChangeStatusForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post task Id change status forbidden response
func (o *PostTaskIDChangeStatusForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostTaskIDChangeStatusForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostTaskIDChangeStatusNotFoundCode is the HTTP code returned for type PostTaskIDChangeStatusNotFound
const PostTaskIDChangeStatusNotFoundCode int = 404

/*PostTaskIDChangeStatusNotFound cant find the task

swagger:response postTaskIdChangeStatusNotFound
*/
type PostTaskIDChangeStatusNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostTaskIDChangeStatusNotFound creates PostTaskIDChangeStatusNotFound with default headers values
func NewPostTaskIDChangeStatusNotFound() *PostTaskIDChangeStatusNotFound {

	return &PostTaskIDChangeStatusNotFound{}
}

// WithPayload adds the payload to the post task Id change status not found response
func (o *PostTaskIDChangeStatusNotFound) WithPayload(payload *models.Error) *PostTaskIDChangeStatusNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post task Id change status not found response
func (o *PostTaskIDChangeStatusNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostTaskIDChangeStatusNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostTaskIDChangeStatusUnprocessableEntityCode is the HTTP code returned for type PostTaskIDChangeStatusUnprocessableEntity
const PostTaskIDChangeStatusUnprocessableEntityCode int = 422

/*PostTaskIDChangeStatusUnprocessableEntity validation error

swagger:response postTaskIdChangeStatusUnprocessableEntity
*/
type PostTaskIDChangeStatusUnprocessableEntity struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostTaskIDChangeStatusUnprocessableEntity creates PostTaskIDChangeStatusUnprocessableEntity with default headers values
func NewPostTaskIDChangeStatusUnprocessableEntity() *PostTaskIDChangeStatusUnprocessableEntity {

	return &PostTaskIDChangeStatusUnprocessableEntity{}
}

// WithPayload adds the payload to the post task Id change status unprocessable entity response
func (o *PostTaskIDChangeStatusUnprocessableEntity) WithPayload(payload *models.Error) *PostTaskIDChangeStatusUnprocessableEntity {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post task Id change status unprocessable entity response
func (o *PostTaskIDChangeStatusUnprocessableEntity) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostTaskIDChangeStatusUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostTaskIDChangeStatusDefault Unexpected error

swagger:response postTaskIdChangeStatusDefault
*/
type PostTaskIDChangeStatusDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostTaskIDChangeStatusDefault creates PostTaskIDChangeStatusDefault with default headers values
func NewPostTaskIDChangeStatusDefault(code int) *PostTaskIDChangeStatusDefault {
	if code <= 0 {
		code = 500
	}

	return &PostTaskIDChangeStatusDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post task ID change status default response
func (o *PostTaskIDChangeStatusDefault) WithStatusCode(code int) *PostTaskIDChangeStatusDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post task ID change status default response
func (o *PostTaskIDChangeStatusDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post task ID change status default response
func (o *PostTaskIDChangeStatusDefault) WithPayload(payload *models.Error) *PostTaskIDChangeStatusDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post task ID change status default response
func (o *PostTaskIDChangeStatusDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostTaskIDChangeStatusDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
