// Code generated by go-swagger; DO NOT EDIT.

package chat

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.softndit.com/collector/backend/models"
)

// PostChatIDChangeNameOKCode is the HTTP code returned for type PostChatIDChangeNameOK
const PostChatIDChangeNameOKCode int = 200

/*PostChatIDChangeNameOK name was changed

swagger:response postChatIdChangeNameOK
*/
type PostChatIDChangeNameOK struct {

	/*
	  In: Body
	*/
	Payload *models.AEditChatName `json:"body,omitempty"`
}

// NewPostChatIDChangeNameOK creates PostChatIDChangeNameOK with default headers values
func NewPostChatIDChangeNameOK() *PostChatIDChangeNameOK {

	return &PostChatIDChangeNameOK{}
}

// WithPayload adds the payload to the post chat Id change name o k response
func (o *PostChatIDChangeNameOK) WithPayload(payload *models.AEditChatName) *PostChatIDChangeNameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post chat Id change name o k response
func (o *PostChatIDChangeNameOK) SetPayload(payload *models.AEditChatName) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostChatIDChangeNameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostChatIDChangeNameForbiddenCode is the HTTP code returned for type PostChatIDChangeNameForbidden
const PostChatIDChangeNameForbiddenCode int = 403

/*PostChatIDChangeNameForbidden Forbidden

swagger:response postChatIdChangeNameForbidden
*/
type PostChatIDChangeNameForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostChatIDChangeNameForbidden creates PostChatIDChangeNameForbidden with default headers values
func NewPostChatIDChangeNameForbidden() *PostChatIDChangeNameForbidden {

	return &PostChatIDChangeNameForbidden{}
}

// WithPayload adds the payload to the post chat Id change name forbidden response
func (o *PostChatIDChangeNameForbidden) WithPayload(payload *models.Error) *PostChatIDChangeNameForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post chat Id change name forbidden response
func (o *PostChatIDChangeNameForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostChatIDChangeNameForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostChatIDChangeNameDefault Unexpected error

swagger:response postChatIdChangeNameDefault
*/
type PostChatIDChangeNameDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostChatIDChangeNameDefault creates PostChatIDChangeNameDefault with default headers values
func NewPostChatIDChangeNameDefault(code int) *PostChatIDChangeNameDefault {
	if code <= 0 {
		code = 500
	}

	return &PostChatIDChangeNameDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post chat ID change name default response
func (o *PostChatIDChangeNameDefault) WithStatusCode(code int) *PostChatIDChangeNameDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post chat ID change name default response
func (o *PostChatIDChangeNameDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post chat ID change name default response
func (o *PostChatIDChangeNameDefault) WithPayload(payload *models.Error) *PostChatIDChangeNameDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post chat ID change name default response
func (o *PostChatIDChangeNameDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostChatIDChangeNameDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
