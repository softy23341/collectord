// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Collector backend API",
    "title": "Collector API",
    "version": "1.0.0"
  },
  "host": "localhost:7000",
  "basePath": "/v1",
  "paths": {
    "/actor/get": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Actors"
        ],
        "summary": "get actors",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "rootID",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "actors list for selected root",
            "schema": {
              "$ref": "#/definitions/AActors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/actor/new": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Actors"
        ],
        "summary": "create actor",
        "parameters": [
          {
            "name": "RCreateActor",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RCreateActor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ACreateActor"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "actor already present",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/actor/{ID}/delete": {
      "delete": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Actors"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "succes"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find actor",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/actor/{ID}/update": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Actors"
        ],
        "summary": "update actor",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          },
          {
            "name": "RUpdateActor",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RUpdateActor"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "actor already present",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login",
        "parameters": [
          {
            "name": "RLogin",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token",
            "schema": {
              "$ref": "#/definitions/ALogin"
            }
          },
          "403": {
            "description": "Incorrect email or password",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "428": {
            "description": "Confirmed email is required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "summary": "Logout",
        "responses": {
          "204": {
            "description": "logout"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/password-recovery": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Password recovery",
        "parameters": [
          {
            "name": "RUserEmail",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RUserEmail"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "email was send"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/password-reset/{token}": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Password reset",
        "parameters": [
          {
            "type": "string",
            "name": "token",
            "in": "path",
            "required": true
          },
          {
            "name": "RPasswordReset",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RPasswordReset"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Password has been updated"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/reg": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Registration",
        "parameters": [
          {
            "name": "RRegistration",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RRegistration"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Cinfirm email"
          },
          "409": {
            "description": "User already present",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/reg/confirm-email": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Confirm email",
        "parameters": [
          {
            "type": "string",
            "name": "token",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Email has been confirmed"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Send token",
        "parameters": [
          {
            "name": "RUserEmail",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RUserEmail"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Cinfirm email"
          },
          "409": {
            "description": "User already present",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/badge/get": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Badges"
        ],
        "summary": "Get badges for root",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "rootID",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "badge list for selected root",
            "schema": {
              "$ref": "#/definitions/ABadges"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/badge/new": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Badges"
        ],
        "summary": "Create badge",
        "parameters": [
          {
            "name": "RCreateBadge",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RCreateBadge"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ACreateBadge"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Badge already present (color and name must be uniq)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/badge/{ID}/delete": {
      "delete": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Badges"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "succes"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find badge",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/badge/{ID}/update": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Badges"
        ],
        "summary": "Update badge",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          },
          {
            "name": "RUpdateBadge",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RUpdateBadge"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find badge",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Badge already present (color and name must be uniq)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/chat": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Chat"
        ],
        "summary": "Create chat",
        "parameters": [
          {
            "name": "RCreateChat",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RCreateChat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "chat created",
            "schema": {
              "$ref": "#/definitions/ACreateChat"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/chat/add-user": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Chat"
        ],
        "summary": "Add user to chat",
        "parameters": [
          {
            "name": "RChatAddUser",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RChatAddUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user added",
            "schema": {
              "$ref": "#/definitions/AChatAddUser"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/chat/remove-user": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Chat"
        ],
        "summary": "Remove user from chat",
        "parameters": [
          {
            "name": "RChatRemoveUser",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RChatRemoveUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user removed",
            "schema": {
              "$ref": "#/definitions/AChatRemoveUser"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/chat/{ID}": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Chat"
        ],
        "summary": "get chat info",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success resonse",
            "schema": {
              "$ref": "#/definitions/AGetChatInfo"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Cant find chat"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/chat/{ID}/change-avatar": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "description": "edit chat avatar",
        "tags": [
          "Chat"
        ],
        "parameters": [
          {
            "name": "REditChatAvatar",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/REditChatAvatar"
            }
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "avatar was changed",
            "schema": {
              "$ref": "#/definitions/AEditChatAvatar"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/chat/{ID}/change-name": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "description": "edit chat name",
        "tags": [
          "Chat"
        ],
        "parameters": [
          {
            "name": "REditChatName",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/REditChatName"
            }
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "name was changed",
            "schema": {
              "$ref": "#/definitions/AEditChatName"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/collections": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Collections"
        ],
        "summary": "Collection creation",
        "parameters": [
          {
            "name": "RNewCollection",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RNewCollection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/ANewCollection"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "unprocessable input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/collections/add-to-group": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Collections"
        ],
        "summary": "add collections to group",
        "parameters": [
          {
            "name": "RAddCollectionsToGroup",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RAddCollectionsToGroup"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/collections/draft": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Collections"
        ],
        "summary": "Draft collection | deprecated",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "rootID",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/Collection"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/collections/objects": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Collections"
        ],
        "summary": "Collection objects",
        "parameters": [
          {
            "name": "RGetCollectionsObjects",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RGetCollectionsObjects"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Collection objects list",
            "schema": {
              "$ref": "#/definitions/AObjectsPreview"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/collections/remove-from-group": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Collections"
        ],
        "summary": "remove collections from group",
        "parameters": [
          {
            "name": "RRemoveCollectionsFromeGroup",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RRemoveCollectionsFromeGroup"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/collections/{ID}": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Collections"
        ],
        "summary": "Collection info",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/ACollection"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find named date interval",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Collections"
        ],
        "summary": "Collection edit",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          },
          {
            "name": "REditCollection",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/REditCollection"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "unprocessable input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/collections/{ID}/delete": {
      "delete": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Collections"
        ],
        "summary": "Delete collection",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "name": "final",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find collecion"
          },
          "423": {
            "description": "Cant delete collection",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/dashboard": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Dashboard"
        ],
        "summary": "Groups/collections list",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "rootID",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "format": "int16",
            "name": "objectsCntPerCollection",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Groups/collections list",
            "schema": {
              "$ref": "#/definitions/ADashboard"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/event": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Events"
        ],
        "summary": "Get events",
        "parameters": [
          {
            "name": "RGetEvents",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RGetEvents"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Events list",
            "schema": {
              "$ref": "#/definitions/AGetEvents"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/event/confirm": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Events"
        ],
        "summary": "confirm events",
        "parameters": [
          {
            "name": "RConfirmEvent",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RConfirmEvent"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/groups": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Groups"
        ],
        "summary": "Create group",
        "parameters": [
          {
            "name": "RNewGroup",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RNewGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ANewGroup"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/groups/{ID}": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Groups"
        ],
        "summary": "Group collections list",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "name": "short",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Group collections list",
            "schema": {
              "$ref": "#/definitions/AGroup"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/groups/{ID}/delete": {
      "delete": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Groups"
        ],
        "summary": "Delete group",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find group"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/groups/{ID}/update": {
      "put": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Groups"
        ],
        "summary": "Update group",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          },
          {
            "name": "RUpdateGroup",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RUpdateGroup"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find group"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/invite/by-email": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Invites"
        ],
        "parameters": [
          {
            "name": "RInviteByEmail",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RInviteByEmail"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "email was send"
          },
          "403": {
            "description": "access forbidden"
          },
          "404": {
            "description": "cant find related entities"
          },
          "409": {
            "description": "this user has already been invited to this root"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/invite/new": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Invites"
        ],
        "parameters": [
          {
            "name": "RCreateInvite",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RCreateInvite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "email was send",
            "schema": {
              "$ref": "#/definitions/ACreateInvite"
            }
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find related entities"
          },
          "409": {
            "description": "this user has already been invited to this root"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/invite/{ID}/accept": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Invites"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "the invite was accepted"
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find invite"
          },
          "409": {
            "description": "cant accept invite"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/invite/{ID}/cancel": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Invites"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "the invite was canceled"
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find invite"
          },
          "409": {
            "description": "cant cancel invite"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/invite/{ID}/reject": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Invites"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "the invite was rejected"
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find invite"
          },
          "409": {
            "description": "cant reject invite"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/material/get": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Materials"
        ],
        "summary": "get materials",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "rootID",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "materials list for selected root",
            "schema": {
              "$ref": "#/definitions/AMaterials"
            }
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/material/new": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Materials"
        ],
        "summary": "create material",
        "parameters": [
          {
            "name": "RCreateMaterial",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RCreateMaterial"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ACreateMaterial"
            }
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "material already present",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/material/{ID}/delete": {
      "delete": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Materials"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "succes"
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find material",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/material/{ID}/update": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Materials"
        ],
        "summary": "update material",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          },
          {
            "name": "RUpdateMaterial",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RUpdateMaterial"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "material already present",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/medias": {
      "get": {
        "tags": [
          "Medias"
        ],
        "summary": "get media",
        "parameters": [
          {
            "type": "string",
            "name": "path",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "messageID",
            "in": "query"
          }
        ],
        "responses": {
          "204": {
            "description": "success with X-Accel-Redirect"
          },
          "403": {
            "description": "access denied"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "Medias"
        ],
        "summary": "new file",
        "parameters": [
          {
            "type": "file",
            "description": "MediaTypePhoto       MediaType = 1   - just photo\nMediaTypePhotoObject           = 2   - object photo\nMediaTypeAvatar                = 10  - avatar\nMediaTypeCollection            = 15  - collection\nMediaTypeMsg                   = 20  - msg media\nMediaTypeDocument              = 101 - reserved\nMediaTypeVideo                 = 201 - reserved\nMediaTypeMapPoint              = 301 - reserved\n",
            "name": "file",
            "in": "formData"
          },
          {
            "type": "integer",
            "format": "int16",
            "name": "typo",
            "in": "formData"
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "clientUniqID",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ANewMedia"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/medias/by-ids": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Medias"
        ],
        "summary": "get medias by ids",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "name": "ids",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "medias list",
            "schema": {
              "$ref": "#/definitions/AGetMediasByIDs"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/message": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Messages"
        ],
        "summary": "Send message",
        "parameters": [
          {
            "name": "RSendMessage",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RSendMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful send",
            "schema": {
              "$ref": "#/definitions/ASendMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "cant send message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "423": {
            "description": "Cant send message to blocked user",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/message/all-conversation": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Messages"
        ],
        "summary": "Get recent conversations",
        "parameters": [
          {
            "name": "RGetAllConversation",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RGetAllConversation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Conversations with last messages",
            "schema": {
              "$ref": "#/definitions/AGetAllConversation"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/message/byids": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Messages"
        ],
        "summary": "Get messages by ids",
        "parameters": [
          {
            "name": "RGetMessages",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RGetMessages"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful received",
            "schema": {
              "$ref": "#/definitions/AGetMessages"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/message/range": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Messages"
        ],
        "summary": "Get messages line for peer",
        "parameters": [
          {
            "name": "RGetMessagesRange",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RGetMessagesRange"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful received",
            "schema": {
              "$ref": "#/definitions/AGetMessagesRange"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/message/read-history": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Messages"
        ],
        "summary": "Confirm msg",
        "parameters": [
          {
            "name": "RReadHistory",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RReadHistory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful readed",
            "schema": {
              "$ref": "#/definitions/AReadHistory"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/named-date-interval/get": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Nameddateintervals"
        ],
        "summary": "get named date intervals",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "rootID",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "named date intervals for selected root",
            "schema": {
              "$ref": "#/definitions/ANamedDateIntervals"
            }
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/named-date-interval/new": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Nameddateintervals"
        ],
        "summary": "create named date interval",
        "parameters": [
          {
            "name": "RCreateNamedDateInterval",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RCreateNamedDateInterval"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ACreateNamedDateInterval"
            }
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "named date interval already present",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/named-date-interval/{ID}/delete": {
      "delete": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Nameddateintervals"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "succes"
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find named date interval",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/named-date-interval/{ID}/update": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Nameddateintervals"
        ],
        "summary": "update named date interval",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          },
          {
            "name": "RUpdateNamedDateInterval",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RUpdateNamedDateInterval"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "named date interval already present",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "invalid format",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/object-status/new": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Objectstatus"
        ],
        "parameters": [
          {
            "name": "RCreateObjectStatus",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RCreateObjectStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/ACreateObjectStatus"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/objects": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "description": "Create new object in drafts\n",
        "tags": [
          "Objects"
        ],
        "summary": "Create new object",
        "parameters": [
          {
            "name": "RNewObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RNewObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ANewObject"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/objects/delete": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Objects"
        ],
        "summary": "batch delete objects",
        "parameters": [
          {
            "name": "RDeleteObjects",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RDeleteObjects"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find objects"
          },
          "423": {
            "description": "Cant delete objects",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/objects/move": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Objects"
        ],
        "summary": "Move objects to collection",
        "parameters": [
          {
            "name": "RMoveObjects",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RMoveObjects"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find objects",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/objects/search": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "description": "Search object by root\n",
        "tags": [
          "Objects"
        ],
        "summary": "Object search",
        "parameters": [
          {
            "name": "RSearchObjects",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RSearchObjects"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ASearchObjects"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/objects/{ID}": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Objects"
        ],
        "summary": "Get object by ID",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "messageID",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Object full info",
            "schema": {
              "$ref": "#/definitions/AObject"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find object",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Objects"
        ],
        "summary": "Edit object by ID",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          },
          {
            "name": "REditObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/REditObject"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "ok"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find object"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/objects/{ID}/delete": {
      "delete": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Objects"
        ],
        "summary": "delete object",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "name": "final",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find object"
          },
          "423": {
            "description": "Cant delete object",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/origin-location/get": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Originlocations"
        ],
        "summary": "get origin locations",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "rootID",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "originLocations list for selected root",
            "schema": {
              "$ref": "#/definitions/AOriginLocations"
            }
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/origin-location/new": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Originlocations"
        ],
        "summary": "create origin-location",
        "parameters": [
          {
            "name": "RCreateOriginLocation",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RCreateOriginLocation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ACreateOriginLocation"
            }
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "originLocation already present",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/origin-location/{ID}/delete": {
      "delete": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Originlocations"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "succes"
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find origin location",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/origin-location/{ID}/update": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Originlocations"
        ],
        "summary": "update origin-location",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          },
          {
            "name": "RUpdateOriginLocation",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RUpdateOriginLocation"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "origin location already present",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/public/collections": {
      "post": {
        "tags": [
          "Public Collections"
        ],
        "summary": "List",
        "parameters": [
          {
            "name": "RPublicCollections",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RPublicCollections"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Collections list",
            "schema": {
              "$ref": "#/definitions/APublicCollections"
            }
          },
          "404": {
            "description": "cant find objects",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/public/collections/objects": {
      "post": {
        "tags": [
          "Public Collections"
        ],
        "summary": "Collection objects",
        "parameters": [
          {
            "name": "RGetCollectionsObjects",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RGetCollectionsObjects"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Collection objects list",
            "schema": {
              "$ref": "#/definitions/AObjectsPreview"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/public/collections/{ID}": {
      "get": {
        "tags": [
          "Public Collections"
        ],
        "summary": "Public collection info",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/APublicCollection"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find named date interval",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/public/objects/{ID}": {
      "get": {
        "tags": [
          "Public Objects"
        ],
        "summary": "Get public object by ID",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Object full info",
            "schema": {
              "$ref": "#/definitions/AObject"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find object",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/references": {
      "get": {
        "tags": [
          "References"
        ],
        "summary": "Gets references list object creation",
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "$ref": "#/definitions/AReferences"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/right": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Rights"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "rootID",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "userID",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/AGetRight"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Rights"
        ],
        "parameters": [
          {
            "name": "RSetRight",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RSetRight"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/ASetRight"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/root/add-user": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Roots"
        ],
        "summary": "add user to root",
        "parameters": [
          {
            "name": "RAddUserToRoot",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RAddUserToRoot"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/root/by-user": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Roots"
        ],
        "summary": "get users root",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "userID",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success resonse",
            "schema": {
              "$ref": "#/definitions/ARoots"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/root/remove-user": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Roots"
        ],
        "summary": "remove user from root",
        "parameters": [
          {
            "name": "RRemoveUserFromRoot",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RRemoveUserFromRoot"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find user or root",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/root/{ID}": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Roots"
        ],
        "summary": "get info about root",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success resonse",
            "schema": {
              "$ref": "#/definitions/ARoot"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/session/register-device-token": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Session"
        ],
        "summary": "Register device",
        "parameters": [
          {
            "name": "RRegisterDeviceToken",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RRegisterDeviceToken"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success registred"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/task": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "RCreateTask",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RCreateTask"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/AGetTask"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/task/my-archive-list": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "RMyArchiveList",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RMyArchiveList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/AMyTaskList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/task/my-list": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Tasks"
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/AMyTaskList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/task/{id}": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/AGetTask"
            }
          },
          "403": {
            "description": "access error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find the task",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "REditTask",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/REditTask"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/AGetTask"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find the task",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "clientUniqID",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find the task",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/task/{id}/archive": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "RArchiveTask",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RArchiveTask"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find the task",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/task/{id}/assign-to": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "RAssignTaskTo",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RAssignTaskTo"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find the task",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/task/{id}/change-status": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "RChangeTaskStatus",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RChangeTaskStatus"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find the task",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/team/by-root-id": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Teams"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "rootID",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/ATeam"
            }
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find root",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user": {
      "put": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Users"
        ],
        "summary": "edit user",
        "parameters": [
          {
            "name": "REditUser",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/REditUser"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/about": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Users"
        ],
        "summary": "information about user",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "rootID",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success response",
            "schema": {
              "$ref": "#/definitions/AUser"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/search-by-name": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Users"
        ],
        "summary": "search user by full name and email",
        "parameters": [
          {
            "name": "RSearchUsersByName",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RUsersByName"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success response",
            "schema": {
              "$ref": "#/definitions/AUsersByName"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/update/locale": {
      "put": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Users"
        ],
        "summary": "edit user locale",
        "parameters": [
          {
            "name": "RUpdateUserLocale",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RUpdateUserLocale"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/ban-list": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Users ban list"
        ],
        "summary": "Get ban list info",
        "responses": {
          "200": {
            "description": "success resonse",
            "schema": {
              "$ref": "#/definitions/AGetBanListInfo"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Cant find users"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/ban-list/add": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Users ban list"
        ],
        "summary": "Add user to block list",
        "parameters": [
          {
            "name": "RBanAddUser",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RBanAddUser"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "email was added to ban-list"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "User not found"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/ban-list/remove": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Users ban list"
        ],
        "summary": "Remove user from block list",
        "parameters": [
          {
            "name": "RBanRemoveUser",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RBanRemoveUser"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "user was removed from ban-list"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "User not found"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AActors": {
      "type": "object",
      "properties": {
        "actors": {
          "$ref": "#/definitions/Actors"
        }
      }
    },
    "ABadges": {
      "type": "object",
      "properties": {
        "badges": {
          "$ref": "#/definitions/Badges"
        }
      }
    },
    "AChatAddUser": {
      "type": "object",
      "required": [
        "chatNewUserMessage"
      ],
      "properties": {
        "chatNewUserMessage": {
          "$ref": "#/definitions/Message"
        }
      }
    },
    "AChatRemoveUser": {
      "type": "object",
      "required": [
        "chatRemoveUserMessage"
      ],
      "properties": {
        "chatRemoveUserMessage": {
          "$ref": "#/definitions/Message"
        }
      }
    },
    "ACollection": {
      "type": "object",
      "properties": {
        "collection": {
          "$ref": "#/definitions/Collection"
        },
        "groups": {
          "$ref": "#/definitions/Groups"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "rights": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityAccessRight"
          }
        },
        "users": {
          "$ref": "#/definitions/Users"
        }
      }
    },
    "ACreateActor": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ACreateBadge": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ACreateChat": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "createChatServiceMessage": {
          "$ref": "#/definitions/Message"
        }
      }
    },
    "ACreateInvite": {
      "type": "object",
      "required": [
        "invite"
      ],
      "properties": {
        "invite": {
          "$ref": "#/definitions/Invite"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "users": {
          "$ref": "#/definitions/Users"
        }
      }
    },
    "ACreateMaterial": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ACreateNamedDateInterval": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ACreateObjectStatus": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ACreateOriginLocation": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ADashboard": {
      "type": "object",
      "properties": {
        "actors": {
          "$ref": "#/definitions/Actors"
        },
        "badges": {
          "$ref": "#/definitions/Badges"
        },
        "collections": {
          "$ref": "#/definitions/Collections"
        },
        "groups": {
          "$ref": "#/definitions/Groups"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "objectsPreview": {
          "$ref": "#/definitions/CObjectPreviews"
        },
        "originLocations": {
          "$ref": "#/definitions/OriginLocations"
        }
      }
    },
    "AEditChatAvatar": {
      "type": "object",
      "required": [
        "newAvatarServiceMessage"
      ],
      "properties": {
        "avatar": {
          "x-nullable": true,
          "$ref": "#/definitions/Media"
        },
        "newAvatarServiceMessage": {
          "$ref": "#/definitions/Message"
        }
      }
    },
    "AEditChatName": {
      "type": "object",
      "required": [
        "newNameServiceMessage"
      ],
      "properties": {
        "newNameServiceMessage": {
          "$ref": "#/definitions/Message"
        }
      }
    },
    "AGetAllConversation": {
      "type": "object",
      "properties": {
        "NTotalUnreadMessages": {
          "type": "integer",
          "format": "int32"
        },
        "NTotalUnreadNotifications": {
          "type": "integer",
          "format": "int32"
        },
        "actors": {
          "$ref": "#/definitions/Actors"
        },
        "badges": {
          "$ref": "#/definitions/Badges"
        },
        "chats": {
          "$ref": "#/definitions/Chats"
        },
        "contactUsersIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "conversationUsers": {
          "$ref": "#/definitions/ConversationUsers"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "messages": {
          "$ref": "#/definitions/Messages"
        },
        "objectsPreview": {
          "$ref": "#/definitions/CObjectPreviews"
        },
        "originLocations": {
          "$ref": "#/definitions/OriginLocations"
        },
        "taskPreviews": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskPreview"
          }
        },
        "users": {
          "$ref": "#/definitions/Users"
        }
      }
    },
    "AGetBanListInfo": {
      "type": "object",
      "properties": {
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "users": {
          "$ref": "#/definitions/Users"
        }
      }
    },
    "AGetChatInfo": {
      "type": "object",
      "required": [
        "chat"
      ],
      "properties": {
        "chat": {
          "$ref": "#/definitions/Chat"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "users": {
          "$ref": "#/definitions/Users"
        }
      }
    },
    "AGetEvents": {
      "type": "object",
      "required": [
        "events"
      ],
      "properties": {
        "events": {
          "$ref": "#/definitions/Events"
        }
      }
    },
    "AGetMediasByIDs": {
      "type": "object",
      "required": [
        "medias"
      ],
      "properties": {
        "medias": {
          "$ref": "#/definitions/Medias"
        }
      }
    },
    "AGetMessages": {
      "type": "object",
      "required": [
        "messages"
      ],
      "properties": {
        "actors": {
          "$ref": "#/definitions/Actors"
        },
        "badges": {
          "$ref": "#/definitions/Badges"
        },
        "chats": {
          "$ref": "#/definitions/Chats"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "messages": {
          "$ref": "#/definitions/Messages"
        },
        "objectsPreview": {
          "$ref": "#/definitions/CObjectPreviews"
        },
        "originLocations": {
          "$ref": "#/definitions/OriginLocations"
        },
        "taskPreviews": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskPreview"
          }
        },
        "users": {
          "$ref": "#/definitions/Users"
        }
      }
    },
    "AGetMessagesRange": {
      "type": "object",
      "required": [
        "messages"
      ],
      "properties": {
        "actors": {
          "$ref": "#/definitions/Actors"
        },
        "badges": {
          "$ref": "#/definitions/Badges"
        },
        "chats": {
          "$ref": "#/definitions/Chats"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "messages": {
          "$ref": "#/definitions/Messages"
        },
        "objectsPreview": {
          "$ref": "#/definitions/CObjectPreviews"
        },
        "originLocations": {
          "$ref": "#/definitions/OriginLocations"
        },
        "taskPreviews": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskPreview"
          }
        },
        "users": {
          "$ref": "#/definitions/Users"
        }
      }
    },
    "AGetRight": {
      "type": "object",
      "properties": {
        "collections": {
          "$ref": "#/definitions/Collections"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "rights": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Right"
          }
        }
      }
    },
    "AGetTask": {
      "type": "object",
      "properties": {
        "collections": {
          "$ref": "#/definitions/Collections"
        },
        "groups": {
          "$ref": "#/definitions/Groups"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "objectsPreview": {
          "description": "only title",
          "$ref": "#/definitions/CObjectPreviews"
        },
        "task": {
          "$ref": "#/definitions/Task"
        },
        "users": {
          "$ref": "#/definitions/Users"
        }
      }
    },
    "AGroup": {
      "type": "object",
      "properties": {
        "actors": {
          "$ref": "#/definitions/Actors"
        },
        "badges": {
          "$ref": "#/definitions/Badges"
        },
        "collections": {
          "$ref": "#/definitions/Collections"
        },
        "group": {
          "$ref": "#/definitions/Group"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "objectsPreview": {
          "$ref": "#/definitions/CObjectPreviews"
        },
        "originLocations": {
          "$ref": "#/definitions/OriginLocations"
        }
      }
    },
    "ALogin": {
      "type": "object",
      "required": [
        "authToken"
      ],
      "properties": {
        "authToken": {
          "$ref": "#/definitions/AuthToken"
        }
      }
    },
    "AMaterials": {
      "type": "object",
      "properties": {
        "materials": {
          "$ref": "#/definitions/Materials"
        }
      }
    },
    "AMyTaskList": {
      "type": "object",
      "properties": {
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "taskPreviews": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskPreview"
          }
        },
        "users": {
          "$ref": "#/definitions/Users"
        }
      }
    },
    "ANamedDateIntervals": {
      "type": "object",
      "required": [
        "dateIntervals"
      ],
      "properties": {
        "dateIntervals": {
          "$ref": "#/definitions/CDateIntervals"
        }
      }
    },
    "ANewCollection": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ANewGroup": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ANewMedia": {
      "type": "object",
      "required": [
        "media"
      ],
      "properties": {
        "media": {
          "$ref": "#/definitions/Media"
        }
      }
    },
    "ANewObject": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "AObject": {
      "type": "object",
      "properties": {
        "actors": {
          "$ref": "#/definitions/Actors"
        },
        "badges": {
          "$ref": "#/definitions/Badges"
        },
        "collection": {
          "$ref": "#/definitions/Collection"
        },
        "dateIntervals": {
          "$ref": "#/definitions/CDateIntervals"
        },
        "materials": {
          "$ref": "#/definitions/Materials"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "object": {
          "$ref": "#/definitions/CObject"
        },
        "originLocations": {
          "$ref": "#/definitions/OriginLocations"
        },
        "user": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "AObjectsPreview": {
      "type": "object",
      "properties": {
        "actors": {
          "$ref": "#/definitions/Actors"
        },
        "badges": {
          "$ref": "#/definitions/Badges"
        },
        "collections": {
          "$ref": "#/definitions/Collections"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "objectsPreview": {
          "$ref": "#/definitions/CObjectPreviews"
        },
        "originLocations": {
          "$ref": "#/definitions/OriginLocations"
        },
        "totalObjects": {
          "type": "integer",
          "format": "int64"
        },
        "users": {
          "$ref": "#/definitions/Users"
        },
        "users_collections": {
          "$ref": "#/definitions/UsersCollections"
        }
      }
    },
    "AOriginLocations": {
      "type": "object",
      "properties": {
        "originLocations": {
          "$ref": "#/definitions/OriginLocations"
        }
      }
    },
    "APublicCollection": {
      "type": "object",
      "required": [
        "collection"
      ],
      "properties": {
        "collection": {
          "$ref": "#/definitions/Collection"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "users": {
          "$ref": "#/definitions/Users"
        }
      }
    },
    "APublicCollections": {
      "type": "object",
      "properties": {
        "collections": {
          "$ref": "#/definitions/Collections"
        },
        "collectionsTotalCount": {
          "type": "integer",
          "format": "int64",
          "x-omitempty": false
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "users": {
          "$ref": "#/definitions/Users"
        },
        "users_collections": {
          "$ref": "#/definitions/UsersCollections"
        }
      }
    },
    "AReadHistory": {
      "type": "object",
      "properties": {
        "NPeerUnreadMessages": {
          "type": "integer",
          "format": "int32"
        },
        "NTotalUnreadMessages": {
          "type": "integer",
          "format": "int32"
        },
        "NTotalUnreadNotifications": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AReferences": {
      "type": "object",
      "properties": {
        "currencies": {
          "$ref": "#/definitions/Currencies"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "objectStatuses": {
          "$ref": "#/definitions/CObjectStatuses"
        }
      }
    },
    "ARegistration": {
      "type": "object",
      "required": [
        "authToken"
      ],
      "properties": {
        "authToken": {
          "$ref": "#/definitions/AuthToken"
        }
      }
    },
    "ARoot": {
      "type": "object",
      "properties": {
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "root": {
          "$ref": "#/definitions/Root"
        },
        "users": {
          "$ref": "#/definitions/Users"
        }
      }
    },
    "ARoots": {
      "type": "object",
      "properties": {
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "roots": {
          "$ref": "#/definitions/Roots"
        },
        "users": {
          "$ref": "#/definitions/Users"
        }
      }
    },
    "ASearchObjects": {
      "type": "object",
      "properties": {
        "actors": {
          "$ref": "#/definitions/Actors"
        },
        "badges": {
          "$ref": "#/definitions/Badges"
        },
        "collections": {
          "$ref": "#/definitions/Collections"
        },
        "dateIntervals": {
          "$ref": "#/definitions/CDateIntervals"
        },
        "filters": {
          "$ref": "#/definitions/CObjectSearchFilters"
        },
        "groups": {
          "$ref": "#/definitions/Groups"
        },
        "materials": {
          "$ref": "#/definitions/Materials"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "objectsPreview": {
          "$ref": "#/definitions/CObjectPreviews"
        },
        "originLocations": {
          "$ref": "#/definitions/OriginLocations"
        },
        "totalHits": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ASendMessage": {
      "type": "object",
      "required": [
        "messageID"
      ],
      "properties": {
        "messageID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ASetRight": {
      "type": "object",
      "properties": {
        "right": {
          "$ref": "#/definitions/Right"
        }
      }
    },
    "ATeam": {
      "type": "object",
      "properties": {
        "invitedUsers": {
          "$ref": "#/definitions/InvitedUsers"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "tusers": {
          "$ref": "#/definitions/TUsers"
        },
        "users": {
          "$ref": "#/definitions/Users"
        }
      }
    },
    "AUser": {
      "type": "object",
      "required": [
        "users",
        "userID"
      ],
      "properties": {
        "collections": {
          "$ref": "#/definitions/Collections"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "rights": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Right"
          }
        },
        "roots": {
          "$ref": "#/definitions/Roots"
        },
        "taskPreviews": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskPreview"
          }
        },
        "userID": {
          "type": "integer",
          "format": "int64"
        },
        "users": {
          "$ref": "#/definitions/Users"
        }
      }
    },
    "AUsersByName": {
      "type": "object",
      "properties": {
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "popularTags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "users": {
          "$ref": "#/definitions/Users"
        },
        "usersTotalCount": {
          "type": "integer",
          "format": "int64",
          "x-omitempty": false
        }
      }
    },
    "Actor": {
      "type": "object",
      "required": [
        "ID",
        "name"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Actors": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Actor"
          },
          "x-omitempty": false
        }
      }
    },
    "AddedToGroupCollectionEvent": {
      "type": "object",
      "required": [
        "collectionID",
        "groupID"
      ],
      "properties": {
        "collectionID": {
          "type": "integer",
          "format": "int64"
        },
        "groupID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "AuthToken": {
      "type": "object",
      "required": [
        "token"
      ],
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "Badge": {
      "type": "object",
      "required": [
        "ID",
        "name"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "color": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Badges": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Badge"
          },
          "x-omitempty": false
        }
      }
    },
    "CDate": {
      "type": "object",
      "properties": {
        "date": {
          "description": "date format 2016-05-18",
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "CDateInterval": {
      "type": "object",
      "required": [
        "ID",
        "from",
        "to",
        "name"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "from": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "to": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CDateIntervals": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CDateInterval"
          },
          "x-omitempty": false
        }
      }
    },
    "CObject": {
      "type": "object",
      "required": [
        "ID",
        "collectionID",
        "name"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "accessLevel": {
          "description": "none | read | write | admin\n",
          "type": "string"
        },
        "actorsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "x-omitempty": false
        },
        "badgesIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "x-omitempty": false
        },
        "collectionID": {
          "type": "integer",
          "format": "int64"
        },
        "currentStatus": {
          "$ref": "#/definitions/CObjectStatusRef"
        },
        "description": {
          "type": "string"
        },
        "materialsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "x-omitempty": false
        },
        "mediasIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "x-omitempty": false
        },
        "name": {
          "type": "string"
        },
        "originLocationsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "x-omitempty": false
        },
        "productionDate": {
          "$ref": "#/definitions/CObjectDateInterval"
        },
        "provenance": {
          "type": "string"
        },
        "purchaseDate": {
          "description": "date format 2016-05-18",
          "type": "string",
          "x-nullable": true
        },
        "purchasePrice": {
          "$ref": "#/definitions/Money"
        },
        "rootIDNumber": {
          "type": "string"
        },
        "valuations": {
          "$ref": "#/definitions/Valuations"
        }
      }
    },
    "CObjectDateInterval": {
      "type": "object",
      "properties": {
        "dateIntervalID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "from": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "to": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        }
      }
    },
    "CObjectDateValueInterval": {
      "type": "object",
      "required": [
        "from",
        "to"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "from": {
          "type": "integer",
          "format": "int64"
        },
        "to": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CObjectMessage": {
      "type": "object",
      "required": [
        "objectID"
      ],
      "properties": {
        "objectID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CObjectOrders": {
      "description": "1 - ASC, -1 - DESC",
      "type": "object",
      "properties": {
        "actorName": {
          "type": "integer",
          "format": "int16"
        },
        "creationTime": {
          "type": "integer",
          "format": "int16"
        },
        "name": {
          "type": "integer",
          "format": "int16"
        },
        "updateTime": {
          "type": "integer",
          "format": "int16"
        }
      }
    },
    "CObjectPreview": {
      "type": "object",
      "required": [
        "ID",
        "collectionID"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "accessLevel": {
          "description": "none | read | write | admin\n",
          "type": "string"
        },
        "actorsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "x-omitempty": false
        },
        "badgesIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "x-omitempty": false
        },
        "collectionID": {
          "type": "integer",
          "format": "int64"
        },
        "currentStatus": {
          "$ref": "#/definitions/CObjectStatusRef"
        },
        "mediasIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "x-omitempty": false
        },
        "name": {
          "type": "string"
        },
        "originLocationsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "x-omitempty": false
        },
        "rootID": {
          "type": "integer",
          "format": "int64"
        },
        "valuations": {
          "$ref": "#/definitions/Valuations"
        }
      }
    },
    "CObjectPreviews": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CObjectPreview"
          },
          "x-omitempty": false
        }
      }
    },
    "CObjectSearchFilterResult": {
      "type": "object",
      "properties": {
        "cnt": {
          "type": "integer",
          "format": "int64"
        },
        "propertyID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CObjectSearchFilters": {
      "type": "object",
      "properties": {
        "actors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CObjectSearchFilterResult"
          },
          "x-omitempty": false
        },
        "badges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CObjectSearchFilterResult"
          },
          "x-omitempty": false
        },
        "collections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CObjectSearchFilterResult"
          },
          "x-omitempty": false
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CObjectSearchFilterResult"
          },
          "x-omitempty": false
        },
        "materials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CObjectSearchFilterResult"
          },
          "x-omitempty": false
        },
        "originLocations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CObjectSearchFilterResult"
          },
          "x-omitempty": false
        },
        "productionNamedDateIntervals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CObjectSearchFilterResult"
          },
          "x-omitempty": false
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CObjectSearchFilterResult"
          },
          "x-omitempty": false
        }
      }
    },
    "CObjectStatus": {
      "type": "object",
      "required": [
        "ID",
        "name",
        "description"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "imageMediaID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "name": {
          "type": "string"
        }
      }
    },
    "CObjectStatusRef": {
      "type": "object",
      "required": [
        "objectStatusID",
        "startDate"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "notificationDate": {
          "type": "string",
          "format": "dateTime",
          "x-nullable": true
        },
        "objectStatusID": {
          "type": "integer",
          "format": "int64"
        },
        "startDate": {
          "description": "date-time - RFC3339",
          "type": "string"
        }
      }
    },
    "CObjectStatuses": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CObjectStatus"
          },
          "x-omitempty": false
        }
      }
    },
    "Chat": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "adminUserID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "avatarID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "usersCnt": {
          "type": "integer",
          "format": "int16",
          "x-nullable": true
        }
      }
    },
    "Chats": {
      "type": "object",
      "required": [
        "list"
      ],
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Chat"
          },
          "x-omitempty": false
        }
      }
    },
    "Collection": {
      "type": "object",
      "required": [
        "ID",
        "name",
        "rootID",
        "typo",
        "description"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "accessLevel": {
          "description": "none | read | write | admin\n",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "groupsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "x-omitempty": false
        },
        "imageMediaID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "isAnonymous": {
          "type": "boolean",
          "x-nullable": true
        },
        "name": {
          "type": "string"
        },
        "objectsCnt": {
          "type": "integer",
          "format": "int64"
        },
        "public": {
          "type": "boolean"
        },
        "rootID": {
          "type": "integer",
          "format": "int64"
        },
        "typo": {
          "type": "integer",
          "format": "int16"
        },
        "valuation": {
          "type": "object",
          "properties": {
            "currencyID": {
              "type": "integer",
              "format": "int64"
            },
            "price": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      }
    },
    "Collections": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Collection"
          },
          "x-omitempty": false
        }
      }
    },
    "ConversationUser": {
      "type": "object",
      "required": [
        "userID",
        "peer",
        "nUnreadMessages"
      ],
      "properties": {
        "lastReadMessageID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "nUnreadMessages": {
          "type": "integer",
          "format": "int32"
        },
        "peer": {
          "$ref": "#/definitions/Peer"
        },
        "userID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ConversationUsers": {
      "type": "object",
      "required": [
        "list"
      ],
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConversationUser"
          },
          "x-omitempty": false
        }
      }
    },
    "Currencies": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Currency"
          },
          "x-omitempty": false
        }
      }
    },
    "Currency": {
      "type": "object",
      "required": [
        "ID",
        "symbol",
        "code",
        "num",
        "e",
        "currency"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "code": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "e": {
          "type": "integer",
          "format": "int16"
        },
        "num": {
          "type": "string"
        },
        "symbol": {
          "type": "string"
        }
      }
    },
    "DeletedObjectEvent": {
      "type": "object",
      "required": [
        "objectID",
        "originalCollectionID"
      ],
      "properties": {
        "objectID": {
          "type": "integer",
          "format": "int64"
        },
        "originalCollectionID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "EntityAccessRight": {
      "type": "object",
      "required": [
        "userID",
        "level"
      ],
      "properties": {
        "level": {
          "description": "none | read | write | admin\n",
          "type": "string"
        },
        "userID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "EntityRef": {
      "type": "object",
      "required": [
        "typo",
        "ID"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "typo": {
          "description": "ObjectEntityType     EntityType = 0\nCollectionEntityType            = 10\nGroupEntityType                 = 20\n\nActorEntityType          = 30\nBadgeEntityType          = 40\nMaterialEntityType       = 50\nOriginLocationEntityType = 60\nNamedIntervalEntityType  = 70\n",
          "type": "integer",
          "format": "int16"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "fields": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Event": {
      "type": "object",
      "required": [
        "seqNo",
        "typo"
      ],
      "properties": {
        "creationTime": {
          "description": "date-time - RFC3339",
          "type": "string"
        },
        "historyRead": {
          "$ref": "#/definitions/EventHistoryRead"
        },
        "newMessage": {
          "$ref": "#/definitions/EventNewMessage"
        },
        "seqNo": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "description": "new event       - 0\nconfirmed event - 10\n",
          "type": "integer",
          "format": "int16"
        },
        "typo": {
          "description": "new message    - 0\nreaded history - 10\nchanged entity - 20\n",
          "type": "integer",
          "format": "int16"
        }
      }
    },
    "EventHistoryRead": {
      "type": "object",
      "required": [
        "peer",
        "lastReadMessageID"
      ],
      "properties": {
        "lastReadMessageID": {
          "type": "integer",
          "format": "int64"
        },
        "peer": {
          "$ref": "#/definitions/Peer"
        }
      }
    },
    "EventNewMessage": {
      "type": "object",
      "required": [
        "messageID"
      ],
      "properties": {
        "messageID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Events": {
      "type": "object",
      "required": [
        "list"
      ],
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Event"
          },
          "x-omitempty": false
        }
      }
    },
    "FullGroup": {
      "type": "object",
      "properties": {
        "collections": {
          "$ref": "#/definitions/Collections"
        },
        "group": {
          "$ref": "#/definitions/Group"
        }
      }
    },
    "Group": {
      "type": "object",
      "required": [
        "ID",
        "name",
        "rootID"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "accessLevel": {
          "description": "none | read | write | admin\n",
          "type": "string"
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "rootID": {
          "type": "integer",
          "format": "int64"
        },
        "valuation": {
          "type": "object",
          "properties": {
            "currencyID": {
              "type": "integer",
              "format": "int64"
            },
            "price": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      }
    },
    "Groups": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Group"
          },
          "x-omitempty": false
        }
      }
    },
    "InputBadge": {
      "type": "object",
      "required": [
        "name",
        "color"
      ],
      "properties": {
        "color": {
          "type": "string",
          "minLength": 1
        },
        "name": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "InputCollection": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "x-nullable": true
        },
        "groupsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "imageMediaID": {
          "$ref": "#/definitions/InputInt"
        },
        "isAnonymous": {
          "type": "boolean",
          "x-nullable": true
        },
        "name": {
          "type": "string"
        },
        "public": {
          "type": "boolean",
          "x-nullable": true
        },
        "rights": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityAccessRight"
          },
          "x-omitempty": false
        }
      }
    },
    "InputIDRange": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "distance": {
          "type": "integer",
          "format": "int32"
        },
        "include": {
          "type": "boolean"
        }
      }
    },
    "InputInt": {
      "type": "object",
      "properties": {
        "value": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        }
      }
    },
    "InputMediaMessage": {
      "type": "object",
      "required": [
        "mediaID"
      ],
      "properties": {
        "mediaID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "InputObject": {
      "type": "object",
      "required": [
        "collectionID"
      ],
      "properties": {
        "actors": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "actorsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "badges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InputBadge"
          }
        },
        "badgesIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "collectionID": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string",
          "x-nullable": true
        },
        "materials": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "materialsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "mediasIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "name": {
          "type": "string"
        },
        "objectStatus": {
          "$ref": "#/definitions/InputObjectStatusRef"
        },
        "originLocations": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "originLocationsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "productionDate": {
          "$ref": "#/definitions/CObjectDateInterval"
        },
        "provenance": {
          "type": "string",
          "x-nullable": true
        },
        "purchaseDate": {
          "$ref": "#/definitions/CDate"
        },
        "purchasePrice": {
          "$ref": "#/definitions/InputPrice"
        },
        "rootIDNumber": {
          "type": "string",
          "x-nullable": true
        },
        "valuations": {
          "$ref": "#/definitions/Valuations"
        }
      }
    },
    "InputObjectMessage": {
      "type": "object",
      "required": [
        "objectID"
      ],
      "properties": {
        "objectID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "InputObjectSearchFilters": {
      "type": "object",
      "properties": {
        "actors": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "badges": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "collections": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "materials": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "originLocations": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "productionDateInterval": {
          "$ref": "#/definitions/CObjectDateValueInterval"
        },
        "statuses": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    "InputObjectStatusRef": {
      "type": "object",
      "required": [
        "description",
        "statusID"
      ],
      "properties": {
        "description": {
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "statusID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "InputPaginator": {
      "type": "object",
      "required": [
        "page",
        "cnt"
      ],
      "properties": {
        "cnt": {
          "type": "integer",
          "format": "int16"
        },
        "page": {
          "type": "integer",
          "format": "int16"
        }
      }
    },
    "InputPeer": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "typo": {
          "description": "user - 1\nchat - 2\n",
          "type": "integer",
          "format": "int16"
        }
      }
    },
    "InputPrice": {
      "type": "object",
      "properties": {
        "currencyID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "value": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        }
      }
    },
    "InputTextMessage": {
      "type": "object",
      "required": [
        "text"
      ],
      "properties": {
        "text": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "InputUser": {
      "type": "object",
      "properties": {
        "avatarMediaID": {
          "$ref": "#/definitions/InputInt"
        },
        "description": {
          "type": "string",
          "x-nullable": true
        },
        "firstName": {
          "type": "string",
          "x-nullable": true
        },
        "isAnonymous": {
          "type": "boolean",
          "x-nullable": true
        },
        "lastName": {
          "type": "string",
          "x-nullable": true
        },
        "speciality": {
          "type": "string",
          "x-nullable": true
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "Invite": {
      "type": "object",
      "required": [
        "ID",
        "fromUserID",
        "toUserID",
        "rootID",
        "status"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "fromUserID": {
          "type": "integer",
          "format": "int64"
        },
        "rootID": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "description": "Created  = 0\nAccepted = 10\nRejected = 20\nCanceled = 101\n",
          "type": "integer",
          "format": "int16"
        },
        "toUserID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "InvitedUser": {
      "type": "object",
      "required": [
        "userID",
        "inviteID"
      ],
      "properties": {
        "inviteID": {
          "type": "integer",
          "format": "int64"
        },
        "userID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "InvitedUsers": {
      "type": "object",
      "required": [
        "list"
      ],
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvitedUser"
          },
          "x-omitempty": false
        }
      }
    },
    "Material": {
      "type": "object",
      "required": [
        "ID",
        "name"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Materials": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Material"
          },
          "x-omitempty": false
        }
      }
    },
    "Media": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "document": {
          "$ref": "#/definitions/MediaDocument"
        },
        "photo": {
          "$ref": "#/definitions/MediaPhoto"
        },
        "typo": {
          "description": "see POST /media; new file\n",
          "type": "integer",
          "format": "int16"
        }
      }
    },
    "MediaDocument": {
      "type": "object",
      "properties": {
        "URI": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        }
      }
    },
    "MediaMessage": {
      "type": "object",
      "required": [
        "mediaID"
      ],
      "properties": {
        "mediaID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "MediaPhoto": {
      "type": "object",
      "properties": {
        "variants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MediaPhotoVariant"
          },
          "x-omitempty": false
        }
      }
    },
    "MediaPhotoVariant": {
      "type": "object",
      "required": [
        "URI",
        "type",
        "width",
        "height",
        "byteSize"
      ],
      "properties": {
        "URI": {
          "type": "string"
        },
        "byteSize": {
          "type": "integer",
          "format": "int64"
        },
        "height": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "PhotoVariantOther              = 0\nPhotoVariantOriginal           = 1   - original\nPhotoVariantSmallThumb         = 3   - Width: 210, Height: 210\nPhotoVariantGenericSmallThumb  = 4   - Width: 300, Height: 300\nPhotoVariantGenericMedium      = 5   - Width: 600\nPhotoVariantGenericLarge       = 6   - Width: 1280\nPhotoVariantObjectPreview      = 100 - Width: 460, Height: 780\nPhotoVariantObjectGallery      = 101 - Width: 1360\nPhotoVariantObjectHD           = 102 - Width: 1280\nPhotoVariantObjectPreviewSmall = 150 - Width: 210, Height: 260\nPhotoVariantObjectGallerySmall = 151 - Width: 250\nPhotoVariantAvatar             = 200 - Width: 240, Height: 240\nPhotoVariantMsgPreview         = 300 - Width: 400, Height: 400\n",
          "type": "integer",
          "format": "int16"
        },
        "width": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Medias": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Media"
          },
          "x-omitempty": false
        }
      }
    },
    "Message": {
      "type": "object",
      "required": [
        "ID",
        "userID",
        "peer"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "creationTime": {
          "description": "date-time - RFC3339",
          "type": "string"
        },
        "forward": {
          "description": "TODO",
          "type": "string"
        },
        "mediaMessage": {
          "$ref": "#/definitions/MediaMessage"
        },
        "objectMessage": {
          "$ref": "#/definitions/CObjectMessage"
        },
        "peer": {
          "$ref": "#/definitions/Peer"
        },
        "serviceMessage": {
          "$ref": "#/definitions/ServiceMessage"
        },
        "textMessage": {
          "$ref": "#/definitions/TextMessage"
        },
        "typo": {
          "description": "see RSendMessage",
          "type": "integer",
          "format": "int16"
        },
        "userID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Messages": {
      "type": "object",
      "required": [
        "list"
      ],
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          },
          "x-omitempty": false
        }
      }
    },
    "Money": {
      "type": "object",
      "properties": {
        "currencyID": {
          "type": "integer",
          "format": "int64"
        },
        "value": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "MovedObjectEvent": {
      "type": "object",
      "required": [
        "objectID",
        "originalCollectionID",
        "newCollectionID"
      ],
      "properties": {
        "newCollectionID": {
          "type": "integer",
          "format": "int64"
        },
        "objectID": {
          "type": "integer",
          "format": "int64"
        },
        "originalCollectionID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "NewObjectEvent": {
      "type": "object",
      "required": [
        "objectID",
        "collectionID"
      ],
      "properties": {
        "collectionID": {
          "type": "integer",
          "format": "int64"
        },
        "objectID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "OriginLocation": {
      "type": "object",
      "required": [
        "ID",
        "name"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "OriginLocations": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OriginLocation"
          },
          "x-omitempty": false
        }
      }
    },
    "PayloadedEvent": {
      "type": "object",
      "required": [
        "seqNo",
        "typo"
      ],
      "properties": {
        "actor": {
          "$ref": "#/definitions/Actor"
        },
        "badge": {
          "$ref": "#/definitions/Badge"
        },
        "collection": {
          "$ref": "#/definitions/Collection"
        },
        "collectionAddedToGroup": {
          "$ref": "#/definitions/AddedToGroupCollectionEvent"
        },
        "collectionRemovedFromGroup": {
          "$ref": "#/definitions/RemovedFromGroupCollectionEvent"
        },
        "creationTime": {
          "description": "date-time - RFC3339",
          "type": "string"
        },
        "deletedEntity": {
          "$ref": "#/definitions/EntityRef"
        },
        "deletedObject": {
          "$ref": "#/definitions/DeletedObjectEvent"
        },
        "editedEntity": {
          "$ref": "#/definitions/EntityRef"
        },
        "group": {
          "$ref": "#/definitions/FullGroup"
        },
        "historyRead": {
          "$ref": "#/definitions/EventHistoryRead"
        },
        "material": {
          "$ref": "#/definitions/Material"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "movedObject": {
          "$ref": "#/definitions/MovedObjectEvent"
        },
        "namedDateInterval": {
          "$ref": "#/definitions/CDateInterval"
        },
        "newEntity": {
          "$ref": "#/definitions/EntityRef"
        },
        "newMessage": {
          "$ref": "#/definitions/EventNewMessage"
        },
        "newObject": {
          "$ref": "#/definitions/NewObjectEvent"
        },
        "originLocation": {
          "$ref": "#/definitions/OriginLocation"
        },
        "seqNo": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "description": "new event       - 0\nconfirmed event - 10\n",
          "type": "integer",
          "format": "int16"
        },
        "typo": {
          "description": "EventTypeNewMessage  EventType = 0\nEventTypeHistoryRead           = 10\n\nEventTypeNewObject     = 20\nEventTypeMovedObject   = 21\nEventTypeDeletedObject = 22\n\nEventTypeAddedToGroupCollection     = 30\nEventTypeRemovedFromGroupCollection = 31\n\nEventTypeNewEntity     = 40\nEventTypeEditedEntity  = 41\nEventTypeDeletedEntity = 42\n",
          "type": "integer",
          "format": "int16"
        }
      }
    },
    "Peer": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "typo": {
          "description": "user - 1\nchat - 2\n",
          "type": "integer",
          "format": "int16"
        }
      }
    },
    "PushNotification": {
      "type": "object",
      "required": [
        "typo"
      ],
      "properties": {
        "messengerAction": {
          "$ref": "#/definitions/PushNotificationMessengerAction"
        },
        "typo": {
          "type": "integer",
          "format": "int16"
        }
      }
    },
    "PushNotificationMessengerAction": {
      "type": "object",
      "required": [
        "peer"
      ],
      "properties": {
        "peer": {
          "$ref": "#/definitions/Peer"
        }
      }
    },
    "RAddCollectionsToGroup": {
      "type": "object",
      "required": [
        "collectionsIDs",
        "targetGroupID"
      ],
      "properties": {
        "collectionsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "targetGroupID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RAddUserToRoot": {
      "type": "object",
      "required": [
        "userID",
        "rootID"
      ],
      "properties": {
        "rootID": {
          "type": "integer",
          "format": "int64"
        },
        "userID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RArchiveTask": {
      "type": "object",
      "properties": {
        "archive": {
          "type": "boolean"
        }
      }
    },
    "RAssignTaskTo": {
      "type": "object",
      "properties": {
        "newUserID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        }
      }
    },
    "RBanAddUser": {
      "type": "object",
      "required": [
        "userID"
      ],
      "properties": {
        "userID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": false
        }
      }
    },
    "RBanRemoveUser": {
      "type": "object",
      "required": [
        "userID"
      ],
      "properties": {
        "userID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": false
        }
      }
    },
    "RChangeTaskStatus": {
      "type": "object",
      "properties": {
        "newStatus": {
          "description": "todo | in_progress | done\n",
          "type": "string"
        }
      }
    },
    "RChatAddUser": {
      "type": "object",
      "required": [
        "clientUniqID",
        "userID",
        "chatID"
      ],
      "properties": {
        "chatID": {
          "type": "integer",
          "format": "int64"
        },
        "clientUniqID": {
          "type": "integer",
          "format": "int64"
        },
        "userID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RChatRemoveUser": {
      "type": "object",
      "required": [
        "clientUniqID",
        "userID",
        "chatID"
      ],
      "properties": {
        "chatID": {
          "type": "integer",
          "format": "int64"
        },
        "clientUniqID": {
          "type": "integer",
          "format": "int64"
        },
        "userID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RConfirmEvent": {
      "type": "object",
      "required": [
        "endSeqNo"
      ],
      "properties": {
        "endSeqNo": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RCreateActor": {
      "type": "object",
      "required": [
        "rootID",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1
        },
        "rootID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RCreateBadge": {
      "type": "object",
      "required": [
        "rootID",
        "badge"
      ],
      "properties": {
        "badge": {
          "$ref": "#/definitions/InputBadge"
        },
        "rootID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RCreateChat": {
      "type": "object",
      "required": [
        "clientUniqID",
        "name"
      ],
      "properties": {
        "avatarMediaID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "clientUniqID": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "usersIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    "RCreateInvite": {
      "type": "object",
      "required": [
        "rootID"
      ],
      "properties": {
        "rootID": {
          "type": "integer",
          "format": "int64"
        },
        "toUserID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        }
      }
    },
    "RCreateMaterial": {
      "type": "object",
      "required": [
        "rootID",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1
        },
        "rootID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RCreateNamedDateInterval": {
      "type": "object",
      "required": [
        "from",
        "to",
        "name",
        "rootID"
      ],
      "properties": {
        "from": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "rootID": {
          "type": "integer",
          "format": "int64"
        },
        "to": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        }
      }
    },
    "RCreateObjectStatus": {
      "type": "object",
      "required": [
        "mediaID",
        "name"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "mediaID": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "RCreateOriginLocation": {
      "type": "object",
      "required": [
        "rootID",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1
        },
        "rootID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RCreateTask": {
      "type": "object",
      "required": [
        "task",
        "clientUniqID"
      ],
      "properties": {
        "clientUniqID": {
          "type": "integer",
          "format": "int64"
        },
        "task": {
          "$ref": "#/definitions/Task"
        }
      }
    },
    "RDeleteObjects": {
      "type": "object",
      "required": [
        "objectsIDs"
      ],
      "properties": {
        "final": {
          "type": "boolean"
        },
        "objectsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    "REditChatAvatar": {
      "type": "object",
      "required": [
        "clientUniqID"
      ],
      "properties": {
        "avatarID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "clientUniqID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "REditChatName": {
      "type": "object",
      "required": [
        "clientUniqID",
        "name"
      ],
      "properties": {
        "clientUniqID": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "REditCollection": {
      "type": "object",
      "required": [
        "collection"
      ],
      "properties": {
        "collection": {
          "$ref": "#/definitions/InputCollection"
        }
      }
    },
    "REditObject": {
      "type": "object",
      "required": [
        "object"
      ],
      "properties": {
        "object": {
          "$ref": "#/definitions/InputObject"
        }
      }
    },
    "REditTask": {
      "type": "object",
      "required": [
        "task",
        "clientUniqID"
      ],
      "properties": {
        "clientUniqID": {
          "type": "integer",
          "format": "int64"
        },
        "task": {
          "$ref": "#/definitions/Task"
        }
      }
    },
    "REditUser": {
      "type": "object",
      "required": [
        "user"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "user": {
          "$ref": "#/definitions/InputUser"
        }
      }
    },
    "RGetAllConversation": {
      "type": "object",
      "required": [
        "NLastMessages"
      ],
      "properties": {
        "NLastMessages": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RGetCollectionsObjects": {
      "type": "object",
      "properties": {
        "collectionsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "x-omitempty": false
        },
        "orders": {
          "$ref": "#/definitions/CObjectOrders"
        },
        "paginator": {
          "$ref": "#/definitions/InputPaginator"
        }
      }
    },
    "RGetEvents": {
      "type": "object",
      "required": [
        "startSeqNo"
      ],
      "properties": {
        "endSeqNo": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "startSeqNo": {
          "type": "integer",
          "format": "int64"
        },
        "statuses": {
          "description": "#definitions/Event",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int16"
          }
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RGetMessages": {
      "type": "object",
      "required": [
        "IDs"
      ],
      "properties": {
        "IDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    "RGetMessagesRange": {
      "type": "object",
      "required": [
        "peer",
        "range"
      ],
      "properties": {
        "peer": {
          "$ref": "#/definitions/InputPeer"
        },
        "range": {
          "$ref": "#/definitions/InputIDRange"
        }
      }
    },
    "RInviteByEmail": {
      "type": "object",
      "required": [
        "rootID",
        "toUserEmail"
      ],
      "properties": {
        "rootID": {
          "type": "integer",
          "format": "int64"
        },
        "toUserEmail": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "RLogin": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "minLength": 1
        },
        "password": {
          "type": "string",
          "minLength": 6
        }
      }
    },
    "RMoveObjects": {
      "type": "object",
      "required": [
        "objectsIDs",
        "targetCollectionID"
      ],
      "properties": {
        "objectsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "targetCollectionID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RMyArchiveList": {
      "type": "object",
      "properties": {
        "paginator": {
          "$ref": "#/definitions/InputPaginator"
        }
      }
    },
    "RNewCollection": {
      "type": "object",
      "required": [
        "rootID",
        "collection",
        "clientUniqID"
      ],
      "properties": {
        "clientUniqID": {
          "type": "integer",
          "format": "int64"
        },
        "collection": {
          "$ref": "#/definitions/InputCollection"
        },
        "rootID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RNewGroup": {
      "type": "object",
      "required": [
        "name",
        "clientUniqID",
        "rootID"
      ],
      "properties": {
        "clientUniqID": {
          "type": "integer",
          "format": "int64"
        },
        "collectionsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "rootID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RNewObject": {
      "type": "object",
      "required": [
        "clientUniqID",
        "object"
      ],
      "properties": {
        "clientUniqID": {
          "type": "integer",
          "format": "int64"
        },
        "object": {
          "$ref": "#/definitions/InputObject"
        }
      }
    },
    "RPasswordReset": {
      "type": "object",
      "required": [
        "password"
      ],
      "properties": {
        "password": {
          "type": "string",
          "minLength": 6
        }
      }
    },
    "RPublicCollections": {
      "type": "object",
      "properties": {
        "paginator": {
          "$ref": "#/definitions/InputPaginator"
        },
        "query": {
          "type": "string",
          "x-nullable": true
        },
        "userID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        }
      }
    },
    "RReadHistory": {
      "type": "object",
      "required": [
        "peer",
        "lastReadMessageID"
      ],
      "properties": {
        "lastReadMessageID": {
          "type": "integer",
          "format": "int64"
        },
        "peer": {
          "$ref": "#/definitions/InputPeer"
        }
      }
    },
    "RRegisterDeviceToken": {
      "type": "object",
      "required": [
        "typo",
        "token"
      ],
      "properties": {
        "sandbox": {
          "type": "boolean"
        },
        "token": {
          "type": "string",
          "minLength": 1
        },
        "typo": {
          "description": "UserSessionDeviceTypeAndroid = 10\nUserSessionDeviceTypeIOS     = 20\n",
          "type": "integer",
          "format": "int16"
        }
      }
    },
    "RRegistration": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "minLength": 1
        },
        "invite": {
          "type": "string",
          "x-nullable": true
        },
        "password": {
          "type": "string",
          "minLength": 6
        }
      }
    },
    "RRemoveCollectionsFromeGroup": {
      "type": "object",
      "required": [
        "collectionsIDs",
        "targetGroupID"
      ],
      "properties": {
        "collectionsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "targetGroupID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RRemoveUserFromRoot": {
      "type": "object",
      "required": [
        "userID",
        "rootID"
      ],
      "properties": {
        "rootID": {
          "type": "integer",
          "format": "int64"
        },
        "userID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RSearchObjects": {
      "type": "object",
      "properties": {
        "filters": {
          "$ref": "#/definitions/InputObjectSearchFilters"
        },
        "orders": {
          "$ref": "#/definitions/CObjectOrders"
        },
        "paginator": {
          "$ref": "#/definitions/InputPaginator"
        },
        "query": {
          "type": "string"
        },
        "rootID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RSearchPublicCollections": {
      "type": "object",
      "properties": {
        "paginator": {
          "$ref": "#/definitions/InputPaginator"
        },
        "query": {
          "type": "string"
        }
      }
    },
    "RSendMessage": {
      "type": "object",
      "required": [
        "peer",
        "clientUniqID",
        "typo"
      ],
      "properties": {
        "clientUniqID": {
          "type": "integer",
          "format": "int64"
        },
        "cobjectMessage": {
          "$ref": "#/definitions/InputObjectMessage"
        },
        "mediaMessage": {
          "$ref": "#/definitions/InputMediaMessage"
        },
        "peer": {
          "$ref": "#/definitions/InputPeer"
        },
        "textMessage": {
          "$ref": "#/definitions/InputTextMessage"
        },
        "typo": {
          "description": "MessageTypeText    MessageType = 0\nMessageTypeMedia               = 10\nMessageTypeService             = 20\nMessageTypeObject              = 30\n",
          "type": "integer",
          "format": "int16"
        }
      }
    },
    "RSetRight": {
      "type": "object",
      "properties": {
        "clientUniqID": {
          "type": "integer",
          "format": "int64"
        },
        "right": {
          "$ref": "#/definitions/Right"
        }
      }
    },
    "RUpdateActor": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "RUpdateBadge": {
      "type": "object",
      "required": [
        "badge"
      ],
      "properties": {
        "badge": {
          "$ref": "#/definitions/InputBadge"
        }
      }
    },
    "RUpdateGroup": {
      "type": "object",
      "properties": {
        "collectionsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "RUpdateMaterial": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "RUpdateNamedDateInterval": {
      "type": "object",
      "properties": {
        "from": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "name": {
          "type": "string"
        },
        "to": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        }
      }
    },
    "RUpdateOriginLocation": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "RUpdateUserLocale": {
      "type": "object",
      "required": [
        "locale"
      ],
      "properties": {
        "locale": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "RUserEmail": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "RUsersByName": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "paginator": {
          "$ref": "#/definitions/InputPaginator"
        },
        "withPopularTags": {
          "type": "boolean"
        }
      }
    },
    "RemovedFromGroupCollectionEvent": {
      "type": "object",
      "required": [
        "collectionID",
        "groupID"
      ],
      "properties": {
        "collectionID": {
          "type": "integer",
          "format": "int64"
        },
        "groupID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Right": {
      "type": "object",
      "properties": {
        "entityID": {
          "type": "integer",
          "format": "int64"
        },
        "entityType": {
          "description": "collection\n",
          "type": "string"
        },
        "level": {
          "description": "none | read | write | admin\n",
          "type": "string"
        },
        "userID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Root": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "ownerUserID": {
          "type": "integer",
          "format": "int64"
        },
        "usersIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "x-omitempty": false
        }
      }
    },
    "Roots": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Root"
          },
          "x-omitempty": false
        }
      }
    },
    "ServiceMessage": {
      "type": "object",
      "required": [
        "typo"
      ],
      "properties": {
        "serviceMessageChatAvatarChanged": {
          "$ref": "#/definitions/ServiceMessageChatAvatarChanged"
        },
        "serviceMessageChatCreated": {
          "$ref": "#/definitions/ServiceMessageChatCreated"
        },
        "serviceMessageChatTitleChanged": {
          "$ref": "#/definitions/ServiceMessageChatTitleChanged"
        },
        "serviceMessageChatUserAdded": {
          "$ref": "#/definitions/ServiceMessageChatUserAdded"
        },
        "serviceMessageChatUserDeleted": {
          "$ref": "#/definitions/ServiceMessageChatUserDeleted"
        },
        "serviceMessageInvite": {
          "$ref": "#/definitions/ServiceMessageInvite"
        },
        "serviceMessageInviteStatusChanged": {
          "$ref": "#/definitions/ServiceMessageInviteStatusChanged"
        },
        "serviceMessageTask": {
          "$ref": "#/definitions/ServiceMessageTask"
        },
        "typo": {
          "description": "1 - ServiceMessageChatCreated\n2 - ServiceMessageChatUserAdded\n3 - ServiceMessageChatUserDeleted\n4 - ServiceMessageChatTitleChanged\n5 - ServiceMessageChatAvatarChanged\n6 - ServiceMessageInvite\n7 - ServiceMessageTask\n8 - ServiceMessageInviteStatusChanged\n",
          "type": "integer",
          "format": "int16"
        }
      }
    },
    "ServiceMessageChatAvatarChanged": {
      "type": "object",
      "properties": {
        "newAvatarID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        }
      }
    },
    "ServiceMessageChatCreated": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "ServiceMessageChatTitleChanged": {
      "type": "object",
      "required": [
        "newTitle"
      ],
      "properties": {
        "newTitle": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "ServiceMessageChatUserAdded": {
      "type": "object",
      "required": [
        "userID"
      ],
      "properties": {
        "userID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ServiceMessageChatUserDeleted": {
      "type": "object",
      "required": [
        "userID"
      ],
      "properties": {
        "userID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ServiceMessageInvite": {
      "type": "object",
      "required": [
        "fromUserID",
        "toUserID",
        "rootID",
        "status"
      ],
      "properties": {
        "fromUserID": {
          "type": "integer",
          "format": "int64"
        },
        "inviteID": {
          "type": "integer",
          "format": "int64"
        },
        "rootID": {
          "type": "integer",
          "format": "int64"
        },
        "rootOwnerID": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "description": "Created  = 0\nAccepted = 10\nRejected = 20\nCanceled = 101\n",
          "type": "integer",
          "format": "int16"
        },
        "toUserID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ServiceMessageInviteStatusChanged": {
      "type": "object",
      "properties": {
        "inviteID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "inviteStatus": {
          "description": "Created  = 0\nAccepted = 10\nRejected = 20\nCanceled = 101\n",
          "type": "integer",
          "format": "int16"
        },
        "media": {
          "$ref": "#/definitions/Media"
        },
        "user": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "ServiceMessageTask": {
      "type": "object",
      "properties": {
        "actorUserID": {
          "type": "integer",
          "format": "int64"
        },
        "actorUserName": {
          "type": "string"
        },
        "changedArchive": {
          "type": "boolean"
        },
        "changedAssignedUser": {
          "type": "boolean"
        },
        "changedStatus": {
          "type": "boolean"
        },
        "newArchiveStatus": {
          "type": "boolean"
        },
        "newAssignedUserID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "newStatus": {
          "type": "string"
        },
        "newTask": {
          "type": "boolean"
        },
        "taskID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "taskTitle": {
          "type": "string",
          "x-nullable": true
        },
        "wasChanged": {
          "type": "boolean"
        },
        "wasDeleted": {
          "type": "boolean"
        }
      }
    },
    "TUser": {
      "type": "object",
      "required": [
        "userID"
      ],
      "properties": {
        "tasksCnt": {
          "description": "TBD",
          "type": "integer",
          "format": "int32"
        },
        "userID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "TUsers": {
      "type": "object",
      "required": [
        "list"
      ],
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TUser"
          },
          "x-omitempty": false
        }
      }
    },
    "Task": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "archive": {
          "type": "boolean"
        },
        "assignedUserID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "clientUniqID": {
          "type": "integer",
          "format": "int64"
        },
        "collectionsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "creationTime": {
          "description": "date-time - RFC3339",
          "type": "string"
        },
        "creatorUserID": {
          "type": "integer",
          "format": "int64"
        },
        "deadline": {
          "description": "date - RFC3339",
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "type": "string"
        },
        "groupsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "mediasIDs": {
          "description": "type = 30\n",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "objectsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "status": {
          "description": "todo | in_progress | done\n",
          "type": "string"
        },
        "title": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "TaskPreview": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "accessLevel": {
          "description": "none | read | write | admin\n",
          "type": "string"
        },
        "archive": {
          "type": "boolean"
        },
        "assignedUserID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "clientUniqID": {
          "type": "integer",
          "format": "int64"
        },
        "creationTime": {
          "description": "date-time - RFC3339",
          "type": "string"
        },
        "creatorUserID": {
          "type": "integer",
          "format": "int64"
        },
        "deadline": {
          "description": "date - RFC3339",
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "type": "string"
        },
        "status": {
          "description": "todo | in_progress | done\n",
          "type": "string"
        },
        "title": {
          "type": "string",
          "minLength": 1
        },
        "withMedias": {
          "type": "boolean"
        }
      }
    },
    "TextMessage": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "User": {
      "type": "object",
      "required": [
        "ID",
        "email"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "avatarMediaID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "description": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "minLength": 1
        },
        "firstName": {
          "type": "string"
        },
        "isAnonymous": {
          "type": "boolean"
        },
        "lastName": {
          "type": "string"
        },
        "speciality": {
          "type": "string",
          "x-nullable": true
        },
        "systemUser": {
          "type": "boolean"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "UserCollection": {
      "type": "object",
      "required": [
        "userID",
        "collectionID"
      ],
      "properties": {
        "collectionID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": false
        },
        "userID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": false
        }
      }
    },
    "Users": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          },
          "x-omitempty": false
        }
      }
    },
    "UsersCollections": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserCollection"
          },
          "x-omitempty": false
        }
      }
    },
    "Valuation": {
      "type": "object",
      "required": [
        "price",
        "currencyID"
      ],
      "properties": {
        "comment": {
          "type": "string"
        },
        "currencyID": {
          "type": "integer",
          "format": "int64"
        },
        "date": {
          "description": "date - RFC3339",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "type": "array",
          "maxItems": 2,
          "minItems": 2,
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "x-omitempty": false
        }
      }
    },
    "Valuations": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Valuation"
          },
          "x-omitempty": false
        }
      }
    }
  },
  "securityDefinitions": {
    "apiKey": {
      "type": "apiKey",
      "name": "Auth-token",
      "in": "header"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Collector backend API",
    "title": "Collector API",
    "version": "1.0.0"
  },
  "host": "localhost:7000",
  "basePath": "/v1",
  "paths": {
    "/actor/get": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Actors"
        ],
        "summary": "get actors",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "rootID",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "actors list for selected root",
            "schema": {
              "$ref": "#/definitions/AActors"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/actor/new": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Actors"
        ],
        "summary": "create actor",
        "parameters": [
          {
            "name": "RCreateActor",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RCreateActor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ACreateActor"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "actor already present",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/actor/{ID}/delete": {
      "delete": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Actors"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "succes"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find actor",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/actor/{ID}/update": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Actors"
        ],
        "summary": "update actor",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          },
          {
            "name": "RUpdateActor",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RUpdateActor"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "actor already present",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login",
        "parameters": [
          {
            "name": "RLogin",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token",
            "schema": {
              "$ref": "#/definitions/ALogin"
            }
          },
          "403": {
            "description": "Incorrect email or password",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "428": {
            "description": "Confirmed email is required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Auth"
        ],
        "summary": "Logout",
        "responses": {
          "204": {
            "description": "logout"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/password-recovery": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Password recovery",
        "parameters": [
          {
            "name": "RUserEmail",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RUserEmail"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "email was send"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/password-reset/{token}": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Password reset",
        "parameters": [
          {
            "type": "string",
            "name": "token",
            "in": "path",
            "required": true
          },
          {
            "name": "RPasswordReset",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RPasswordReset"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Password has been updated"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/reg": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Registration",
        "parameters": [
          {
            "name": "RRegistration",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RRegistration"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Cinfirm email"
          },
          "409": {
            "description": "User already present",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/auth/reg/confirm-email": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Confirm email",
        "parameters": [
          {
            "type": "string",
            "name": "token",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Email has been confirmed"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Send token",
        "parameters": [
          {
            "name": "RUserEmail",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RUserEmail"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Cinfirm email"
          },
          "409": {
            "description": "User already present",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/badge/get": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Badges"
        ],
        "summary": "Get badges for root",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "rootID",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "badge list for selected root",
            "schema": {
              "$ref": "#/definitions/ABadges"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/badge/new": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Badges"
        ],
        "summary": "Create badge",
        "parameters": [
          {
            "name": "RCreateBadge",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RCreateBadge"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ACreateBadge"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Badge already present (color and name must be uniq)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/badge/{ID}/delete": {
      "delete": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Badges"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "succes"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find badge",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/badge/{ID}/update": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Badges"
        ],
        "summary": "Update badge",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          },
          {
            "name": "RUpdateBadge",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RUpdateBadge"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find badge",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Badge already present (color and name must be uniq)",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/chat": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Chat"
        ],
        "summary": "Create chat",
        "parameters": [
          {
            "name": "RCreateChat",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RCreateChat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "chat created",
            "schema": {
              "$ref": "#/definitions/ACreateChat"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/chat/add-user": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Chat"
        ],
        "summary": "Add user to chat",
        "parameters": [
          {
            "name": "RChatAddUser",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RChatAddUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user added",
            "schema": {
              "$ref": "#/definitions/AChatAddUser"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/chat/remove-user": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Chat"
        ],
        "summary": "Remove user from chat",
        "parameters": [
          {
            "name": "RChatRemoveUser",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RChatRemoveUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user removed",
            "schema": {
              "$ref": "#/definitions/AChatRemoveUser"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/chat/{ID}": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Chat"
        ],
        "summary": "get chat info",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success resonse",
            "schema": {
              "$ref": "#/definitions/AGetChatInfo"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Cant find chat"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/chat/{ID}/change-avatar": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "description": "edit chat avatar",
        "tags": [
          "Chat"
        ],
        "parameters": [
          {
            "name": "REditChatAvatar",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/REditChatAvatar"
            }
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "avatar was changed",
            "schema": {
              "$ref": "#/definitions/AEditChatAvatar"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/chat/{ID}/change-name": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "description": "edit chat name",
        "tags": [
          "Chat"
        ],
        "parameters": [
          {
            "name": "REditChatName",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/REditChatName"
            }
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "name was changed",
            "schema": {
              "$ref": "#/definitions/AEditChatName"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/collections": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Collections"
        ],
        "summary": "Collection creation",
        "parameters": [
          {
            "name": "RNewCollection",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RNewCollection"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/ANewCollection"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "unprocessable input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/collections/add-to-group": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Collections"
        ],
        "summary": "add collections to group",
        "parameters": [
          {
            "name": "RAddCollectionsToGroup",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RAddCollectionsToGroup"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/collections/draft": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Collections"
        ],
        "summary": "Draft collection | deprecated",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "rootID",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/Collection"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/collections/objects": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Collections"
        ],
        "summary": "Collection objects",
        "parameters": [
          {
            "name": "RGetCollectionsObjects",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RGetCollectionsObjects"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Collection objects list",
            "schema": {
              "$ref": "#/definitions/AObjectsPreview"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/collections/remove-from-group": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Collections"
        ],
        "summary": "remove collections from group",
        "parameters": [
          {
            "name": "RRemoveCollectionsFromeGroup",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RRemoveCollectionsFromeGroup"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/collections/{ID}": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Collections"
        ],
        "summary": "Collection info",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/ACollection"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find named date interval",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Collections"
        ],
        "summary": "Collection edit",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          },
          {
            "name": "REditCollection",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/REditCollection"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "unprocessable input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/collections/{ID}/delete": {
      "delete": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Collections"
        ],
        "summary": "Delete collection",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "name": "final",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find collecion"
          },
          "423": {
            "description": "Cant delete collection",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/dashboard": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Dashboard"
        ],
        "summary": "Groups/collections list",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "rootID",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "format": "int16",
            "name": "objectsCntPerCollection",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Groups/collections list",
            "schema": {
              "$ref": "#/definitions/ADashboard"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/event": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Events"
        ],
        "summary": "Get events",
        "parameters": [
          {
            "name": "RGetEvents",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RGetEvents"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Events list",
            "schema": {
              "$ref": "#/definitions/AGetEvents"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/event/confirm": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Events"
        ],
        "summary": "confirm events",
        "parameters": [
          {
            "name": "RConfirmEvent",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RConfirmEvent"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/groups": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Groups"
        ],
        "summary": "Create group",
        "parameters": [
          {
            "name": "RNewGroup",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RNewGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ANewGroup"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/groups/{ID}": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Groups"
        ],
        "summary": "Group collections list",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "name": "short",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Group collections list",
            "schema": {
              "$ref": "#/definitions/AGroup"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/groups/{ID}/delete": {
      "delete": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Groups"
        ],
        "summary": "Delete group",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find group"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/groups/{ID}/update": {
      "put": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Groups"
        ],
        "summary": "Update group",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          },
          {
            "name": "RUpdateGroup",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RUpdateGroup"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find group"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/invite/by-email": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Invites"
        ],
        "parameters": [
          {
            "name": "RInviteByEmail",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RInviteByEmail"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "email was send"
          },
          "403": {
            "description": "access forbidden"
          },
          "404": {
            "description": "cant find related entities"
          },
          "409": {
            "description": "this user has already been invited to this root"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/invite/new": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Invites"
        ],
        "parameters": [
          {
            "name": "RCreateInvite",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RCreateInvite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "email was send",
            "schema": {
              "$ref": "#/definitions/ACreateInvite"
            }
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find related entities"
          },
          "409": {
            "description": "this user has already been invited to this root"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/invite/{ID}/accept": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Invites"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "the invite was accepted"
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find invite"
          },
          "409": {
            "description": "cant accept invite"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/invite/{ID}/cancel": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Invites"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "the invite was canceled"
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find invite"
          },
          "409": {
            "description": "cant cancel invite"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/invite/{ID}/reject": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Invites"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "the invite was rejected"
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find invite"
          },
          "409": {
            "description": "cant reject invite"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/material/get": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Materials"
        ],
        "summary": "get materials",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "rootID",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "materials list for selected root",
            "schema": {
              "$ref": "#/definitions/AMaterials"
            }
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/material/new": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Materials"
        ],
        "summary": "create material",
        "parameters": [
          {
            "name": "RCreateMaterial",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RCreateMaterial"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ACreateMaterial"
            }
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "material already present",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/material/{ID}/delete": {
      "delete": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Materials"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "succes"
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find material",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/material/{ID}/update": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Materials"
        ],
        "summary": "update material",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          },
          {
            "name": "RUpdateMaterial",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RUpdateMaterial"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "material already present",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/medias": {
      "get": {
        "tags": [
          "Medias"
        ],
        "summary": "get media",
        "parameters": [
          {
            "type": "string",
            "name": "path",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "messageID",
            "in": "query"
          }
        ],
        "responses": {
          "204": {
            "description": "success with X-Accel-Redirect"
          },
          "403": {
            "description": "access denied"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "Medias"
        ],
        "summary": "new file",
        "parameters": [
          {
            "type": "file",
            "description": "MediaTypePhoto       MediaType = 1   - just photo\nMediaTypePhotoObject           = 2   - object photo\nMediaTypeAvatar                = 10  - avatar\nMediaTypeCollection            = 15  - collection\nMediaTypeMsg                   = 20  - msg media\nMediaTypeDocument              = 101 - reserved\nMediaTypeVideo                 = 201 - reserved\nMediaTypeMapPoint              = 301 - reserved\n",
            "name": "file",
            "in": "formData"
          },
          {
            "type": "integer",
            "format": "int16",
            "name": "typo",
            "in": "formData"
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "clientUniqID",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ANewMedia"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/medias/by-ids": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Medias"
        ],
        "summary": "get medias by ids",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "name": "ids",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "medias list",
            "schema": {
              "$ref": "#/definitions/AGetMediasByIDs"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/message": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Messages"
        ],
        "summary": "Send message",
        "parameters": [
          {
            "name": "RSendMessage",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RSendMessage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful send",
            "schema": {
              "$ref": "#/definitions/ASendMessage"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "cant send message",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "423": {
            "description": "Cant send message to blocked user",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/message/all-conversation": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Messages"
        ],
        "summary": "Get recent conversations",
        "parameters": [
          {
            "name": "RGetAllConversation",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RGetAllConversation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Conversations with last messages",
            "schema": {
              "$ref": "#/definitions/AGetAllConversation"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/message/byids": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Messages"
        ],
        "summary": "Get messages by ids",
        "parameters": [
          {
            "name": "RGetMessages",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RGetMessages"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful received",
            "schema": {
              "$ref": "#/definitions/AGetMessages"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/message/range": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Messages"
        ],
        "summary": "Get messages line for peer",
        "parameters": [
          {
            "name": "RGetMessagesRange",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RGetMessagesRange"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful received",
            "schema": {
              "$ref": "#/definitions/AGetMessagesRange"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/message/read-history": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Messages"
        ],
        "summary": "Confirm msg",
        "parameters": [
          {
            "name": "RReadHistory",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RReadHistory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful readed",
            "schema": {
              "$ref": "#/definitions/AReadHistory"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/named-date-interval/get": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Nameddateintervals"
        ],
        "summary": "get named date intervals",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "rootID",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "named date intervals for selected root",
            "schema": {
              "$ref": "#/definitions/ANamedDateIntervals"
            }
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/named-date-interval/new": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Nameddateintervals"
        ],
        "summary": "create named date interval",
        "parameters": [
          {
            "name": "RCreateNamedDateInterval",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RCreateNamedDateInterval"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ACreateNamedDateInterval"
            }
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "named date interval already present",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/named-date-interval/{ID}/delete": {
      "delete": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Nameddateintervals"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "succes"
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find named date interval",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/named-date-interval/{ID}/update": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Nameddateintervals"
        ],
        "summary": "update named date interval",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          },
          {
            "name": "RUpdateNamedDateInterval",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RUpdateNamedDateInterval"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "named date interval already present",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "invalid format",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/object-status/new": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Objectstatus"
        ],
        "parameters": [
          {
            "name": "RCreateObjectStatus",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RCreateObjectStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/ACreateObjectStatus"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/objects": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "description": "Create new object in drafts\n",
        "tags": [
          "Objects"
        ],
        "summary": "Create new object",
        "parameters": [
          {
            "name": "RNewObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RNewObject"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ANewObject"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/objects/delete": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Objects"
        ],
        "summary": "batch delete objects",
        "parameters": [
          {
            "name": "RDeleteObjects",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RDeleteObjects"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find objects"
          },
          "423": {
            "description": "Cant delete objects",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/objects/move": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Objects"
        ],
        "summary": "Move objects to collection",
        "parameters": [
          {
            "name": "RMoveObjects",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RMoveObjects"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find objects",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/objects/search": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "description": "Search object by root\n",
        "tags": [
          "Objects"
        ],
        "summary": "Object search",
        "parameters": [
          {
            "name": "RSearchObjects",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RSearchObjects"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ASearchObjects"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/objects/{ID}": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Objects"
        ],
        "summary": "Get object by ID",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "messageID",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Object full info",
            "schema": {
              "$ref": "#/definitions/AObject"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find object",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Objects"
        ],
        "summary": "Edit object by ID",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          },
          {
            "name": "REditObject",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/REditObject"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "ok"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find object"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/objects/{ID}/delete": {
      "delete": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Objects"
        ],
        "summary": "delete object",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "name": "final",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find object"
          },
          "423": {
            "description": "Cant delete object",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/origin-location/get": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Originlocations"
        ],
        "summary": "get origin locations",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "rootID",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "originLocations list for selected root",
            "schema": {
              "$ref": "#/definitions/AOriginLocations"
            }
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/origin-location/new": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Originlocations"
        ],
        "summary": "create origin-location",
        "parameters": [
          {
            "name": "RCreateOriginLocation",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RCreateOriginLocation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ACreateOriginLocation"
            }
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "originLocation already present",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/origin-location/{ID}/delete": {
      "delete": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Originlocations"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "succes"
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find origin location",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/origin-location/{ID}/update": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Originlocations"
        ],
        "summary": "update origin-location",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          },
          {
            "name": "RUpdateOriginLocation",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RUpdateOriginLocation"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "origin location already present",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/public/collections": {
      "post": {
        "tags": [
          "Public Collections"
        ],
        "summary": "List",
        "parameters": [
          {
            "name": "RPublicCollections",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RPublicCollections"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Collections list",
            "schema": {
              "$ref": "#/definitions/APublicCollections"
            }
          },
          "404": {
            "description": "cant find objects",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/public/collections/objects": {
      "post": {
        "tags": [
          "Public Collections"
        ],
        "summary": "Collection objects",
        "parameters": [
          {
            "name": "RGetCollectionsObjects",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RGetCollectionsObjects"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Collection objects list",
            "schema": {
              "$ref": "#/definitions/AObjectsPreview"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/public/collections/{ID}": {
      "get": {
        "tags": [
          "Public Collections"
        ],
        "summary": "Public collection info",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/APublicCollection"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find named date interval",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/public/objects/{ID}": {
      "get": {
        "tags": [
          "Public Objects"
        ],
        "summary": "Get public object by ID",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Object full info",
            "schema": {
              "$ref": "#/definitions/AObject"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find object",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/references": {
      "get": {
        "tags": [
          "References"
        ],
        "summary": "Gets references list object creation",
        "responses": {
          "200": {
            "description": "ok",
            "schema": {
              "$ref": "#/definitions/AReferences"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/right": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Rights"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "rootID",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "userID",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/AGetRight"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Rights"
        ],
        "parameters": [
          {
            "name": "RSetRight",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RSetRight"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/ASetRight"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/root/add-user": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Roots"
        ],
        "summary": "add user to root",
        "parameters": [
          {
            "name": "RAddUserToRoot",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RAddUserToRoot"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/root/by-user": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Roots"
        ],
        "summary": "get users root",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "userID",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success resonse",
            "schema": {
              "$ref": "#/definitions/ARoots"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/root/remove-user": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Roots"
        ],
        "summary": "remove user from root",
        "parameters": [
          {
            "name": "RRemoveUserFromRoot",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RRemoveUserFromRoot"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find user or root",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/root/{ID}": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Roots"
        ],
        "summary": "get info about root",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success resonse",
            "schema": {
              "$ref": "#/definitions/ARoot"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/session/register-device-token": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Session"
        ],
        "summary": "Register device",
        "parameters": [
          {
            "name": "RRegisterDeviceToken",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RRegisterDeviceToken"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success registred"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/task": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "RCreateTask",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RCreateTask"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/AGetTask"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/task/my-archive-list": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "name": "RMyArchiveList",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RMyArchiveList"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/AMyTaskList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/task/my-list": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Tasks"
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/AMyTaskList"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/task/{id}": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/AGetTask"
            }
          },
          "403": {
            "description": "access error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find the task",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "REditTask",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/REditTask"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/AGetTask"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find the task",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "clientUniqID",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find the task",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/task/{id}/archive": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "RArchiveTask",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RArchiveTask"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find the task",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/task/{id}/assign-to": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "RAssignTaskTo",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RAssignTaskTo"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find the task",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/task/{id}/change-status": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Tasks"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "name": "RChangeTaskStatus",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RChangeTaskStatus"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find the task",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "422": {
            "description": "validation error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/team/by-root-id": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Teams"
        ],
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "rootID",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/ATeam"
            }
          },
          "403": {
            "description": "access forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "cant find root",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user": {
      "put": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Users"
        ],
        "summary": "edit user",
        "parameters": [
          {
            "name": "REditUser",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/REditUser"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/about": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Users"
        ],
        "summary": "information about user",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "ID",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "name": "rootID",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success response",
            "schema": {
              "$ref": "#/definitions/AUser"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/search-by-name": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Users"
        ],
        "summary": "search user by full name and email",
        "parameters": [
          {
            "name": "RSearchUsersByName",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RUsersByName"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success response",
            "schema": {
              "$ref": "#/definitions/AUsersByName"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/user/update/locale": {
      "put": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Users"
        ],
        "summary": "edit user locale",
        "parameters": [
          {
            "name": "RUpdateUserLocale",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RUpdateUserLocale"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "success"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/ban-list": {
      "get": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Users ban list"
        ],
        "summary": "Get ban list info",
        "responses": {
          "200": {
            "description": "success resonse",
            "schema": {
              "$ref": "#/definitions/AGetBanListInfo"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Cant find users"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/ban-list/add": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Users ban list"
        ],
        "summary": "Add user to block list",
        "parameters": [
          {
            "name": "RBanAddUser",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RBanAddUser"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "email was added to ban-list"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "User not found"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/users/ban-list/remove": {
      "post": {
        "security": [
          {
            "apiKey": []
          }
        ],
        "tags": [
          "Users ban list"
        ],
        "summary": "Remove user from block list",
        "parameters": [
          {
            "name": "RBanRemoveUser",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RBanRemoveUser"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "user was removed from ban-list"
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "User not found"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AActors": {
      "type": "object",
      "properties": {
        "actors": {
          "$ref": "#/definitions/Actors"
        }
      }
    },
    "ABadges": {
      "type": "object",
      "properties": {
        "badges": {
          "$ref": "#/definitions/Badges"
        }
      }
    },
    "AChatAddUser": {
      "type": "object",
      "required": [
        "chatNewUserMessage"
      ],
      "properties": {
        "chatNewUserMessage": {
          "$ref": "#/definitions/Message"
        }
      }
    },
    "AChatRemoveUser": {
      "type": "object",
      "required": [
        "chatRemoveUserMessage"
      ],
      "properties": {
        "chatRemoveUserMessage": {
          "$ref": "#/definitions/Message"
        }
      }
    },
    "ACollection": {
      "type": "object",
      "properties": {
        "collection": {
          "$ref": "#/definitions/Collection"
        },
        "groups": {
          "$ref": "#/definitions/Groups"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "rights": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityAccessRight"
          }
        },
        "users": {
          "$ref": "#/definitions/Users"
        }
      }
    },
    "ACreateActor": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ACreateBadge": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ACreateChat": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "createChatServiceMessage": {
          "$ref": "#/definitions/Message"
        }
      }
    },
    "ACreateInvite": {
      "type": "object",
      "required": [
        "invite"
      ],
      "properties": {
        "invite": {
          "$ref": "#/definitions/Invite"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "users": {
          "$ref": "#/definitions/Users"
        }
      }
    },
    "ACreateMaterial": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ACreateNamedDateInterval": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ACreateObjectStatus": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ACreateOriginLocation": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ADashboard": {
      "type": "object",
      "properties": {
        "actors": {
          "$ref": "#/definitions/Actors"
        },
        "badges": {
          "$ref": "#/definitions/Badges"
        },
        "collections": {
          "$ref": "#/definitions/Collections"
        },
        "groups": {
          "$ref": "#/definitions/Groups"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "objectsPreview": {
          "$ref": "#/definitions/CObjectPreviews"
        },
        "originLocations": {
          "$ref": "#/definitions/OriginLocations"
        }
      }
    },
    "AEditChatAvatar": {
      "type": "object",
      "required": [
        "newAvatarServiceMessage"
      ],
      "properties": {
        "avatar": {
          "x-nullable": true,
          "$ref": "#/definitions/Media"
        },
        "newAvatarServiceMessage": {
          "$ref": "#/definitions/Message"
        }
      }
    },
    "AEditChatName": {
      "type": "object",
      "required": [
        "newNameServiceMessage"
      ],
      "properties": {
        "newNameServiceMessage": {
          "$ref": "#/definitions/Message"
        }
      }
    },
    "AGetAllConversation": {
      "type": "object",
      "properties": {
        "NTotalUnreadMessages": {
          "type": "integer",
          "format": "int32"
        },
        "NTotalUnreadNotifications": {
          "type": "integer",
          "format": "int32"
        },
        "actors": {
          "$ref": "#/definitions/Actors"
        },
        "badges": {
          "$ref": "#/definitions/Badges"
        },
        "chats": {
          "$ref": "#/definitions/Chats"
        },
        "contactUsersIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "conversationUsers": {
          "$ref": "#/definitions/ConversationUsers"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "messages": {
          "$ref": "#/definitions/Messages"
        },
        "objectsPreview": {
          "$ref": "#/definitions/CObjectPreviews"
        },
        "originLocations": {
          "$ref": "#/definitions/OriginLocations"
        },
        "taskPreviews": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskPreview"
          }
        },
        "users": {
          "$ref": "#/definitions/Users"
        }
      }
    },
    "AGetBanListInfo": {
      "type": "object",
      "properties": {
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "users": {
          "$ref": "#/definitions/Users"
        }
      }
    },
    "AGetChatInfo": {
      "type": "object",
      "required": [
        "chat"
      ],
      "properties": {
        "chat": {
          "$ref": "#/definitions/Chat"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "users": {
          "$ref": "#/definitions/Users"
        }
      }
    },
    "AGetEvents": {
      "type": "object",
      "required": [
        "events"
      ],
      "properties": {
        "events": {
          "$ref": "#/definitions/Events"
        }
      }
    },
    "AGetMediasByIDs": {
      "type": "object",
      "required": [
        "medias"
      ],
      "properties": {
        "medias": {
          "$ref": "#/definitions/Medias"
        }
      }
    },
    "AGetMessages": {
      "type": "object",
      "required": [
        "messages"
      ],
      "properties": {
        "actors": {
          "$ref": "#/definitions/Actors"
        },
        "badges": {
          "$ref": "#/definitions/Badges"
        },
        "chats": {
          "$ref": "#/definitions/Chats"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "messages": {
          "$ref": "#/definitions/Messages"
        },
        "objectsPreview": {
          "$ref": "#/definitions/CObjectPreviews"
        },
        "originLocations": {
          "$ref": "#/definitions/OriginLocations"
        },
        "taskPreviews": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskPreview"
          }
        },
        "users": {
          "$ref": "#/definitions/Users"
        }
      }
    },
    "AGetMessagesRange": {
      "type": "object",
      "required": [
        "messages"
      ],
      "properties": {
        "actors": {
          "$ref": "#/definitions/Actors"
        },
        "badges": {
          "$ref": "#/definitions/Badges"
        },
        "chats": {
          "$ref": "#/definitions/Chats"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "messages": {
          "$ref": "#/definitions/Messages"
        },
        "objectsPreview": {
          "$ref": "#/definitions/CObjectPreviews"
        },
        "originLocations": {
          "$ref": "#/definitions/OriginLocations"
        },
        "taskPreviews": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskPreview"
          }
        },
        "users": {
          "$ref": "#/definitions/Users"
        }
      }
    },
    "AGetRight": {
      "type": "object",
      "properties": {
        "collections": {
          "$ref": "#/definitions/Collections"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "rights": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Right"
          }
        }
      }
    },
    "AGetTask": {
      "type": "object",
      "properties": {
        "collections": {
          "$ref": "#/definitions/Collections"
        },
        "groups": {
          "$ref": "#/definitions/Groups"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "objectsPreview": {
          "description": "only title",
          "$ref": "#/definitions/CObjectPreviews"
        },
        "task": {
          "$ref": "#/definitions/Task"
        },
        "users": {
          "$ref": "#/definitions/Users"
        }
      }
    },
    "AGroup": {
      "type": "object",
      "properties": {
        "actors": {
          "$ref": "#/definitions/Actors"
        },
        "badges": {
          "$ref": "#/definitions/Badges"
        },
        "collections": {
          "$ref": "#/definitions/Collections"
        },
        "group": {
          "$ref": "#/definitions/Group"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "objectsPreview": {
          "$ref": "#/definitions/CObjectPreviews"
        },
        "originLocations": {
          "$ref": "#/definitions/OriginLocations"
        }
      }
    },
    "ALogin": {
      "type": "object",
      "required": [
        "authToken"
      ],
      "properties": {
        "authToken": {
          "$ref": "#/definitions/AuthToken"
        }
      }
    },
    "AMaterials": {
      "type": "object",
      "properties": {
        "materials": {
          "$ref": "#/definitions/Materials"
        }
      }
    },
    "AMyTaskList": {
      "type": "object",
      "properties": {
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "taskPreviews": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskPreview"
          }
        },
        "users": {
          "$ref": "#/definitions/Users"
        }
      }
    },
    "ANamedDateIntervals": {
      "type": "object",
      "required": [
        "dateIntervals"
      ],
      "properties": {
        "dateIntervals": {
          "$ref": "#/definitions/CDateIntervals"
        }
      }
    },
    "ANewCollection": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ANewGroup": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ANewMedia": {
      "type": "object",
      "required": [
        "media"
      ],
      "properties": {
        "media": {
          "$ref": "#/definitions/Media"
        }
      }
    },
    "ANewObject": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "AObject": {
      "type": "object",
      "properties": {
        "actors": {
          "$ref": "#/definitions/Actors"
        },
        "badges": {
          "$ref": "#/definitions/Badges"
        },
        "collection": {
          "$ref": "#/definitions/Collection"
        },
        "dateIntervals": {
          "$ref": "#/definitions/CDateIntervals"
        },
        "materials": {
          "$ref": "#/definitions/Materials"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "object": {
          "$ref": "#/definitions/CObject"
        },
        "originLocations": {
          "$ref": "#/definitions/OriginLocations"
        },
        "user": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "AObjectsPreview": {
      "type": "object",
      "properties": {
        "actors": {
          "$ref": "#/definitions/Actors"
        },
        "badges": {
          "$ref": "#/definitions/Badges"
        },
        "collections": {
          "$ref": "#/definitions/Collections"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "objectsPreview": {
          "$ref": "#/definitions/CObjectPreviews"
        },
        "originLocations": {
          "$ref": "#/definitions/OriginLocations"
        },
        "totalObjects": {
          "type": "integer",
          "format": "int64"
        },
        "users": {
          "$ref": "#/definitions/Users"
        },
        "users_collections": {
          "$ref": "#/definitions/UsersCollections"
        }
      }
    },
    "AOriginLocations": {
      "type": "object",
      "properties": {
        "originLocations": {
          "$ref": "#/definitions/OriginLocations"
        }
      }
    },
    "APublicCollection": {
      "type": "object",
      "required": [
        "collection"
      ],
      "properties": {
        "collection": {
          "$ref": "#/definitions/Collection"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "users": {
          "$ref": "#/definitions/Users"
        }
      }
    },
    "APublicCollections": {
      "type": "object",
      "properties": {
        "collections": {
          "$ref": "#/definitions/Collections"
        },
        "collectionsTotalCount": {
          "type": "integer",
          "format": "int64",
          "x-omitempty": false
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "users": {
          "$ref": "#/definitions/Users"
        },
        "users_collections": {
          "$ref": "#/definitions/UsersCollections"
        }
      }
    },
    "AReadHistory": {
      "type": "object",
      "properties": {
        "NPeerUnreadMessages": {
          "type": "integer",
          "format": "int32"
        },
        "NTotalUnreadMessages": {
          "type": "integer",
          "format": "int32"
        },
        "NTotalUnreadNotifications": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AReferences": {
      "type": "object",
      "properties": {
        "currencies": {
          "$ref": "#/definitions/Currencies"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "objectStatuses": {
          "$ref": "#/definitions/CObjectStatuses"
        }
      }
    },
    "ARegistration": {
      "type": "object",
      "required": [
        "authToken"
      ],
      "properties": {
        "authToken": {
          "$ref": "#/definitions/AuthToken"
        }
      }
    },
    "ARoot": {
      "type": "object",
      "properties": {
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "root": {
          "$ref": "#/definitions/Root"
        },
        "users": {
          "$ref": "#/definitions/Users"
        }
      }
    },
    "ARoots": {
      "type": "object",
      "properties": {
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "roots": {
          "$ref": "#/definitions/Roots"
        },
        "users": {
          "$ref": "#/definitions/Users"
        }
      }
    },
    "ASearchObjects": {
      "type": "object",
      "properties": {
        "actors": {
          "$ref": "#/definitions/Actors"
        },
        "badges": {
          "$ref": "#/definitions/Badges"
        },
        "collections": {
          "$ref": "#/definitions/Collections"
        },
        "dateIntervals": {
          "$ref": "#/definitions/CDateIntervals"
        },
        "filters": {
          "$ref": "#/definitions/CObjectSearchFilters"
        },
        "groups": {
          "$ref": "#/definitions/Groups"
        },
        "materials": {
          "$ref": "#/definitions/Materials"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "objectsPreview": {
          "$ref": "#/definitions/CObjectPreviews"
        },
        "originLocations": {
          "$ref": "#/definitions/OriginLocations"
        },
        "totalHits": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ASendMessage": {
      "type": "object",
      "required": [
        "messageID"
      ],
      "properties": {
        "messageID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ASetRight": {
      "type": "object",
      "properties": {
        "right": {
          "$ref": "#/definitions/Right"
        }
      }
    },
    "ATeam": {
      "type": "object",
      "properties": {
        "invitedUsers": {
          "$ref": "#/definitions/InvitedUsers"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "tusers": {
          "$ref": "#/definitions/TUsers"
        },
        "users": {
          "$ref": "#/definitions/Users"
        }
      }
    },
    "AUser": {
      "type": "object",
      "required": [
        "users",
        "userID"
      ],
      "properties": {
        "collections": {
          "$ref": "#/definitions/Collections"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "rights": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Right"
          }
        },
        "roots": {
          "$ref": "#/definitions/Roots"
        },
        "taskPreviews": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskPreview"
          }
        },
        "userID": {
          "type": "integer",
          "format": "int64"
        },
        "users": {
          "$ref": "#/definitions/Users"
        }
      }
    },
    "AUsersByName": {
      "type": "object",
      "properties": {
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "popularTags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "users": {
          "$ref": "#/definitions/Users"
        },
        "usersTotalCount": {
          "type": "integer",
          "format": "int64",
          "x-omitempty": false
        }
      }
    },
    "Actor": {
      "type": "object",
      "required": [
        "ID",
        "name"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Actors": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Actor"
          },
          "x-omitempty": false
        }
      }
    },
    "AddedToGroupCollectionEvent": {
      "type": "object",
      "required": [
        "collectionID",
        "groupID"
      ],
      "properties": {
        "collectionID": {
          "type": "integer",
          "format": "int64"
        },
        "groupID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "AuthToken": {
      "type": "object",
      "required": [
        "token"
      ],
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "Badge": {
      "type": "object",
      "required": [
        "ID",
        "name"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "color": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Badges": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Badge"
          },
          "x-omitempty": false
        }
      }
    },
    "CDate": {
      "type": "object",
      "properties": {
        "date": {
          "description": "date format 2016-05-18",
          "type": "string",
          "x-nullable": true
        }
      }
    },
    "CDateInterval": {
      "type": "object",
      "required": [
        "ID",
        "from",
        "to",
        "name"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "from": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "to": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CDateIntervals": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CDateInterval"
          },
          "x-omitempty": false
        }
      }
    },
    "CObject": {
      "type": "object",
      "required": [
        "ID",
        "collectionID",
        "name"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "accessLevel": {
          "description": "none | read | write | admin\n",
          "type": "string"
        },
        "actorsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "x-omitempty": false
        },
        "badgesIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "x-omitempty": false
        },
        "collectionID": {
          "type": "integer",
          "format": "int64"
        },
        "currentStatus": {
          "$ref": "#/definitions/CObjectStatusRef"
        },
        "description": {
          "type": "string"
        },
        "materialsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "x-omitempty": false
        },
        "mediasIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "x-omitempty": false
        },
        "name": {
          "type": "string"
        },
        "originLocationsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "x-omitempty": false
        },
        "productionDate": {
          "$ref": "#/definitions/CObjectDateInterval"
        },
        "provenance": {
          "type": "string"
        },
        "purchaseDate": {
          "description": "date format 2016-05-18",
          "type": "string",
          "x-nullable": true
        },
        "purchasePrice": {
          "$ref": "#/definitions/Money"
        },
        "rootIDNumber": {
          "type": "string"
        },
        "valuations": {
          "$ref": "#/definitions/Valuations"
        }
      }
    },
    "CObjectDateInterval": {
      "type": "object",
      "properties": {
        "dateIntervalID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "from": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "to": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        }
      }
    },
    "CObjectDateValueInterval": {
      "type": "object",
      "required": [
        "from",
        "to"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "from": {
          "type": "integer",
          "format": "int64"
        },
        "to": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CObjectMessage": {
      "type": "object",
      "required": [
        "objectID"
      ],
      "properties": {
        "objectID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CObjectOrders": {
      "description": "1 - ASC, -1 - DESC",
      "type": "object",
      "properties": {
        "actorName": {
          "type": "integer",
          "format": "int16"
        },
        "creationTime": {
          "type": "integer",
          "format": "int16"
        },
        "name": {
          "type": "integer",
          "format": "int16"
        },
        "updateTime": {
          "type": "integer",
          "format": "int16"
        }
      }
    },
    "CObjectPreview": {
      "type": "object",
      "required": [
        "ID",
        "collectionID"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "accessLevel": {
          "description": "none | read | write | admin\n",
          "type": "string"
        },
        "actorsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "x-omitempty": false
        },
        "badgesIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "x-omitempty": false
        },
        "collectionID": {
          "type": "integer",
          "format": "int64"
        },
        "currentStatus": {
          "$ref": "#/definitions/CObjectStatusRef"
        },
        "mediasIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "x-omitempty": false
        },
        "name": {
          "type": "string"
        },
        "originLocationsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "x-omitempty": false
        },
        "rootID": {
          "type": "integer",
          "format": "int64"
        },
        "valuations": {
          "$ref": "#/definitions/Valuations"
        }
      }
    },
    "CObjectPreviews": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CObjectPreview"
          },
          "x-omitempty": false
        }
      }
    },
    "CObjectSearchFilterResult": {
      "type": "object",
      "properties": {
        "cnt": {
          "type": "integer",
          "format": "int64"
        },
        "propertyID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CObjectSearchFilters": {
      "type": "object",
      "properties": {
        "actors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CObjectSearchFilterResult"
          },
          "x-omitempty": false
        },
        "badges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CObjectSearchFilterResult"
          },
          "x-omitempty": false
        },
        "collections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CObjectSearchFilterResult"
          },
          "x-omitempty": false
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CObjectSearchFilterResult"
          },
          "x-omitempty": false
        },
        "materials": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CObjectSearchFilterResult"
          },
          "x-omitempty": false
        },
        "originLocations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CObjectSearchFilterResult"
          },
          "x-omitempty": false
        },
        "productionNamedDateIntervals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CObjectSearchFilterResult"
          },
          "x-omitempty": false
        },
        "statuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CObjectSearchFilterResult"
          },
          "x-omitempty": false
        }
      }
    },
    "CObjectStatus": {
      "type": "object",
      "required": [
        "ID",
        "name",
        "description"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "imageMediaID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "name": {
          "type": "string"
        }
      }
    },
    "CObjectStatusRef": {
      "type": "object",
      "required": [
        "objectStatusID",
        "startDate"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "notificationDate": {
          "type": "string",
          "format": "dateTime",
          "x-nullable": true
        },
        "objectStatusID": {
          "type": "integer",
          "format": "int64"
        },
        "startDate": {
          "description": "date-time - RFC3339",
          "type": "string"
        }
      }
    },
    "CObjectStatuses": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CObjectStatus"
          },
          "x-omitempty": false
        }
      }
    },
    "Chat": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "adminUserID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "avatarID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "usersCnt": {
          "type": "integer",
          "format": "int16",
          "x-nullable": true
        }
      }
    },
    "Chats": {
      "type": "object",
      "required": [
        "list"
      ],
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Chat"
          },
          "x-omitempty": false
        }
      }
    },
    "Collection": {
      "type": "object",
      "required": [
        "ID",
        "name",
        "rootID",
        "typo",
        "description"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "accessLevel": {
          "description": "none | read | write | admin\n",
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "groupsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "x-omitempty": false
        },
        "imageMediaID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "isAnonymous": {
          "type": "boolean",
          "x-nullable": true
        },
        "name": {
          "type": "string"
        },
        "objectsCnt": {
          "type": "integer",
          "format": "int64"
        },
        "public": {
          "type": "boolean"
        },
        "rootID": {
          "type": "integer",
          "format": "int64"
        },
        "typo": {
          "type": "integer",
          "format": "int16"
        },
        "valuation": {
          "$ref": "#/definitions/collectionValuation"
        }
      }
    },
    "Collections": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Collection"
          },
          "x-omitempty": false
        }
      }
    },
    "ConversationUser": {
      "type": "object",
      "required": [
        "userID",
        "peer",
        "nUnreadMessages"
      ],
      "properties": {
        "lastReadMessageID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "nUnreadMessages": {
          "type": "integer",
          "format": "int32"
        },
        "peer": {
          "$ref": "#/definitions/Peer"
        },
        "userID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ConversationUsers": {
      "type": "object",
      "required": [
        "list"
      ],
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConversationUser"
          },
          "x-omitempty": false
        }
      }
    },
    "Currencies": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Currency"
          },
          "x-omitempty": false
        }
      }
    },
    "Currency": {
      "type": "object",
      "required": [
        "ID",
        "symbol",
        "code",
        "num",
        "e",
        "currency"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "code": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "e": {
          "type": "integer",
          "format": "int16"
        },
        "num": {
          "type": "string"
        },
        "symbol": {
          "type": "string"
        }
      }
    },
    "DeletedObjectEvent": {
      "type": "object",
      "required": [
        "objectID",
        "originalCollectionID"
      ],
      "properties": {
        "objectID": {
          "type": "integer",
          "format": "int64"
        },
        "originalCollectionID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "EntityAccessRight": {
      "type": "object",
      "required": [
        "userID",
        "level"
      ],
      "properties": {
        "level": {
          "description": "none | read | write | admin\n",
          "type": "string"
        },
        "userID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "EntityRef": {
      "type": "object",
      "required": [
        "typo",
        "ID"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "typo": {
          "description": "ObjectEntityType     EntityType = 0\nCollectionEntityType            = 10\nGroupEntityType                 = 20\n\nActorEntityType          = 30\nBadgeEntityType          = 40\nMaterialEntityType       = 50\nOriginLocationEntityType = 60\nNamedIntervalEntityType  = 70\n",
          "type": "integer",
          "format": "int16"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "code"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "fields": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "Event": {
      "type": "object",
      "required": [
        "seqNo",
        "typo"
      ],
      "properties": {
        "creationTime": {
          "description": "date-time - RFC3339",
          "type": "string"
        },
        "historyRead": {
          "$ref": "#/definitions/EventHistoryRead"
        },
        "newMessage": {
          "$ref": "#/definitions/EventNewMessage"
        },
        "seqNo": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "description": "new event       - 0\nconfirmed event - 10\n",
          "type": "integer",
          "format": "int16"
        },
        "typo": {
          "description": "new message    - 0\nreaded history - 10\nchanged entity - 20\n",
          "type": "integer",
          "format": "int16"
        }
      }
    },
    "EventHistoryRead": {
      "type": "object",
      "required": [
        "peer",
        "lastReadMessageID"
      ],
      "properties": {
        "lastReadMessageID": {
          "type": "integer",
          "format": "int64"
        },
        "peer": {
          "$ref": "#/definitions/Peer"
        }
      }
    },
    "EventNewMessage": {
      "type": "object",
      "required": [
        "messageID"
      ],
      "properties": {
        "messageID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Events": {
      "type": "object",
      "required": [
        "list"
      ],
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Event"
          },
          "x-omitempty": false
        }
      }
    },
    "FullGroup": {
      "type": "object",
      "properties": {
        "collections": {
          "$ref": "#/definitions/Collections"
        },
        "group": {
          "$ref": "#/definitions/Group"
        }
      }
    },
    "Group": {
      "type": "object",
      "required": [
        "ID",
        "name",
        "rootID"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "accessLevel": {
          "description": "none | read | write | admin\n",
          "type": "string"
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "rootID": {
          "type": "integer",
          "format": "int64"
        },
        "valuation": {
          "$ref": "#/definitions/groupValuation"
        }
      }
    },
    "Groups": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Group"
          },
          "x-omitempty": false
        }
      }
    },
    "InputBadge": {
      "type": "object",
      "required": [
        "name",
        "color"
      ],
      "properties": {
        "color": {
          "type": "string",
          "minLength": 1
        },
        "name": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "InputCollection": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "x-nullable": true
        },
        "groupsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "imageMediaID": {
          "$ref": "#/definitions/InputInt"
        },
        "isAnonymous": {
          "type": "boolean",
          "x-nullable": true
        },
        "name": {
          "type": "string"
        },
        "public": {
          "type": "boolean",
          "x-nullable": true
        },
        "rights": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntityAccessRight"
          },
          "x-omitempty": false
        }
      }
    },
    "InputIDRange": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "distance": {
          "type": "integer",
          "format": "int32"
        },
        "include": {
          "type": "boolean"
        }
      }
    },
    "InputInt": {
      "type": "object",
      "properties": {
        "value": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        }
      }
    },
    "InputMediaMessage": {
      "type": "object",
      "required": [
        "mediaID"
      ],
      "properties": {
        "mediaID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "InputObject": {
      "type": "object",
      "required": [
        "collectionID"
      ],
      "properties": {
        "actors": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "actorsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "badges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InputBadge"
          }
        },
        "badgesIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "collectionID": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string",
          "x-nullable": true
        },
        "materials": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "materialsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "mediasIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "name": {
          "type": "string"
        },
        "objectStatus": {
          "$ref": "#/definitions/InputObjectStatusRef"
        },
        "originLocations": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "originLocationsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "productionDate": {
          "$ref": "#/definitions/CObjectDateInterval"
        },
        "provenance": {
          "type": "string",
          "x-nullable": true
        },
        "purchaseDate": {
          "$ref": "#/definitions/CDate"
        },
        "purchasePrice": {
          "$ref": "#/definitions/InputPrice"
        },
        "rootIDNumber": {
          "type": "string",
          "x-nullable": true
        },
        "valuations": {
          "$ref": "#/definitions/Valuations"
        }
      }
    },
    "InputObjectMessage": {
      "type": "object",
      "required": [
        "objectID"
      ],
      "properties": {
        "objectID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "InputObjectSearchFilters": {
      "type": "object",
      "properties": {
        "actors": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "badges": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "collections": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "materials": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "originLocations": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "productionDateInterval": {
          "$ref": "#/definitions/CObjectDateValueInterval"
        },
        "statuses": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    "InputObjectStatusRef": {
      "type": "object",
      "required": [
        "description",
        "statusID"
      ],
      "properties": {
        "description": {
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "statusID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "InputPaginator": {
      "type": "object",
      "required": [
        "page",
        "cnt"
      ],
      "properties": {
        "cnt": {
          "type": "integer",
          "format": "int16"
        },
        "page": {
          "type": "integer",
          "format": "int16"
        }
      }
    },
    "InputPeer": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "typo": {
          "description": "user - 1\nchat - 2\n",
          "type": "integer",
          "format": "int16"
        }
      }
    },
    "InputPrice": {
      "type": "object",
      "properties": {
        "currencyID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "value": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        }
      }
    },
    "InputTextMessage": {
      "type": "object",
      "required": [
        "text"
      ],
      "properties": {
        "text": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "InputUser": {
      "type": "object",
      "properties": {
        "avatarMediaID": {
          "$ref": "#/definitions/InputInt"
        },
        "description": {
          "type": "string",
          "x-nullable": true
        },
        "firstName": {
          "type": "string",
          "x-nullable": true
        },
        "isAnonymous": {
          "type": "boolean",
          "x-nullable": true
        },
        "lastName": {
          "type": "string",
          "x-nullable": true
        },
        "speciality": {
          "type": "string",
          "x-nullable": true
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "Invite": {
      "type": "object",
      "required": [
        "ID",
        "fromUserID",
        "toUserID",
        "rootID",
        "status"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "fromUserID": {
          "type": "integer",
          "format": "int64"
        },
        "rootID": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "description": "Created  = 0\nAccepted = 10\nRejected = 20\nCanceled = 101\n",
          "type": "integer",
          "format": "int16"
        },
        "toUserID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "InvitedUser": {
      "type": "object",
      "required": [
        "userID",
        "inviteID"
      ],
      "properties": {
        "inviteID": {
          "type": "integer",
          "format": "int64"
        },
        "userID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "InvitedUsers": {
      "type": "object",
      "required": [
        "list"
      ],
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InvitedUser"
          },
          "x-omitempty": false
        }
      }
    },
    "Material": {
      "type": "object",
      "required": [
        "ID",
        "name"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Materials": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Material"
          },
          "x-omitempty": false
        }
      }
    },
    "Media": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "document": {
          "$ref": "#/definitions/MediaDocument"
        },
        "photo": {
          "$ref": "#/definitions/MediaPhoto"
        },
        "typo": {
          "description": "see POST /media; new file\n",
          "type": "integer",
          "format": "int16"
        }
      }
    },
    "MediaDocument": {
      "type": "object",
      "properties": {
        "URI": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        }
      }
    },
    "MediaMessage": {
      "type": "object",
      "required": [
        "mediaID"
      ],
      "properties": {
        "mediaID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "MediaPhoto": {
      "type": "object",
      "properties": {
        "variants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MediaPhotoVariant"
          },
          "x-omitempty": false
        }
      }
    },
    "MediaPhotoVariant": {
      "type": "object",
      "required": [
        "URI",
        "type",
        "width",
        "height",
        "byteSize"
      ],
      "properties": {
        "URI": {
          "type": "string"
        },
        "byteSize": {
          "type": "integer",
          "format": "int64"
        },
        "height": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "PhotoVariantOther              = 0\nPhotoVariantOriginal           = 1   - original\nPhotoVariantSmallThumb         = 3   - Width: 210, Height: 210\nPhotoVariantGenericSmallThumb  = 4   - Width: 300, Height: 300\nPhotoVariantGenericMedium      = 5   - Width: 600\nPhotoVariantGenericLarge       = 6   - Width: 1280\nPhotoVariantObjectPreview      = 100 - Width: 460, Height: 780\nPhotoVariantObjectGallery      = 101 - Width: 1360\nPhotoVariantObjectHD           = 102 - Width: 1280\nPhotoVariantObjectPreviewSmall = 150 - Width: 210, Height: 260\nPhotoVariantObjectGallerySmall = 151 - Width: 250\nPhotoVariantAvatar             = 200 - Width: 240, Height: 240\nPhotoVariantMsgPreview         = 300 - Width: 400, Height: 400\n",
          "type": "integer",
          "format": "int16"
        },
        "width": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Medias": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Media"
          },
          "x-omitempty": false
        }
      }
    },
    "Message": {
      "type": "object",
      "required": [
        "ID",
        "userID",
        "peer"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "creationTime": {
          "description": "date-time - RFC3339",
          "type": "string"
        },
        "forward": {
          "description": "TODO",
          "type": "string"
        },
        "mediaMessage": {
          "$ref": "#/definitions/MediaMessage"
        },
        "objectMessage": {
          "$ref": "#/definitions/CObjectMessage"
        },
        "peer": {
          "$ref": "#/definitions/Peer"
        },
        "serviceMessage": {
          "$ref": "#/definitions/ServiceMessage"
        },
        "textMessage": {
          "$ref": "#/definitions/TextMessage"
        },
        "typo": {
          "description": "see RSendMessage",
          "type": "integer",
          "format": "int16"
        },
        "userID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Messages": {
      "type": "object",
      "required": [
        "list"
      ],
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          },
          "x-omitempty": false
        }
      }
    },
    "Money": {
      "type": "object",
      "properties": {
        "currencyID": {
          "type": "integer",
          "format": "int64"
        },
        "value": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "MovedObjectEvent": {
      "type": "object",
      "required": [
        "objectID",
        "originalCollectionID",
        "newCollectionID"
      ],
      "properties": {
        "newCollectionID": {
          "type": "integer",
          "format": "int64"
        },
        "objectID": {
          "type": "integer",
          "format": "int64"
        },
        "originalCollectionID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "NewObjectEvent": {
      "type": "object",
      "required": [
        "objectID",
        "collectionID"
      ],
      "properties": {
        "collectionID": {
          "type": "integer",
          "format": "int64"
        },
        "objectID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "OriginLocation": {
      "type": "object",
      "required": [
        "ID",
        "name"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "OriginLocations": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OriginLocation"
          },
          "x-omitempty": false
        }
      }
    },
    "PayloadedEvent": {
      "type": "object",
      "required": [
        "seqNo",
        "typo"
      ],
      "properties": {
        "actor": {
          "$ref": "#/definitions/Actor"
        },
        "badge": {
          "$ref": "#/definitions/Badge"
        },
        "collection": {
          "$ref": "#/definitions/Collection"
        },
        "collectionAddedToGroup": {
          "$ref": "#/definitions/AddedToGroupCollectionEvent"
        },
        "collectionRemovedFromGroup": {
          "$ref": "#/definitions/RemovedFromGroupCollectionEvent"
        },
        "creationTime": {
          "description": "date-time - RFC3339",
          "type": "string"
        },
        "deletedEntity": {
          "$ref": "#/definitions/EntityRef"
        },
        "deletedObject": {
          "$ref": "#/definitions/DeletedObjectEvent"
        },
        "editedEntity": {
          "$ref": "#/definitions/EntityRef"
        },
        "group": {
          "$ref": "#/definitions/FullGroup"
        },
        "historyRead": {
          "$ref": "#/definitions/EventHistoryRead"
        },
        "material": {
          "$ref": "#/definitions/Material"
        },
        "medias": {
          "$ref": "#/definitions/Medias"
        },
        "movedObject": {
          "$ref": "#/definitions/MovedObjectEvent"
        },
        "namedDateInterval": {
          "$ref": "#/definitions/CDateInterval"
        },
        "newEntity": {
          "$ref": "#/definitions/EntityRef"
        },
        "newMessage": {
          "$ref": "#/definitions/EventNewMessage"
        },
        "newObject": {
          "$ref": "#/definitions/NewObjectEvent"
        },
        "originLocation": {
          "$ref": "#/definitions/OriginLocation"
        },
        "seqNo": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "description": "new event       - 0\nconfirmed event - 10\n",
          "type": "integer",
          "format": "int16"
        },
        "typo": {
          "description": "EventTypeNewMessage  EventType = 0\nEventTypeHistoryRead           = 10\n\nEventTypeNewObject     = 20\nEventTypeMovedObject   = 21\nEventTypeDeletedObject = 22\n\nEventTypeAddedToGroupCollection     = 30\nEventTypeRemovedFromGroupCollection = 31\n\nEventTypeNewEntity     = 40\nEventTypeEditedEntity  = 41\nEventTypeDeletedEntity = 42\n",
          "type": "integer",
          "format": "int16"
        }
      }
    },
    "Peer": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "typo": {
          "description": "user - 1\nchat - 2\n",
          "type": "integer",
          "format": "int16"
        }
      }
    },
    "PushNotification": {
      "type": "object",
      "required": [
        "typo"
      ],
      "properties": {
        "messengerAction": {
          "$ref": "#/definitions/PushNotificationMessengerAction"
        },
        "typo": {
          "type": "integer",
          "format": "int16"
        }
      }
    },
    "PushNotificationMessengerAction": {
      "type": "object",
      "required": [
        "peer"
      ],
      "properties": {
        "peer": {
          "$ref": "#/definitions/Peer"
        }
      }
    },
    "RAddCollectionsToGroup": {
      "type": "object",
      "required": [
        "collectionsIDs",
        "targetGroupID"
      ],
      "properties": {
        "collectionsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "targetGroupID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RAddUserToRoot": {
      "type": "object",
      "required": [
        "userID",
        "rootID"
      ],
      "properties": {
        "rootID": {
          "type": "integer",
          "format": "int64"
        },
        "userID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RArchiveTask": {
      "type": "object",
      "properties": {
        "archive": {
          "type": "boolean"
        }
      }
    },
    "RAssignTaskTo": {
      "type": "object",
      "properties": {
        "newUserID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        }
      }
    },
    "RBanAddUser": {
      "type": "object",
      "required": [
        "userID"
      ],
      "properties": {
        "userID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": false
        }
      }
    },
    "RBanRemoveUser": {
      "type": "object",
      "required": [
        "userID"
      ],
      "properties": {
        "userID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": false
        }
      }
    },
    "RChangeTaskStatus": {
      "type": "object",
      "properties": {
        "newStatus": {
          "description": "todo | in_progress | done\n",
          "type": "string"
        }
      }
    },
    "RChatAddUser": {
      "type": "object",
      "required": [
        "clientUniqID",
        "userID",
        "chatID"
      ],
      "properties": {
        "chatID": {
          "type": "integer",
          "format": "int64"
        },
        "clientUniqID": {
          "type": "integer",
          "format": "int64"
        },
        "userID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RChatRemoveUser": {
      "type": "object",
      "required": [
        "clientUniqID",
        "userID",
        "chatID"
      ],
      "properties": {
        "chatID": {
          "type": "integer",
          "format": "int64"
        },
        "clientUniqID": {
          "type": "integer",
          "format": "int64"
        },
        "userID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RConfirmEvent": {
      "type": "object",
      "required": [
        "endSeqNo"
      ],
      "properties": {
        "endSeqNo": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RCreateActor": {
      "type": "object",
      "required": [
        "rootID",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1
        },
        "rootID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RCreateBadge": {
      "type": "object",
      "required": [
        "rootID",
        "badge"
      ],
      "properties": {
        "badge": {
          "$ref": "#/definitions/InputBadge"
        },
        "rootID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RCreateChat": {
      "type": "object",
      "required": [
        "clientUniqID",
        "name"
      ],
      "properties": {
        "avatarMediaID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "clientUniqID": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "usersIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    "RCreateInvite": {
      "type": "object",
      "required": [
        "rootID"
      ],
      "properties": {
        "rootID": {
          "type": "integer",
          "format": "int64"
        },
        "toUserID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        }
      }
    },
    "RCreateMaterial": {
      "type": "object",
      "required": [
        "rootID",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1
        },
        "rootID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RCreateNamedDateInterval": {
      "type": "object",
      "required": [
        "from",
        "to",
        "name",
        "rootID"
      ],
      "properties": {
        "from": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "rootID": {
          "type": "integer",
          "format": "int64"
        },
        "to": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        }
      }
    },
    "RCreateObjectStatus": {
      "type": "object",
      "required": [
        "mediaID",
        "name"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "mediaID": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "RCreateOriginLocation": {
      "type": "object",
      "required": [
        "rootID",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1
        },
        "rootID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RCreateTask": {
      "type": "object",
      "required": [
        "task",
        "clientUniqID"
      ],
      "properties": {
        "clientUniqID": {
          "type": "integer",
          "format": "int64"
        },
        "task": {
          "$ref": "#/definitions/Task"
        }
      }
    },
    "RDeleteObjects": {
      "type": "object",
      "required": [
        "objectsIDs"
      ],
      "properties": {
        "final": {
          "type": "boolean"
        },
        "objectsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    "REditChatAvatar": {
      "type": "object",
      "required": [
        "clientUniqID"
      ],
      "properties": {
        "avatarID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "clientUniqID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "REditChatName": {
      "type": "object",
      "required": [
        "clientUniqID",
        "name"
      ],
      "properties": {
        "clientUniqID": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "REditCollection": {
      "type": "object",
      "required": [
        "collection"
      ],
      "properties": {
        "collection": {
          "$ref": "#/definitions/InputCollection"
        }
      }
    },
    "REditObject": {
      "type": "object",
      "required": [
        "object"
      ],
      "properties": {
        "object": {
          "$ref": "#/definitions/InputObject"
        }
      }
    },
    "REditTask": {
      "type": "object",
      "required": [
        "task",
        "clientUniqID"
      ],
      "properties": {
        "clientUniqID": {
          "type": "integer",
          "format": "int64"
        },
        "task": {
          "$ref": "#/definitions/Task"
        }
      }
    },
    "REditUser": {
      "type": "object",
      "required": [
        "user"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "user": {
          "$ref": "#/definitions/InputUser"
        }
      }
    },
    "RGetAllConversation": {
      "type": "object",
      "required": [
        "NLastMessages"
      ],
      "properties": {
        "NLastMessages": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "RGetCollectionsObjects": {
      "type": "object",
      "properties": {
        "collectionsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "x-omitempty": false
        },
        "orders": {
          "$ref": "#/definitions/CObjectOrders"
        },
        "paginator": {
          "$ref": "#/definitions/InputPaginator"
        }
      }
    },
    "RGetEvents": {
      "type": "object",
      "required": [
        "startSeqNo"
      ],
      "properties": {
        "endSeqNo": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "startSeqNo": {
          "type": "integer",
          "format": "int64"
        },
        "statuses": {
          "description": "#definitions/Event",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int16"
          }
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RGetMessages": {
      "type": "object",
      "required": [
        "IDs"
      ],
      "properties": {
        "IDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        }
      }
    },
    "RGetMessagesRange": {
      "type": "object",
      "required": [
        "peer",
        "range"
      ],
      "properties": {
        "peer": {
          "$ref": "#/definitions/InputPeer"
        },
        "range": {
          "$ref": "#/definitions/InputIDRange"
        }
      }
    },
    "RInviteByEmail": {
      "type": "object",
      "required": [
        "rootID",
        "toUserEmail"
      ],
      "properties": {
        "rootID": {
          "type": "integer",
          "format": "int64"
        },
        "toUserEmail": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "RLogin": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "minLength": 1
        },
        "password": {
          "type": "string",
          "minLength": 6
        }
      }
    },
    "RMoveObjects": {
      "type": "object",
      "required": [
        "objectsIDs",
        "targetCollectionID"
      ],
      "properties": {
        "objectsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "targetCollectionID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RMyArchiveList": {
      "type": "object",
      "properties": {
        "paginator": {
          "$ref": "#/definitions/InputPaginator"
        }
      }
    },
    "RNewCollection": {
      "type": "object",
      "required": [
        "rootID",
        "collection",
        "clientUniqID"
      ],
      "properties": {
        "clientUniqID": {
          "type": "integer",
          "format": "int64"
        },
        "collection": {
          "$ref": "#/definitions/InputCollection"
        },
        "rootID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RNewGroup": {
      "type": "object",
      "required": [
        "name",
        "clientUniqID",
        "rootID"
      ],
      "properties": {
        "clientUniqID": {
          "type": "integer",
          "format": "int64"
        },
        "collectionsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "name": {
          "type": "string",
          "minLength": 1
        },
        "rootID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RNewObject": {
      "type": "object",
      "required": [
        "clientUniqID",
        "object"
      ],
      "properties": {
        "clientUniqID": {
          "type": "integer",
          "format": "int64"
        },
        "object": {
          "$ref": "#/definitions/InputObject"
        }
      }
    },
    "RPasswordReset": {
      "type": "object",
      "required": [
        "password"
      ],
      "properties": {
        "password": {
          "type": "string",
          "minLength": 6
        }
      }
    },
    "RPublicCollections": {
      "type": "object",
      "properties": {
        "paginator": {
          "$ref": "#/definitions/InputPaginator"
        },
        "query": {
          "type": "string",
          "x-nullable": true
        },
        "userID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        }
      }
    },
    "RReadHistory": {
      "type": "object",
      "required": [
        "peer",
        "lastReadMessageID"
      ],
      "properties": {
        "lastReadMessageID": {
          "type": "integer",
          "format": "int64"
        },
        "peer": {
          "$ref": "#/definitions/InputPeer"
        }
      }
    },
    "RRegisterDeviceToken": {
      "type": "object",
      "required": [
        "typo",
        "token"
      ],
      "properties": {
        "sandbox": {
          "type": "boolean"
        },
        "token": {
          "type": "string",
          "minLength": 1
        },
        "typo": {
          "description": "UserSessionDeviceTypeAndroid = 10\nUserSessionDeviceTypeIOS     = 20\n",
          "type": "integer",
          "format": "int16"
        }
      }
    },
    "RRegistration": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "minLength": 1
        },
        "invite": {
          "type": "string",
          "x-nullable": true
        },
        "password": {
          "type": "string",
          "minLength": 6
        }
      }
    },
    "RRemoveCollectionsFromeGroup": {
      "type": "object",
      "required": [
        "collectionsIDs",
        "targetGroupID"
      ],
      "properties": {
        "collectionsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "targetGroupID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RRemoveUserFromRoot": {
      "type": "object",
      "required": [
        "userID",
        "rootID"
      ],
      "properties": {
        "rootID": {
          "type": "integer",
          "format": "int64"
        },
        "userID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RSearchObjects": {
      "type": "object",
      "properties": {
        "filters": {
          "$ref": "#/definitions/InputObjectSearchFilters"
        },
        "orders": {
          "$ref": "#/definitions/CObjectOrders"
        },
        "paginator": {
          "$ref": "#/definitions/InputPaginator"
        },
        "query": {
          "type": "string"
        },
        "rootID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "RSearchPublicCollections": {
      "type": "object",
      "properties": {
        "paginator": {
          "$ref": "#/definitions/InputPaginator"
        },
        "query": {
          "type": "string"
        }
      }
    },
    "RSendMessage": {
      "type": "object",
      "required": [
        "peer",
        "clientUniqID",
        "typo"
      ],
      "properties": {
        "clientUniqID": {
          "type": "integer",
          "format": "int64"
        },
        "cobjectMessage": {
          "$ref": "#/definitions/InputObjectMessage"
        },
        "mediaMessage": {
          "$ref": "#/definitions/InputMediaMessage"
        },
        "peer": {
          "$ref": "#/definitions/InputPeer"
        },
        "textMessage": {
          "$ref": "#/definitions/InputTextMessage"
        },
        "typo": {
          "description": "MessageTypeText    MessageType = 0\nMessageTypeMedia               = 10\nMessageTypeService             = 20\nMessageTypeObject              = 30\n",
          "type": "integer",
          "format": "int16"
        }
      }
    },
    "RSetRight": {
      "type": "object",
      "properties": {
        "clientUniqID": {
          "type": "integer",
          "format": "int64"
        },
        "right": {
          "$ref": "#/definitions/Right"
        }
      }
    },
    "RUpdateActor": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "RUpdateBadge": {
      "type": "object",
      "required": [
        "badge"
      ],
      "properties": {
        "badge": {
          "$ref": "#/definitions/InputBadge"
        }
      }
    },
    "RUpdateGroup": {
      "type": "object",
      "properties": {
        "collectionsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "name": {
          "type": "string"
        }
      }
    },
    "RUpdateMaterial": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "RUpdateNamedDateInterval": {
      "type": "object",
      "properties": {
        "from": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "name": {
          "type": "string"
        },
        "to": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        }
      }
    },
    "RUpdateOriginLocation": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "RUpdateUserLocale": {
      "type": "object",
      "required": [
        "locale"
      ],
      "properties": {
        "locale": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "RUserEmail": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "RUsersByName": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "paginator": {
          "$ref": "#/definitions/InputPaginator"
        },
        "withPopularTags": {
          "type": "boolean"
        }
      }
    },
    "RemovedFromGroupCollectionEvent": {
      "type": "object",
      "required": [
        "collectionID",
        "groupID"
      ],
      "properties": {
        "collectionID": {
          "type": "integer",
          "format": "int64"
        },
        "groupID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Right": {
      "type": "object",
      "properties": {
        "entityID": {
          "type": "integer",
          "format": "int64"
        },
        "entityType": {
          "description": "collection\n",
          "type": "string"
        },
        "level": {
          "description": "none | read | write | admin\n",
          "type": "string"
        },
        "userID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Root": {
      "type": "object",
      "required": [
        "ID"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "ownerUserID": {
          "type": "integer",
          "format": "int64"
        },
        "usersIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "x-omitempty": false
        }
      }
    },
    "Roots": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Root"
          },
          "x-omitempty": false
        }
      }
    },
    "ServiceMessage": {
      "type": "object",
      "required": [
        "typo"
      ],
      "properties": {
        "serviceMessageChatAvatarChanged": {
          "$ref": "#/definitions/ServiceMessageChatAvatarChanged"
        },
        "serviceMessageChatCreated": {
          "$ref": "#/definitions/ServiceMessageChatCreated"
        },
        "serviceMessageChatTitleChanged": {
          "$ref": "#/definitions/ServiceMessageChatTitleChanged"
        },
        "serviceMessageChatUserAdded": {
          "$ref": "#/definitions/ServiceMessageChatUserAdded"
        },
        "serviceMessageChatUserDeleted": {
          "$ref": "#/definitions/ServiceMessageChatUserDeleted"
        },
        "serviceMessageInvite": {
          "$ref": "#/definitions/ServiceMessageInvite"
        },
        "serviceMessageInviteStatusChanged": {
          "$ref": "#/definitions/ServiceMessageInviteStatusChanged"
        },
        "serviceMessageTask": {
          "$ref": "#/definitions/ServiceMessageTask"
        },
        "typo": {
          "description": "1 - ServiceMessageChatCreated\n2 - ServiceMessageChatUserAdded\n3 - ServiceMessageChatUserDeleted\n4 - ServiceMessageChatTitleChanged\n5 - ServiceMessageChatAvatarChanged\n6 - ServiceMessageInvite\n7 - ServiceMessageTask\n8 - ServiceMessageInviteStatusChanged\n",
          "type": "integer",
          "format": "int16"
        }
      }
    },
    "ServiceMessageChatAvatarChanged": {
      "type": "object",
      "properties": {
        "newAvatarID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        }
      }
    },
    "ServiceMessageChatCreated": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "ServiceMessageChatTitleChanged": {
      "type": "object",
      "required": [
        "newTitle"
      ],
      "properties": {
        "newTitle": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "ServiceMessageChatUserAdded": {
      "type": "object",
      "required": [
        "userID"
      ],
      "properties": {
        "userID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ServiceMessageChatUserDeleted": {
      "type": "object",
      "required": [
        "userID"
      ],
      "properties": {
        "userID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ServiceMessageInvite": {
      "type": "object",
      "required": [
        "fromUserID",
        "toUserID",
        "rootID",
        "status"
      ],
      "properties": {
        "fromUserID": {
          "type": "integer",
          "format": "int64"
        },
        "inviteID": {
          "type": "integer",
          "format": "int64"
        },
        "rootID": {
          "type": "integer",
          "format": "int64"
        },
        "rootOwnerID": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "description": "Created  = 0\nAccepted = 10\nRejected = 20\nCanceled = 101\n",
          "type": "integer",
          "format": "int16"
        },
        "toUserID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ServiceMessageInviteStatusChanged": {
      "type": "object",
      "properties": {
        "inviteID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "inviteStatus": {
          "description": "Created  = 0\nAccepted = 10\nRejected = 20\nCanceled = 101\n",
          "type": "integer",
          "format": "int16"
        },
        "media": {
          "$ref": "#/definitions/Media"
        },
        "user": {
          "$ref": "#/definitions/User"
        }
      }
    },
    "ServiceMessageTask": {
      "type": "object",
      "properties": {
        "actorUserID": {
          "type": "integer",
          "format": "int64"
        },
        "actorUserName": {
          "type": "string"
        },
        "changedArchive": {
          "type": "boolean"
        },
        "changedAssignedUser": {
          "type": "boolean"
        },
        "changedStatus": {
          "type": "boolean"
        },
        "newArchiveStatus": {
          "type": "boolean"
        },
        "newAssignedUserID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "newStatus": {
          "type": "string"
        },
        "newTask": {
          "type": "boolean"
        },
        "taskID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "taskTitle": {
          "type": "string",
          "x-nullable": true
        },
        "wasChanged": {
          "type": "boolean"
        },
        "wasDeleted": {
          "type": "boolean"
        }
      }
    },
    "TUser": {
      "type": "object",
      "required": [
        "userID"
      ],
      "properties": {
        "tasksCnt": {
          "description": "TBD",
          "type": "integer",
          "format": "int32"
        },
        "userID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "TUsers": {
      "type": "object",
      "required": [
        "list"
      ],
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TUser"
          },
          "x-omitempty": false
        }
      }
    },
    "Task": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "archive": {
          "type": "boolean"
        },
        "assignedUserID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "clientUniqID": {
          "type": "integer",
          "format": "int64"
        },
        "collectionsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "creationTime": {
          "description": "date-time - RFC3339",
          "type": "string"
        },
        "creatorUserID": {
          "type": "integer",
          "format": "int64"
        },
        "deadline": {
          "description": "date - RFC3339",
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "type": "string"
        },
        "groupsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "mediasIDs": {
          "description": "type = 30\n",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "objectsIDs": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "status": {
          "description": "todo | in_progress | done\n",
          "type": "string"
        },
        "title": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "TaskPreview": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "accessLevel": {
          "description": "none | read | write | admin\n",
          "type": "string"
        },
        "archive": {
          "type": "boolean"
        },
        "assignedUserID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "clientUniqID": {
          "type": "integer",
          "format": "int64"
        },
        "creationTime": {
          "description": "date-time - RFC3339",
          "type": "string"
        },
        "creatorUserID": {
          "type": "integer",
          "format": "int64"
        },
        "deadline": {
          "description": "date - RFC3339",
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "type": "string"
        },
        "status": {
          "description": "todo | in_progress | done\n",
          "type": "string"
        },
        "title": {
          "type": "string",
          "minLength": 1
        },
        "withMedias": {
          "type": "boolean"
        }
      }
    },
    "TextMessage": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "minLength": 1
        }
      }
    },
    "User": {
      "type": "object",
      "required": [
        "ID",
        "email"
      ],
      "properties": {
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "avatarMediaID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": true
        },
        "description": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "minLength": 1
        },
        "firstName": {
          "type": "string"
        },
        "isAnonymous": {
          "type": "boolean"
        },
        "lastName": {
          "type": "string"
        },
        "speciality": {
          "type": "string",
          "x-nullable": true
        },
        "systemUser": {
          "type": "boolean"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "UserCollection": {
      "type": "object",
      "required": [
        "userID",
        "collectionID"
      ],
      "properties": {
        "collectionID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": false
        },
        "userID": {
          "type": "integer",
          "format": "int64",
          "x-nullable": false
        }
      }
    },
    "Users": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User"
          },
          "x-omitempty": false
        }
      }
    },
    "UsersCollections": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserCollection"
          },
          "x-omitempty": false
        }
      }
    },
    "Valuation": {
      "type": "object",
      "required": [
        "price",
        "currencyID"
      ],
      "properties": {
        "comment": {
          "type": "string"
        },
        "currencyID": {
          "type": "integer",
          "format": "int64"
        },
        "date": {
          "description": "date - RFC3339",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "type": "array",
          "maxItems": 2,
          "minItems": 2,
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "x-omitempty": false
        }
      }
    },
    "Valuations": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Valuation"
          },
          "x-omitempty": false
        }
      }
    },
    "collectionValuation": {
      "type": "object",
      "properties": {
        "currencyID": {
          "type": "integer",
          "format": "int64"
        },
        "price": {
          "type": "integer",
          "format": "int64"
        }
      },
      "x-go-gen-location": "models"
    },
    "groupValuation": {
      "type": "object",
      "properties": {
        "currencyID": {
          "type": "integer",
          "format": "int64"
        },
        "price": {
          "type": "integer",
          "format": "int64"
        }
      },
      "x-go-gen-location": "models"
    }
  },
  "securityDefinitions": {
    "apiKey": {
      "type": "apiKey",
      "name": "Auth-token",
      "in": "header"
    }
  }
}`))
}
