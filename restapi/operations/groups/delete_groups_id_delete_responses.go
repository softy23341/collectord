// Code generated by go-swagger; DO NOT EDIT.

package groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "git.softndit.com/collector/backend/models"
)

// DeleteGroupsIDDeleteNoContentCode is the HTTP code returned for type DeleteGroupsIDDeleteNoContent
const DeleteGroupsIDDeleteNoContentCode int = 204

/*DeleteGroupsIDDeleteNoContent success

swagger:response deleteGroupsIdDeleteNoContent
*/
type DeleteGroupsIDDeleteNoContent struct {
}

// NewDeleteGroupsIDDeleteNoContent creates DeleteGroupsIDDeleteNoContent with default headers values
func NewDeleteGroupsIDDeleteNoContent() *DeleteGroupsIDDeleteNoContent {

	return &DeleteGroupsIDDeleteNoContent{}
}

// WriteResponse to the client
func (o *DeleteGroupsIDDeleteNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DeleteGroupsIDDeleteForbiddenCode is the HTTP code returned for type DeleteGroupsIDDeleteForbidden
const DeleteGroupsIDDeleteForbiddenCode int = 403

/*DeleteGroupsIDDeleteForbidden Forbidden

swagger:response deleteGroupsIdDeleteForbidden
*/
type DeleteGroupsIDDeleteForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteGroupsIDDeleteForbidden creates DeleteGroupsIDDeleteForbidden with default headers values
func NewDeleteGroupsIDDeleteForbidden() *DeleteGroupsIDDeleteForbidden {

	return &DeleteGroupsIDDeleteForbidden{}
}

// WithPayload adds the payload to the delete groups Id delete forbidden response
func (o *DeleteGroupsIDDeleteForbidden) WithPayload(payload *models.Error) *DeleteGroupsIDDeleteForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete groups Id delete forbidden response
func (o *DeleteGroupsIDDeleteForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteGroupsIDDeleteForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteGroupsIDDeleteNotFoundCode is the HTTP code returned for type DeleteGroupsIDDeleteNotFound
const DeleteGroupsIDDeleteNotFoundCode int = 404

/*DeleteGroupsIDDeleteNotFound cant find group

swagger:response deleteGroupsIdDeleteNotFound
*/
type DeleteGroupsIDDeleteNotFound struct {
}

// NewDeleteGroupsIDDeleteNotFound creates DeleteGroupsIDDeleteNotFound with default headers values
func NewDeleteGroupsIDDeleteNotFound() *DeleteGroupsIDDeleteNotFound {

	return &DeleteGroupsIDDeleteNotFound{}
}

// WriteResponse to the client
func (o *DeleteGroupsIDDeleteNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

/*DeleteGroupsIDDeleteDefault Unexpected error

swagger:response deleteGroupsIdDeleteDefault
*/
type DeleteGroupsIDDeleteDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteGroupsIDDeleteDefault creates DeleteGroupsIDDeleteDefault with default headers values
func NewDeleteGroupsIDDeleteDefault(code int) *DeleteGroupsIDDeleteDefault {
	if code <= 0 {
		code = 500
	}

	return &DeleteGroupsIDDeleteDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete groups ID delete default response
func (o *DeleteGroupsIDDeleteDefault) WithStatusCode(code int) *DeleteGroupsIDDeleteDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete groups ID delete default response
func (o *DeleteGroupsIDDeleteDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete groups ID delete default response
func (o *DeleteGroupsIDDeleteDefault) WithPayload(payload *models.Error) *DeleteGroupsIDDeleteDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete groups ID delete default response
func (o *DeleteGroupsIDDeleteDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteGroupsIDDeleteDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
